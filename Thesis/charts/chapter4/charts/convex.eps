%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: convex.pdf
%%Creator: Adobe Acrobat 10.1.16
%%For: a0048267
%%CreationDate: 19/1/2016, AM 11:00:07
%%BoundingBox: -1 0 513 361
%%HiResBoundingBox: 0 0 512.6523 360.9620
%%CropBox: 0 0 512.6523 360.9620
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1078 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2015-10-17T17:27:05+08:00"
   xmp:CreatorTool="PScript5.dll Version 5.2.2"
   xmp:ModifyDate="2015-10-17T17:27:11+08:00"
   xmp:MetadataDate="2015-10-17T17:27:11+08:00"
   pdf:Producer="Acrobat Distiller 10.1.16 (Windows)"
   xmpMM:DocumentID="uuid:a26d30b0-bce8-4f4d-a0ef-ecd1d91eaed2"
   xmpMM:InstanceID="uuid:31fc44b7-e38c-4236-8a98-cab7cfd3233b">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>a0048267</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">draft.xlsx</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -360.962 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-1.52588e-5 0 mo
-1.52588e-5 360.962 li
512.652 360.962 li
512.652 0 li
cp
clp
8.59118 360.962 mo
502.991 360.962 li
502.991 4.20197 li
8.59118 4.20197 li
cp
false sop
0 0 0 0 cmyk
f
54.5512 323.642 mo
481.511 323.642 li
481.511 14.642 li
54.5512 14.642 li
cp
f
54.1912 323.522 mo
55.0312 323.522 li
55.0312 14.642 li
54.1912 14.642 li
cp
0 0 0 .563378 cmyk
f
54.5512 324.002 mo
481.511 324.002 li
481.511 323.162 li
54.5512 323.162 li
cp
f
55.2712 205.202 mo
55.7512 237.842 li
55.6312 237.722 li
56.2312 237.722 li
56.3512 237.842 li
56.8312 255.002 li
56.7112 254.882 li
59.4712 254.882 li
59.5912 255.002 li
60.0712 260.162 li
60.5512 272.162 li
61.1512 273.842 li
61.0312 273.722 li
64.2712 273.722 li
64.3912 273.842 li
64.8712 277.322 li
64.7512 277.202 li
65.8312 277.202 li
67.4312 277.202 69.0312 277.202 70.6312 277.202 cv
75.9112 277.202 li
76.0312 277.322 li
76.6312 282.482 li
77.1112 287.522 li
76.9912 287.402 li
82.3912 287.402 li
82.5112 287.522 li
82.9912 289.322 li
82.8712 289.202 li
83.9512 289.202 li
85.1912 289.202 86.4312 289.202 87.6712 289.202 cv
88.7512 289.202 li
90.1912 289.202 91.6312 289.202 93.0712 289.202 cv
93.1912 289.322 li
93.6712 292.682 li
93.5512 292.562 li
94.6312 292.562 li
100.871 292.562 107.111 292.562 113.351 292.562 cv
114.911 292.562 li
117.591 292.562 120.271 292.562 122.951 292.562 cv
124.031 292.562 li
126.871 292.562 129.711 292.562 132.551 292.562 cv
132.671 292.682 li
133.151 294.482 li
133.751 296.162 li
133.631 296.042 li
134.111 296.042 li
143.351 296.042 152.591 296.042 161.831 296.042 cv
161.951 296.162 li
161.831 296.282 li
161.351 296.282 li
156.911 296.282 152.471 296.282 148.031 296.282 cv
146.351 296.282 li
144.391 296.282 142.431 296.282 140.471 296.282 cv
139.511 296.282 li
137.551 296.282 135.591 296.282 133.631 296.282 cv
133.511 296.162 li
132.911 294.482 li
132.431 292.682 li
132.551 292.802 li
131.471 292.802 li
125.431 292.802 119.391 292.802 113.351 292.802 cv
112.271 292.802 li
106.031 292.802 99.7912 292.802 93.5512 292.802 cv
93.4312 292.682 li
92.9512 289.322 li
93.0712 289.442 li
91.9912 289.442 li
90.7512 289.442 89.5112 289.442 88.2712 289.442 cv
87.1912 289.442 li
85.7512 289.442 84.3112 289.442 82.8712 289.442 cv
82.7512 289.322 li
82.2712 287.522 li
82.3912 287.642 li
76.9912 287.642 li
76.8712 287.522 li
76.3912 282.482 li
75.7912 277.322 li
75.9112 277.442 li
74.8312 277.442 li
73.4312 277.442 72.0312 277.442 70.6312 277.442 cv
69.5512 277.442 li
67.9512 277.442 66.3512 277.442 64.7512 277.442 cv
64.6312 277.322 li
64.1512 273.842 li
64.2712 273.962 li
61.0312 273.962 li
60.9112 273.842 li
60.3112 272.162 li
59.8312 260.162 li
59.3512 255.002 li
59.4712 255.122 li
56.7112 255.122 li
56.5912 255.002 li
56.1112 237.842 li
56.2312 237.962 li
55.6312 237.962 li
55.5112 237.842 li
55.0312 205.202 li
55.1512 205.082 li
55.2712 205.202 li
.0681163 .69778 1 .00509651 cmyk
f
161.831 296.042 mo
162.911 296.042 li
164.871 296.042 166.831 296.042 168.791 296.042 cv
169.871 296.042 li
171.991 296.042 174.111 296.042 176.231 296.042 cv
176.351 296.162 li
176.951 297.842 li
176.831 297.722 li
177.911 297.722 li
181.271 297.722 184.631 297.722 187.991 297.722 cv
189.071 297.722 li
192.471 297.722 195.871 297.722 199.271 297.722 cv
199.391 297.842 li
199.871 299.642 li
199.751 299.522 li
200.351 299.522 li
223.111 299.522 245.871 299.522 268.631 299.522 cv
268.751 299.642 li
268.631 299.762 li
268.031 299.762 li
256.831 299.762 245.631 299.762 234.431 299.762 cv
233.351 299.762 li
222.151 299.762 210.951 299.762 199.751 299.762 cv
199.631 299.642 li
199.151 297.842 li
199.271 297.962 li
198.191 297.962 li
194.791 297.962 191.391 297.962 187.991 297.962 cv
186.911 297.962 li
183.551 297.962 180.191 297.962 176.831 297.962 cv
176.711 297.842 li
176.111 296.162 li
176.231 296.282 li
175.751 296.282 li
171.111 296.282 166.471 296.282 161.831 296.282 cv
161.711 296.162 li
161.831 296.042 li
f
268.631 299.522 mo
269.711 299.522 li
271.311 299.522 272.911 299.522 274.511 299.522 cv
275.591 299.522 li
277.191 299.522 278.791 299.522 280.391 299.522 cv
280.511 299.642 li
280.991 301.322 li
280.871 301.202 li
281.951 301.202 li
285.151 301.202 288.351 301.202 291.551 301.202 cv
292.631 301.202 li
295.991 301.202 299.351 301.202 302.711 301.202 cv
302.831 301.322 li
303.431 303.002 li
303.311 302.882 li
303.791 302.882 li
327.631 302.882 351.471 302.882 375.311 302.882 cv
375.431 303.002 li
375.311 303.122 li
374.831 303.122 li
363.071 303.122 351.311 303.122 339.551 303.122 cv
338.471 303.122 li
326.751 303.122 315.031 303.122 303.311 303.122 cv
303.191 303.002 li
302.591 301.322 li
302.711 301.442 li
301.631 301.442 li
298.431 301.442 295.231 301.442 292.031 301.442 cv
291.071 301.442 li
287.671 301.442 284.271 301.442 280.871 301.442 cv
280.751 301.322 li
280.271 299.642 li
280.391 299.762 li
279.791 299.762 li
276.071 299.762 272.351 299.762 268.631 299.762 cv
268.511 299.642 li
268.631 299.522 li
f
gsave
54.5512 14.522 mo
482.471 14.522 li
482.471 324.482 li
54.5512 324.482 li
cp
eclp
gsave
-41.8088 -258.758 mo
553.391 -258.758 li
553.391 583.282 li
-41.8088 583.282 li
cp
clp
375.311 302.882 mo
376.391 302.882 li
385.631 302.882 394.871 302.882 404.111 302.882 cv
405.191 302.882 li
414.431 302.882 423.671 302.882 432.911 302.882 cv
433.031 303.002 li
433.631 304.682 li
433.511 304.562 li
434.591 304.562 li
436.911 304.562 439.231 304.562 441.551 304.562 cv
442.511 304.562 li
444.831 304.562 447.151 304.562 449.471 304.562 cv
449.591 304.682 li
450.191 306.482 li
450.071 306.362 li
450.551 306.362 li
461.071 306.362 471.591 306.362 482.111 306.362 cv
482.231 306.482 li
482.111 306.602 li
481.511 306.602 li
476.551 306.602 471.591 306.602 466.631 306.602 cv
465.551 306.602 li
460.391 306.602 455.231 306.602 450.071 306.602 cv
449.951 306.482 li
449.351 304.682 li
449.471 304.802 li
448.391 304.802 li
446.111 304.802 443.831 304.802 441.551 304.802 cv
440.471 304.802 li
438.151 304.802 435.831 304.802 433.511 304.802 cv
433.391 304.682 li
432.791 303.002 li
432.911 303.122 li
432.431 303.122 li
413.391 303.122 394.351 303.122 375.311 303.122 cv
375.191 303.002 li
375.311 302.882 li
f
482.111 306.362 mo
483.071 306.362 li
488.431 306.362 493.791 306.362 499.151 306.362 cv
500.231 306.362 li
505.751 306.362 511.271 306.362 516.791 306.362 cv
516.911 306.482 li
517.391 309.842 li
517.271 309.722 li
520.991 309.722 li
521.111 309.842 li
521.711 313.322 li
521.591 313.202 li
522.671 313.202 li
525.151 313.202 527.631 313.202 530.111 313.202 cv
531.191 313.202 li
533.671 313.202 536.151 313.202 538.631 313.202 cv
538.751 313.322 li
539.231 320.162 li
539.111 320.042 li
539.711 320.042 li
554.111 320.042 568.511 320.042 582.911 320.042 cv
583.031 320.162 li
582.911 320.282 li
582.431 320.282 li
575.471 320.282 568.511 320.282 561.551 320.282 cv
560.471 320.282 li
553.351 320.282 546.231 320.282 539.111 320.282 cv
538.991 320.162 li
538.511 313.322 li
538.631 313.442 li
537.551 313.442 li
535.071 313.442 532.591 313.442 530.111 313.442 cv
529.031 313.442 li
526.551 313.442 524.071 313.442 521.591 313.442 cv
521.471 313.322 li
520.871 309.842 li
520.991 309.962 li
517.271 309.962 li
517.151 309.842 li
516.671 306.482 li
516.791 306.602 li
516.191 306.602 li
504.831 306.602 493.471 306.602 482.111 306.602 cv
481.991 306.482 li
482.111 306.362 li
f
grestore
grestore
53.3512 207.002 mo
57.0712 207.002 li
57.0712 203.402 li
53.3512 203.402 li
cp
f
53.8312 239.642 mo
57.5512 239.642 li
57.5512 235.922 li
53.8312 235.922 li
cp
f
54.4312 239.642 mo
58.1512 239.642 li
58.1512 235.922 li
54.4312 235.922 li
cp
f
54.9112 256.802 mo
58.6312 256.802 li
58.6312 253.082 li
54.9112 253.082 li
cp
f
55.5112 256.802 mo
59.2312 256.802 li
59.2312 253.082 li
55.5112 253.082 li
cp
f
55.9912 256.802 mo
59.7112 256.802 li
59.7112 253.082 li
55.9912 253.082 li
cp
f
56.4712 256.802 mo
60.1912 256.802 li
60.1912 253.082 li
56.4712 253.082 li
cp
f
57.0712 256.802 mo
60.7912 256.802 li
60.7912 253.082 li
57.0712 253.082 li
cp
f
57.5512 256.802 mo
61.2712 256.802 li
61.2712 253.082 li
57.5512 253.082 li
cp
f
58.1512 261.962 mo
61.8712 261.962 li
61.8712 258.362 li
58.1512 258.362 li
cp
f
58.6312 273.962 mo
62.3512 273.962 li
62.3512 270.362 li
58.6312 270.362 li
cp
f
59.2312 275.642 mo
62.9512 275.642 li
62.9512 272.042 li
59.2312 272.042 li
cp
f
59.7112 275.642 mo
63.4312 275.642 li
63.4312 272.042 li
59.7112 272.042 li
cp
f
60.3112 275.642 mo
64.0312 275.642 li
64.0312 272.042 li
60.3112 272.042 li
cp
f
60.7912 275.642 mo
64.5112 275.642 li
64.5112 272.042 li
60.7912 272.042 li
cp
f
61.3912 275.642 mo
65.1112 275.642 li
65.1112 272.042 li
61.3912 272.042 li
cp
f
61.8712 275.642 mo
65.5912 275.642 li
65.5912 272.042 li
61.8712 272.042 li
cp
f
62.4712 275.642 mo
66.1912 275.642 li
66.1912 272.042 li
62.4712 272.042 li
cp
f
62.9512 279.122 mo
66.5512 279.122 li
66.5512 275.402 li
62.9512 275.402 li
cp
f
63.5512 279.122 mo
67.2712 279.122 li
67.2712 275.402 li
63.5512 275.402 li
cp
f
64.0312 279.122 mo
67.6312 279.122 li
67.6312 275.402 li
64.0312 275.402 li
cp
f
64.6312 279.122 mo
68.3512 279.122 li
68.3512 275.402 li
64.6312 275.402 li
cp
f
65.1112 279.122 mo
68.7112 279.122 li
68.7112 275.402 li
65.1112 275.402 li
cp
f
65.7112 279.122 mo
69.4312 279.122 li
69.4312 275.402 li
65.7112 275.402 li
cp
f
66.1912 279.122 mo
69.7912 279.122 li
69.7912 275.402 li
66.1912 275.402 li
cp
f
66.5512 279.122 mo
70.2712 279.122 li
70.2712 275.402 li
66.5512 275.402 li
cp
f
67.2712 279.122 mo
70.8712 279.122 li
70.8712 275.402 li
67.2712 275.402 li
cp
f
67.6312 279.122 mo
71.3512 279.122 li
71.3512 275.402 li
67.6312 275.402 li
cp
f
68.3512 279.122 mo
71.9512 279.122 li
71.9512 275.402 li
68.3512 275.402 li
cp
f
68.7112 279.122 mo
72.4312 279.122 li
72.4312 275.402 li
68.7112 275.402 li
cp
f
69.4312 279.122 mo
73.0312 279.122 li
73.0312 275.402 li
69.4312 275.402 li
cp
f
69.7912 279.122 mo
73.5112 279.122 li
73.5112 275.402 li
69.7912 275.402 li
cp
f
70.3912 279.122 mo
74.1112 279.122 li
74.1112 275.402 li
70.3912 275.402 li
cp
f
70.8712 279.122 mo
74.5912 279.122 li
74.5912 275.402 li
70.8712 275.402 li
cp
f
71.4712 279.122 mo
75.1912 279.122 li
75.1912 275.402 li
71.4712 275.402 li
cp
f
71.9512 279.122 mo
75.6712 279.122 li
75.6712 275.402 li
71.9512 275.402 li
cp
f
72.5512 279.122 mo
76.2712 279.122 li
76.2712 275.402 li
72.5512 275.402 li
cp
f
73.0312 279.122 mo
76.7512 279.122 li
76.7512 275.402 li
73.0312 275.402 li
cp
f
73.6312 279.122 mo
77.3512 279.122 li
77.3512 275.402 li
73.6312 275.402 li
cp
f
74.1112 279.122 mo
77.8312 279.122 li
77.8312 275.402 li
74.1112 275.402 li
cp
f
74.7112 284.282 mo
78.4312 284.282 li
78.4312 280.562 li
74.7112 280.562 li
cp
f
75.1912 289.322 mo
78.9112 289.322 li
78.9112 285.722 li
75.1912 285.722 li
cp
f
75.7912 289.322 mo
79.5112 289.322 li
79.5112 285.722 li
75.7912 285.722 li
cp
f
76.2712 289.322 mo
79.9912 289.322 li
79.9912 285.722 li
76.2712 285.722 li
cp
f
76.8712 289.322 mo
80.5912 289.322 li
80.5912 285.722 li
76.8712 285.722 li
cp
f
77.3512 289.322 mo
81.0712 289.322 li
81.0712 285.722 li
77.3512 285.722 li
cp
f
77.8312 289.322 mo
81.5512 289.322 li
81.5512 285.722 li
77.8312 285.722 li
cp
f
78.4312 289.322 mo
82.1512 289.322 li
82.1512 285.722 li
78.4312 285.722 li
cp
f
78.9112 289.322 mo
82.6312 289.322 li
82.6312 285.722 li
78.9112 285.722 li
cp
f
79.5112 289.322 mo
83.2312 289.322 li
83.2312 285.722 li
79.5112 285.722 li
cp
f
79.9912 289.322 mo
83.7112 289.322 li
83.7112 285.722 li
79.9912 285.722 li
cp
f
80.5912 289.322 mo
84.3112 289.322 li
84.3112 285.722 li
80.5912 285.722 li
cp
f
81.0712 291.242 mo
84.6712 291.242 li
84.6712 287.522 li
81.0712 287.522 li
cp
f
81.6712 291.242 mo
85.3912 291.242 li
85.3912 287.522 li
81.6712 287.522 li
cp
f
82.1512 291.242 mo
85.7512 291.242 li
85.7512 287.522 li
82.1512 287.522 li
cp
f
82.7512 291.242 mo
86.4712 291.242 li
86.4712 287.522 li
82.7512 287.522 li
cp
f
83.2312 291.242 mo
86.8312 291.242 li
86.8312 287.522 li
83.2312 287.522 li
cp
f
83.8312 291.242 mo
87.5512 291.242 li
87.5512 287.522 li
83.8312 287.522 li
cp
f
84.3112 291.242 mo
87.9112 291.242 li
87.9112 287.522 li
84.3112 287.522 li
cp
f
84.9112 291.242 mo
88.5112 291.242 li
88.5112 287.522 li
84.9112 287.522 li
cp
f
85.3912 291.242 mo
88.9912 291.242 li
88.9912 287.522 li
85.3912 287.522 li
cp
f
85.9912 291.242 mo
89.5912 291.242 li
89.5912 287.522 li
85.9912 287.522 li
cp
f
86.4712 291.242 mo
90.0712 291.242 li
90.0712 287.522 li
86.4712 287.522 li
cp
f
87.0712 291.242 mo
90.6712 291.242 li
90.6712 287.522 li
87.0712 287.522 li
cp
f
87.5512 291.242 mo
91.1512 291.242 li
91.1512 287.522 li
87.5512 287.522 li
cp
f
87.9112 291.242 mo
91.6312 291.242 li
91.6312 287.522 li
87.9112 287.522 li
cp
f
88.5112 291.242 mo
92.2312 291.242 li
92.2312 287.522 li
88.5112 287.522 li
cp
f
88.9912 291.242 mo
92.7112 291.242 li
92.7112 287.522 li
88.9912 287.522 li
cp
f
89.5912 291.242 mo
93.3112 291.242 li
93.3112 287.522 li
89.5912 287.522 li
cp
f
90.0712 291.242 mo
93.7912 291.242 li
93.7912 287.522 li
90.0712 287.522 li
cp
f
90.6712 291.242 mo
94.3912 291.242 li
94.3912 287.522 li
90.6712 287.522 li
cp
f
91.1512 291.242 mo
94.8712 291.242 li
94.8712 287.522 li
91.1512 287.522 li
cp
f
91.7512 294.602 mo
95.4712 294.602 li
95.4712 290.882 li
91.7512 290.882 li
cp
f
92.2312 294.602 mo
95.9512 294.602 li
95.9512 290.882 li
92.2312 290.882 li
cp
f
92.8312 294.602 mo
96.5512 294.602 li
96.5512 290.882 li
92.8312 290.882 li
cp
f
93.3112 294.602 mo
97.0312 294.602 li
97.0312 290.882 li
93.3112 290.882 li
cp
f
93.9112 294.602 mo
97.6312 294.602 li
97.6312 290.882 li
93.9112 290.882 li
cp
f
94.3912 294.602 mo
98.1112 294.602 li
98.1112 290.882 li
94.3912 290.882 li
cp
f
94.9912 294.602 mo
98.7112 294.602 li
98.7112 290.882 li
94.9912 290.882 li
cp
f
95.4712 294.602 mo
99.1912 294.602 li
99.1912 290.882 li
95.4712 290.882 li
cp
f
96.0712 294.602 mo
99.7912 294.602 li
99.7912 290.882 li
96.0712 290.882 li
cp
f
96.5512 294.602 mo
100.271 294.602 li
100.271 290.882 li
96.5512 290.882 li
cp
f
97.1512 294.602 mo
100.871 294.602 li
100.871 290.882 li
97.1512 290.882 li
cp
f
97.6312 294.602 mo
101.351 294.602 li
101.351 290.882 li
97.6312 290.882 li
cp
f
98.2312 294.602 mo
101.951 294.602 li
101.951 290.882 li
98.2312 290.882 li
cp
f
98.7112 294.602 mo
102.431 294.602 li
102.431 290.882 li
98.7112 290.882 li
cp
f
99.1912 294.602 mo
102.791 294.602 li
102.791 290.882 li
99.1912 290.882 li
cp
f
99.7912 294.602 mo
103.511 294.602 li
103.511 290.882 li
99.7912 290.882 li
cp
f
100.271 294.602 mo
103.871 294.602 li
103.871 290.882 li
100.271 290.882 li
cp
f
100.871 294.602 mo
104.591 294.602 li
104.591 290.882 li
100.871 290.882 li
cp
f
101.351 294.602 mo
104.951 294.602 li
104.951 290.882 li
101.351 290.882 li
cp
f
101.951 294.602 mo
105.671 294.602 li
105.671 290.882 li
101.951 290.882 li
cp
f
102.431 294.602 mo
106.031 294.602 li
106.031 290.882 li
102.431 290.882 li
cp
f
103.031 294.602 mo
106.631 294.602 li
106.631 290.882 li
103.031 290.882 li
cp
f
103.511 294.602 mo
107.111 294.602 li
107.111 290.882 li
103.511 290.882 li
cp
f
104.111 294.602 mo
107.711 294.602 li
107.711 290.882 li
104.111 290.882 li
cp
f
104.591 294.602 mo
108.191 294.602 li
108.191 290.882 li
104.591 290.882 li
cp
f
105.191 294.602 mo
108.791 294.602 li
108.791 290.882 li
105.191 290.882 li
cp
f
105.671 294.602 mo
109.271 294.602 li
109.271 290.882 li
105.671 290.882 li
cp
f
106.271 294.602 mo
109.871 294.602 li
109.871 290.882 li
106.271 290.882 li
cp
f
106.631 294.602 mo
110.351 294.602 li
110.351 290.882 li
106.631 290.882 li
cp
f
107.351 294.602 mo
110.951 294.602 li
110.951 290.882 li
107.351 290.882 li
cp
f
107.711 294.602 mo
111.431 294.602 li
111.431 290.882 li
107.711 290.882 li
cp
f
108.431 294.602 mo
112.031 294.602 li
112.031 290.882 li
108.431 290.882 li
cp
f
108.791 294.602 mo
112.511 294.602 li
112.511 290.882 li
108.791 290.882 li
cp
f
109.271 294.602 mo
112.991 294.602 li
112.991 290.882 li
109.271 290.882 li
cp
f
109.871 294.602 mo
113.591 294.602 li
113.591 290.882 li
109.871 290.882 li
cp
f
110.351 294.602 mo
114.071 294.602 li
114.071 290.882 li
110.351 290.882 li
cp
f
110.951 294.602 mo
114.671 294.602 li
114.671 290.882 li
110.951 290.882 li
cp
f
111.431 294.602 mo
115.151 294.602 li
115.151 290.882 li
111.431 290.882 li
cp
f
112.031 294.602 mo
115.751 294.602 li
115.751 290.882 li
112.031 290.882 li
cp
f
112.511 294.602 mo
116.231 294.602 li
116.231 290.882 li
112.511 290.882 li
cp
f
113.111 294.602 mo
116.831 294.602 li
116.831 290.882 li
113.111 290.882 li
cp
f
113.591 294.602 mo
117.311 294.602 li
117.311 290.882 li
113.591 290.882 li
cp
f
114.191 294.602 mo
117.911 294.602 li
117.911 290.882 li
114.191 290.882 li
cp
f
114.671 294.602 mo
118.391 294.602 li
118.391 290.882 li
114.671 290.882 li
cp
f
115.271 294.602 mo
118.991 294.602 li
118.991 290.882 li
115.271 290.882 li
cp
f
115.751 294.602 mo
119.471 294.602 li
119.471 290.882 li
115.751 290.882 li
cp
f
116.351 294.602 mo
120.071 294.602 li
120.071 290.882 li
116.351 290.882 li
cp
f
116.831 294.602 mo
120.551 294.602 li
120.551 290.882 li
116.831 290.882 li
cp
f
117.431 294.602 mo
121.151 294.602 li
121.151 290.882 li
117.431 290.882 li
cp
f
117.911 294.602 mo
121.631 294.602 li
121.631 290.882 li
117.911 290.882 li
cp
f
118.511 294.602 mo
122.231 294.602 li
122.231 290.882 li
118.511 290.882 li
cp
f
118.991 294.602 mo
122.711 294.602 li
122.711 290.882 li
118.991 290.882 li
cp
f
119.591 294.602 mo
123.311 294.602 li
123.311 290.882 li
119.591 290.882 li
cp
f
120.071 294.602 mo
123.791 294.602 li
123.791 290.882 li
120.071 290.882 li
cp
f
120.551 294.602 mo
124.151 294.602 li
124.151 290.882 li
120.551 290.882 li
cp
f
121.151 294.602 mo
124.751 294.602 li
124.751 290.882 li
121.151 290.882 li
cp
f
121.631 294.602 mo
125.231 294.602 li
125.231 290.882 li
121.631 290.882 li
cp
f
122.231 294.602 mo
125.831 294.602 li
125.831 290.882 li
122.231 290.882 li
cp
f
122.711 294.602 mo
126.311 294.602 li
126.311 290.882 li
122.711 290.882 li
cp
f
123.311 294.602 mo
126.911 294.602 li
126.911 290.882 li
123.311 290.882 li
cp
f
123.791 294.602 mo
127.391 294.602 li
127.391 290.882 li
123.791 290.882 li
cp
f
124.391 294.602 mo
127.991 294.602 li
127.991 290.882 li
124.391 290.882 li
cp
f
124.751 294.602 mo
128.471 294.602 li
128.471 290.882 li
124.751 290.882 li
cp
f
125.471 294.602 mo
129.071 294.602 li
129.071 290.882 li
125.471 290.882 li
cp
f
125.831 294.602 mo
129.551 294.602 li
129.551 290.882 li
125.831 290.882 li
cp
f
126.551 294.602 mo
130.151 294.602 li
130.151 290.882 li
126.551 290.882 li
cp
f
126.911 294.602 mo
130.631 294.602 li
130.631 290.882 li
126.911 290.882 li
cp
f
127.631 294.602 mo
131.231 294.602 li
131.231 290.882 li
127.631 290.882 li
cp
f
127.991 294.602 mo
131.711 294.602 li
131.711 290.882 li
127.991 290.882 li
cp
f
128.591 294.602 mo
132.311 294.602 li
132.311 290.882 li
128.591 290.882 li
cp
f
129.071 294.602 mo
132.791 294.602 li
132.791 290.882 li
129.071 290.882 li
cp
f
129.671 294.602 mo
133.391 294.602 li
133.391 290.882 li
129.671 290.882 li
cp
f
130.151 294.602 mo
133.871 294.602 li
133.871 290.882 li
130.151 290.882 li
cp
f
130.631 294.602 mo
134.351 294.602 li
134.351 290.882 li
130.631 290.882 li
cp
f
131.231 296.282 mo
134.951 296.282 li
134.951 292.562 li
131.231 292.562 li
cp
f
131.711 297.962 mo
135.431 297.962 li
135.431 294.242 li
131.711 294.242 li
cp
f
132.311 297.962 mo
136.031 297.962 li
136.031 294.242 li
132.311 294.242 li
cp
f
132.791 297.962 mo
136.511 297.962 li
136.511 294.242 li
132.791 294.242 li
cp
f
133.391 297.962 mo
137.111 297.962 li
137.111 294.242 li
133.391 294.242 li
cp
f
133.871 297.962 mo
137.591 297.962 li
137.591 294.242 li
133.871 294.242 li
cp
f
134.471 297.962 mo
138.191 297.962 li
138.191 294.242 li
134.471 294.242 li
cp
f
134.951 297.962 mo
138.671 297.962 li
138.671 294.242 li
134.951 294.242 li
cp
f
135.551 297.962 mo
139.271 297.962 li
139.271 294.242 li
135.551 294.242 li
cp
f
136.031 297.962 mo
139.751 297.962 li
139.751 294.242 li
136.031 294.242 li
cp
f
136.631 297.962 mo
140.351 297.962 li
140.351 294.242 li
136.631 294.242 li
cp
f
137.111 297.962 mo
140.831 297.962 li
140.831 294.242 li
137.111 294.242 li
cp
f
137.711 297.962 mo
141.431 297.962 li
141.431 294.242 li
137.711 294.242 li
cp
f
138.191 297.962 mo
141.911 297.962 li
141.911 294.242 li
138.191 294.242 li
cp
f
138.791 297.962 mo
142.511 297.962 li
142.511 294.242 li
138.791 294.242 li
cp
f
139.271 297.962 mo
142.871 297.962 li
142.871 294.242 li
139.271 294.242 li
cp
f
139.871 297.962 mo
143.591 297.962 li
143.591 294.242 li
139.871 294.242 li
cp
f
140.351 297.962 mo
143.951 297.962 li
143.951 294.242 li
140.351 294.242 li
cp
f
140.831 297.962 mo
144.431 297.962 li
144.431 294.242 li
140.831 294.242 li
cp
f
141.431 297.962 mo
145.031 297.962 li
145.031 294.242 li
141.431 294.242 li
cp
f
141.911 297.962 mo
145.511 297.962 li
145.511 294.242 li
141.911 294.242 li
cp
f
142.511 297.962 mo
146.111 297.962 li
146.111 294.242 li
142.511 294.242 li
cp
f
142.871 297.962 mo
146.591 297.962 li
146.591 294.242 li
142.871 294.242 li
cp
f
143.591 297.962 mo
147.191 297.962 li
147.191 294.242 li
143.591 294.242 li
cp
f
143.951 297.962 mo
147.671 297.962 li
147.671 294.242 li
143.951 294.242 li
cp
f
144.671 297.962 mo
148.271 297.962 li
148.271 294.242 li
144.671 294.242 li
cp
f
145.031 297.962 mo
148.751 297.962 li
148.751 294.242 li
145.031 294.242 li
cp
f
145.751 297.962 mo
149.351 297.962 li
149.351 294.242 li
145.751 294.242 li
cp
f
146.111 297.962 mo
149.831 297.962 li
149.831 294.242 li
146.111 294.242 li
cp
f
146.711 297.962 mo
150.431 297.962 li
150.431 294.242 li
146.711 294.242 li
cp
f
147.191 297.962 mo
150.911 297.962 li
150.911 294.242 li
147.191 294.242 li
cp
f
147.791 297.962 mo
151.511 297.962 li
151.511 294.242 li
147.791 294.242 li
cp
f
148.271 297.962 mo
151.991 297.962 li
151.991 294.242 li
148.271 294.242 li
cp
f
148.871 297.962 mo
152.591 297.962 li
152.591 294.242 li
148.871 294.242 li
cp
f
149.351 297.962 mo
153.071 297.962 li
153.071 294.242 li
149.351 294.242 li
cp
f
149.951 297.962 mo
153.671 297.962 li
153.671 294.242 li
149.951 294.242 li
cp
f
150.431 297.962 mo
154.151 297.962 li
154.151 294.242 li
150.431 294.242 li
cp
f
151.031 297.962 mo
154.751 297.962 li
154.751 294.242 li
151.031 294.242 li
cp
f
151.511 297.962 mo
155.231 297.962 li
155.231 294.242 li
151.511 294.242 li
cp
f
151.991 297.962 mo
155.711 297.962 li
155.711 294.242 li
151.991 294.242 li
cp
f
152.591 297.962 mo
156.311 297.962 li
156.311 294.242 li
152.591 294.242 li
cp
f
153.071 297.962 mo
156.791 297.962 li
156.791 294.242 li
153.071 294.242 li
cp
f
153.671 297.962 mo
157.391 297.962 li
157.391 294.242 li
153.671 294.242 li
cp
f
154.151 297.962 mo
157.871 297.962 li
157.871 294.242 li
154.151 294.242 li
cp
f
154.751 297.962 mo
158.471 297.962 li
158.471 294.242 li
154.751 294.242 li
cp
f
155.231 297.962 mo
158.951 297.962 li
158.951 294.242 li
155.231 294.242 li
cp
f
155.831 297.962 mo
159.551 297.962 li
159.551 294.242 li
155.831 294.242 li
cp
f
156.311 297.962 mo
160.031 297.962 li
160.031 294.242 li
156.311 294.242 li
cp
f
156.911 297.962 mo
160.631 297.962 li
160.631 294.242 li
156.911 294.242 li
cp
f
157.391 297.962 mo
161.111 297.962 li
161.111 294.242 li
157.391 294.242 li
cp
f
157.991 297.962 mo
161.711 297.962 li
161.711 294.242 li
157.991 294.242 li
cp
f
158.471 297.962 mo
162.071 297.962 li
162.071 294.242 li
158.471 294.242 li
cp
f
159.071 297.962 mo
162.791 297.962 li
162.791 294.242 li
159.071 294.242 li
cp
f
159.551 297.962 mo
163.151 297.962 li
163.151 294.242 li
159.551 294.242 li
cp
f
160.151 297.962 mo
163.871 297.962 li
163.871 294.242 li
160.151 294.242 li
cp
f
160.631 297.962 mo
164.231 297.962 li
164.231 294.242 li
160.631 294.242 li
cp
f
161.231 297.962 mo
164.951 297.962 li
164.951 294.242 li
161.231 294.242 li
cp
f
161.711 297.962 mo
165.311 297.962 li
165.311 294.242 li
161.711 294.242 li
cp
f
162.071 297.962 mo
165.791 297.962 li
165.791 294.242 li
162.071 294.242 li
cp
f
162.791 297.962 mo
166.391 297.962 li
166.391 294.242 li
162.791 294.242 li
cp
f
163.151 297.962 mo
166.871 297.962 li
166.871 294.242 li
163.151 294.242 li
cp
f
163.871 297.962 mo
167.471 297.962 li
167.471 294.242 li
163.871 294.242 li
cp
f
164.231 297.962 mo
167.951 297.962 li
167.951 294.242 li
164.231 294.242 li
cp
f
164.951 297.962 mo
168.551 297.962 li
168.551 294.242 li
164.951 294.242 li
cp
f
165.311 297.962 mo
169.031 297.962 li
169.031 294.242 li
165.311 294.242 li
cp
f
165.911 297.962 mo
169.631 297.962 li
169.631 294.242 li
165.911 294.242 li
cp
f
166.391 297.962 mo
170.111 297.962 li
170.111 294.242 li
166.391 294.242 li
cp
f
166.991 297.962 mo
170.711 297.962 li
170.711 294.242 li
166.991 294.242 li
cp
f
167.471 297.962 mo
171.191 297.962 li
171.191 294.242 li
167.471 294.242 li
cp
f
168.071 297.962 mo
171.791 297.962 li
171.791 294.242 li
168.071 294.242 li
cp
f
168.551 297.962 mo
172.271 297.962 li
172.271 294.242 li
168.551 294.242 li
cp
f
169.151 297.962 mo
172.871 297.962 li
172.871 294.242 li
169.151 294.242 li
cp
f
169.631 297.962 mo
173.351 297.962 li
173.351 294.242 li
169.631 294.242 li
cp
f
170.231 297.962 mo
173.951 297.962 li
173.951 294.242 li
170.231 294.242 li
cp
f
170.711 297.962 mo
174.431 297.962 li
174.431 294.242 li
170.711 294.242 li
cp
f
171.311 297.962 mo
175.031 297.962 li
175.031 294.242 li
171.311 294.242 li
cp
f
171.791 297.962 mo
175.511 297.962 li
175.511 294.242 li
171.791 294.242 li
cp
f
172.391 297.962 mo
176.111 297.962 li
176.111 294.242 li
172.391 294.242 li
cp
f
172.871 297.962 mo
176.591 297.962 li
176.591 294.242 li
172.871 294.242 li
cp
f
173.351 297.962 mo
177.071 297.962 li
177.071 294.242 li
173.351 294.242 li
cp
f
173.951 297.962 mo
177.671 297.962 li
177.671 294.242 li
173.951 294.242 li
cp
f
174.431 297.962 mo
178.151 297.962 li
178.151 294.242 li
174.431 294.242 li
cp
f
175.031 299.642 mo
178.751 299.642 li
178.751 295.922 li
175.031 295.922 li
cp
f
175.511 299.642 mo
179.231 299.642 li
179.231 295.922 li
175.511 295.922 li
cp
f
176.111 299.642 mo
179.831 299.642 li
179.831 295.922 li
176.111 295.922 li
cp
f
176.591 299.642 mo
180.191 299.642 li
180.191 295.922 li
176.591 295.922 li
cp
f
177.191 299.642 mo
180.911 299.642 li
180.911 295.922 li
177.191 295.922 li
cp
f
177.671 299.642 mo
181.271 299.642 li
181.271 295.922 li
177.671 295.922 li
cp
f
178.271 299.642 mo
181.991 299.642 li
181.991 295.922 li
178.271 295.922 li
cp
f
178.751 299.642 mo
182.351 299.642 li
182.351 295.922 li
178.751 295.922 li
cp
f
179.351 299.642 mo
183.071 299.642 li
183.071 295.922 li
179.351 295.922 li
cp
f
179.831 299.642 mo
183.431 299.642 li
183.431 295.922 li
179.831 295.922 li
cp
f
180.431 299.642 mo
184.031 299.642 li
184.031 295.922 li
180.431 295.922 li
cp
f
180.911 299.642 mo
184.511 299.642 li
184.511 295.922 li
180.911 295.922 li
cp
f
181.511 299.642 mo
185.111 299.642 li
185.111 295.922 li
181.511 295.922 li
cp
f
181.991 299.642 mo
185.591 299.642 li
185.591 295.922 li
181.991 295.922 li
cp
f
182.591 299.642 mo
186.191 299.642 li
186.191 295.922 li
182.591 295.922 li
cp
f
183.071 299.642 mo
186.671 299.642 li
186.671 295.922 li
183.071 295.922 li
cp
f
183.431 299.642 mo
187.151 299.642 li
187.151 295.922 li
183.431 295.922 li
cp
f
184.031 299.642 mo
187.751 299.642 li
187.751 295.922 li
184.031 295.922 li
cp
f
184.511 299.642 mo
188.231 299.642 li
188.231 295.922 li
184.511 295.922 li
cp
f
185.111 299.642 mo
188.831 299.642 li
188.831 295.922 li
185.111 295.922 li
cp
f
185.591 299.642 mo
189.311 299.642 li
189.311 295.922 li
185.591 295.922 li
cp
f
186.191 299.642 mo
189.911 299.642 li
189.911 295.922 li
186.191 295.922 li
cp
f
186.671 299.642 mo
190.391 299.642 li
190.391 295.922 li
186.671 295.922 li
cp
f
187.271 299.642 mo
190.991 299.642 li
190.991 295.922 li
187.271 295.922 li
cp
f
187.751 299.642 mo
191.471 299.642 li
191.471 295.922 li
187.751 295.922 li
cp
f
188.351 299.642 mo
192.071 299.642 li
192.071 295.922 li
188.351 295.922 li
cp
f
188.831 299.642 mo
192.551 299.642 li
192.551 295.922 li
188.831 295.922 li
cp
f
189.431 299.642 mo
193.151 299.642 li
193.151 295.922 li
189.431 295.922 li
cp
f
189.911 299.642 mo
193.631 299.642 li
193.631 295.922 li
189.911 295.922 li
cp
f
190.511 299.642 mo
194.231 299.642 li
194.231 295.922 li
190.511 295.922 li
cp
f
190.991 299.642 mo
194.711 299.642 li
194.711 295.922 li
190.991 295.922 li
cp
f
191.591 299.642 mo
195.311 299.642 li
195.311 295.922 li
191.591 295.922 li
cp
f
192.071 299.642 mo
195.791 299.642 li
195.791 295.922 li
192.071 295.922 li
cp
f
192.671 299.642 mo
196.391 299.642 li
196.391 295.922 li
192.671 295.922 li
cp
f
193.151 299.642 mo
196.871 299.642 li
196.871 295.922 li
193.151 295.922 li
cp
f
193.751 299.642 mo
197.471 299.642 li
197.471 295.922 li
193.751 295.922 li
cp
f
194.231 299.642 mo
197.951 299.642 li
197.951 295.922 li
194.231 295.922 li
cp
f
194.711 299.642 mo
198.311 299.642 li
198.311 295.922 li
194.711 295.922 li
cp
f
195.311 299.642 mo
199.031 299.642 li
199.031 295.922 li
195.311 295.922 li
cp
f
195.791 299.642 mo
199.391 299.642 li
199.391 295.922 li
195.791 295.922 li
cp
f
196.391 299.642 mo
200.111 299.642 li
200.111 295.922 li
196.391 295.922 li
cp
f
196.871 299.642 mo
200.471 299.642 li
200.471 295.922 li
196.871 295.922 li
cp
f
197.471 299.642 mo
201.191 299.642 li
201.191 295.922 li
197.471 295.922 li
cp
f
197.951 301.442 mo
201.551 301.442 li
201.551 297.842 li
197.951 297.842 li
cp
f
198.551 301.442 mo
202.151 301.442 li
202.151 297.842 li
198.551 297.842 li
cp
f
199.031 301.442 mo
202.631 301.442 li
202.631 297.842 li
199.031 297.842 li
cp
f
199.631 301.442 mo
203.231 301.442 li
203.231 297.842 li
199.631 297.842 li
cp
f
200.111 301.442 mo
203.711 301.442 li
203.711 297.842 li
200.111 297.842 li
cp
f
200.711 301.442 mo
204.311 301.442 li
204.311 297.842 li
200.711 297.842 li
cp
f
201.191 301.442 mo
204.791 301.442 li
204.791 297.842 li
201.191 297.842 li
cp
f
201.791 301.442 mo
205.391 301.442 li
205.391 297.842 li
201.791 297.842 li
cp
f
202.151 301.442 mo
205.871 301.442 li
205.871 297.842 li
202.151 297.842 li
cp
f
202.871 301.442 mo
206.471 301.442 li
206.471 297.842 li
202.871 297.842 li
cp
f
203.231 301.442 mo
206.951 301.442 li
206.951 297.842 li
203.231 297.842 li
cp
f
203.951 301.442 mo
207.551 301.442 li
207.551 297.842 li
203.951 297.842 li
cp
f
204.311 301.442 mo
208.031 301.442 li
208.031 297.842 li
204.311 297.842 li
cp
f
204.791 301.442 mo
208.511 301.442 li
208.511 297.842 li
204.791 297.842 li
cp
f
205.391 301.442 mo
209.111 301.442 li
209.111 297.842 li
205.391 297.842 li
cp
f
205.871 301.442 mo
209.591 301.442 li
209.591 297.842 li
205.871 297.842 li
cp
f
206.471 301.442 mo
210.191 301.442 li
210.191 297.842 li
206.471 297.842 li
cp
f
206.951 301.442 mo
210.671 301.442 li
210.671 297.842 li
206.951 297.842 li
cp
f
207.551 301.442 mo
211.271 301.442 li
211.271 297.842 li
207.551 297.842 li
cp
f
208.031 301.442 mo
211.751 301.442 li
211.751 297.842 li
208.031 297.842 li
cp
f
208.631 301.442 mo
212.351 301.442 li
212.351 297.842 li
208.631 297.842 li
cp
f
209.111 301.442 mo
212.831 301.442 li
212.831 297.842 li
209.111 297.842 li
cp
f
209.711 301.442 mo
213.431 301.442 li
213.431 297.842 li
209.711 297.842 li
cp
f
210.191 301.442 mo
213.911 301.442 li
213.911 297.842 li
210.191 297.842 li
cp
f
210.791 301.442 mo
214.511 301.442 li
214.511 297.842 li
210.791 297.842 li
cp
f
211.271 301.442 mo
214.991 301.442 li
214.991 297.842 li
211.271 297.842 li
cp
f
211.871 301.442 mo
215.591 301.442 li
215.591 297.842 li
211.871 297.842 li
cp
f
212.351 301.442 mo
216.071 301.442 li
216.071 297.842 li
212.351 297.842 li
cp
f
212.951 301.442 mo
216.671 301.442 li
216.671 297.842 li
212.951 297.842 li
cp
f
213.431 301.442 mo
217.151 301.442 li
217.151 297.842 li
213.431 297.842 li
cp
f
214.031 301.442 mo
217.751 301.442 li
217.751 297.842 li
214.031 297.842 li
cp
f
214.511 301.442 mo
218.231 301.442 li
218.231 297.842 li
214.511 297.842 li
cp
f
215.111 301.442 mo
218.831 301.442 li
218.831 297.842 li
215.111 297.842 li
cp
f
215.591 301.442 mo
219.311 301.442 li
219.311 297.842 li
215.591 297.842 li
cp
f
216.071 301.442 mo
219.671 301.442 li
219.671 297.842 li
216.071 297.842 li
cp
f
216.671 301.442 mo
220.271 301.442 li
220.271 297.842 li
216.671 297.842 li
cp
f
217.151 301.442 mo
220.751 301.442 li
220.751 297.842 li
217.151 297.842 li
cp
f
217.751 301.442 mo
221.351 301.442 li
221.351 297.842 li
217.751 297.842 li
cp
f
218.231 301.442 mo
221.831 301.442 li
221.831 297.842 li
218.231 297.842 li
cp
f
218.831 301.442 mo
222.431 301.442 li
222.431 297.842 li
218.831 297.842 li
cp
f
219.311 301.442 mo
222.911 301.442 li
222.911 297.842 li
219.311 297.842 li
cp
f
219.911 301.442 mo
223.511 301.442 li
223.511 297.842 li
219.911 297.842 li
cp
f
220.271 301.442 mo
223.991 301.442 li
223.991 297.842 li
220.271 297.842 li
cp
f
220.991 301.442 mo
224.591 301.442 li
224.591 297.842 li
220.991 297.842 li
cp
f
221.351 301.442 mo
225.071 301.442 li
225.071 297.842 li
221.351 297.842 li
cp
f
222.071 301.442 mo
225.671 301.442 li
225.671 297.842 li
222.071 297.842 li
cp
f
222.431 301.442 mo
226.151 301.442 li
226.151 297.842 li
222.431 297.842 li
cp
f
223.151 301.442 mo
226.751 301.442 li
226.751 297.842 li
223.151 297.842 li
cp
f
223.511 301.442 mo
227.231 301.442 li
227.231 297.842 li
223.511 297.842 li
cp
f
224.111 301.442 mo
227.831 301.442 li
227.831 297.842 li
224.111 297.842 li
cp
f
224.591 301.442 mo
228.311 301.442 li
228.311 297.842 li
224.591 297.842 li
cp
f
225.191 301.442 mo
228.911 301.442 li
228.911 297.842 li
225.191 297.842 li
cp
f
225.671 301.442 mo
229.391 301.442 li
229.391 297.842 li
225.671 297.842 li
cp
f
226.151 301.442 mo
229.871 301.442 li
229.871 297.842 li
226.151 297.842 li
cp
f
226.751 301.442 mo
230.471 301.442 li
230.471 297.842 li
226.751 297.842 li
cp
f
227.231 301.442 mo
230.951 301.442 li
230.951 297.842 li
227.231 297.842 li
cp
f
227.831 301.442 mo
231.551 301.442 li
231.551 297.842 li
227.831 297.842 li
cp
f
228.311 301.442 mo
232.031 301.442 li
232.031 297.842 li
228.311 297.842 li
cp
f
228.911 301.442 mo
232.631 301.442 li
232.631 297.842 li
228.911 297.842 li
cp
f
229.391 301.442 mo
233.111 301.442 li
233.111 297.842 li
229.391 297.842 li
cp
f
229.991 301.442 mo
233.711 301.442 li
233.711 297.842 li
229.991 297.842 li
cp
f
230.471 301.442 mo
234.191 301.442 li
234.191 297.842 li
230.471 297.842 li
cp
f
231.071 301.442 mo
234.791 301.442 li
234.791 297.842 li
231.071 297.842 li
cp
f
231.551 301.442 mo
235.271 301.442 li
235.271 297.842 li
231.551 297.842 li
cp
f
232.151 301.442 mo
235.871 301.442 li
235.871 297.842 li
232.151 297.842 li
cp
f
232.631 301.442 mo
236.351 301.442 li
236.351 297.842 li
232.631 297.842 li
cp
f
233.231 301.442 mo
236.951 301.442 li
236.951 297.842 li
233.231 297.842 li
cp
f
233.711 301.442 mo
237.431 301.442 li
237.431 297.842 li
233.711 297.842 li
cp
f
234.311 301.442 mo
238.031 301.442 li
238.031 297.842 li
234.311 297.842 li
cp
f
234.791 301.442 mo
238.391 301.442 li
238.391 297.842 li
234.791 297.842 li
cp
f
235.391 301.442 mo
239.111 301.442 li
239.111 297.842 li
235.391 297.842 li
cp
f
235.871 301.442 mo
239.471 301.442 li
239.471 297.842 li
235.871 297.842 li
cp
f
236.471 301.442 mo
240.191 301.442 li
240.191 297.842 li
236.471 297.842 li
cp
f
236.951 301.442 mo
240.551 301.442 li
240.551 297.842 li
236.951 297.842 li
cp
f
237.431 301.442 mo
241.031 301.442 li
241.031 297.842 li
237.431 297.842 li
cp
f
238.031 301.442 mo
241.631 301.442 li
241.631 297.842 li
238.031 297.842 li
cp
f
238.391 301.442 mo
242.111 301.442 li
242.111 297.842 li
238.391 297.842 li
cp
f
239.111 301.442 mo
242.711 301.442 li
242.711 297.842 li
239.111 297.842 li
cp
f
239.471 301.442 mo
243.191 301.442 li
243.191 297.842 li
239.471 297.842 li
cp
f
240.191 301.442 mo
243.791 301.442 li
243.791 297.842 li
240.191 297.842 li
cp
f
240.551 301.442 mo
244.271 301.442 li
244.271 297.842 li
240.551 297.842 li
cp
f
241.271 301.442 mo
244.871 301.442 li
244.871 297.842 li
241.271 297.842 li
cp
f
241.631 301.442 mo
245.351 301.442 li
245.351 297.842 li
241.631 297.842 li
cp
f
242.231 301.442 mo
245.951 301.442 li
245.951 297.842 li
242.231 297.842 li
cp
f
242.711 301.442 mo
246.431 301.442 li
246.431 297.842 li
242.711 297.842 li
cp
f
243.311 301.442 mo
247.031 301.442 li
247.031 297.842 li
243.311 297.842 li
cp
f
243.791 301.442 mo
247.511 301.442 li
247.511 297.842 li
243.791 297.842 li
cp
f
244.391 301.442 mo
248.111 301.442 li
248.111 297.842 li
244.391 297.842 li
cp
f
244.871 301.442 mo
248.591 301.442 li
248.591 297.842 li
244.871 297.842 li
cp
f
245.471 301.442 mo
249.191 301.442 li
249.191 297.842 li
245.471 297.842 li
cp
f
245.951 301.442 mo
249.671 301.442 li
249.671 297.842 li
245.951 297.842 li
cp
f
246.551 301.442 mo
250.271 301.442 li
250.271 297.842 li
246.551 297.842 li
cp
f
247.031 301.442 mo
250.751 301.442 li
250.751 297.842 li
247.031 297.842 li
cp
f
247.511 301.442 mo
251.231 301.442 li
251.231 297.842 li
247.511 297.842 li
cp
f
248.111 301.442 mo
251.831 301.442 li
251.831 297.842 li
248.111 297.842 li
cp
f
248.591 301.442 mo
252.311 301.442 li
252.311 297.842 li
248.591 297.842 li
cp
f
249.191 301.442 mo
252.911 301.442 li
252.911 297.842 li
249.191 297.842 li
cp
f
249.671 301.442 mo
253.391 301.442 li
253.391 297.842 li
249.671 297.842 li
cp
f
250.271 301.442 mo
253.991 301.442 li
253.991 297.842 li
250.271 297.842 li
cp
f
250.751 301.442 mo
254.471 301.442 li
254.471 297.842 li
250.751 297.842 li
cp
f
251.351 301.442 mo
255.071 301.442 li
255.071 297.842 li
251.351 297.842 li
cp
f
251.831 301.442 mo
255.551 301.442 li
255.551 297.842 li
251.831 297.842 li
cp
f
252.431 301.442 mo
256.151 301.442 li
256.151 297.842 li
252.431 297.842 li
cp
f
252.911 301.442 mo
256.631 301.442 li
256.631 297.842 li
252.911 297.842 li
cp
f
253.511 301.442 mo
257.231 301.442 li
257.231 297.842 li
253.511 297.842 li
cp
f
253.991 301.442 mo
257.591 301.442 li
257.591 297.842 li
253.991 297.842 li
cp
f
254.591 301.442 mo
258.311 301.442 li
258.311 297.842 li
254.591 297.842 li
cp
f
255.071 301.442 mo
258.671 301.442 li
258.671 297.842 li
255.071 297.842 li
cp
f
255.671 301.442 mo
259.391 301.442 li
259.391 297.842 li
255.671 297.842 li
cp
f
256.151 301.442 mo
259.751 301.442 li
259.751 297.842 li
256.151 297.842 li
cp
f
256.751 301.442 mo
260.351 301.442 li
260.351 297.842 li
256.751 297.842 li
cp
f
257.231 301.442 mo
260.831 301.442 li
260.831 297.842 li
257.231 297.842 li
cp
f
257.831 301.442 mo
261.431 301.442 li
261.431 297.842 li
257.831 297.842 li
cp
f
258.311 301.442 mo
261.911 301.442 li
261.911 297.842 li
258.311 297.842 li
cp
f
258.671 301.442 mo
262.391 301.442 li
262.391 297.842 li
258.671 297.842 li
cp
f
259.391 301.442 mo
262.991 301.442 li
262.991 297.842 li
259.391 297.842 li
cp
f
259.751 301.442 mo
263.471 301.442 li
263.471 297.842 li
259.751 297.842 li
cp
f
260.351 301.442 mo
264.071 301.442 li
264.071 297.842 li
260.351 297.842 li
cp
f
260.831 301.442 mo
264.551 301.442 li
264.551 297.842 li
260.831 297.842 li
cp
f
261.431 301.442 mo
265.151 301.442 li
265.151 297.842 li
261.431 297.842 li
cp
f
261.911 301.442 mo
265.631 301.442 li
265.631 297.842 li
261.911 297.842 li
cp
f
262.511 301.442 mo
266.231 301.442 li
266.231 297.842 li
262.511 297.842 li
cp
f
262.991 301.442 mo
266.711 301.442 li
266.711 297.842 li
262.991 297.842 li
cp
f
263.591 301.442 mo
267.311 301.442 li
267.311 297.842 li
263.591 297.842 li
cp
f
264.071 301.442 mo
267.791 301.442 li
267.791 297.842 li
264.071 297.842 li
cp
f
264.671 301.442 mo
268.391 301.442 li
268.391 297.842 li
264.671 297.842 li
cp
f
265.151 301.442 mo
268.871 301.442 li
268.871 297.842 li
265.151 297.842 li
cp
f
265.751 301.442 mo
269.471 301.442 li
269.471 297.842 li
265.751 297.842 li
cp
f
266.231 301.442 mo
269.951 301.442 li
269.951 297.842 li
266.231 297.842 li
cp
f
266.831 301.442 mo
270.551 301.442 li
270.551 297.842 li
266.831 297.842 li
cp
f
267.311 301.442 mo
271.031 301.442 li
271.031 297.842 li
267.311 297.842 li
cp
f
267.911 301.442 mo
271.631 301.442 li
271.631 297.842 li
267.911 297.842 li
cp
f
268.391 301.442 mo
272.111 301.442 li
272.111 297.842 li
268.391 297.842 li
cp
f
268.871 301.442 mo
272.591 301.442 li
272.591 297.842 li
268.871 297.842 li
cp
f
269.471 301.442 mo
273.191 301.442 li
273.191 297.842 li
269.471 297.842 li
cp
f
269.951 301.442 mo
273.671 301.442 li
273.671 297.842 li
269.951 297.842 li
cp
f
270.551 301.442 mo
274.271 301.442 li
274.271 297.842 li
270.551 297.842 li
cp
f
271.031 301.442 mo
274.751 301.442 li
274.751 297.842 li
271.031 297.842 li
cp
f
271.631 301.442 mo
275.351 301.442 li
275.351 297.842 li
271.631 297.842 li
cp
f
272.111 301.442 mo
275.711 301.442 li
275.711 297.842 li
272.111 297.842 li
cp
f
272.711 301.442 mo
276.431 301.442 li
276.431 297.842 li
272.711 297.842 li
cp
f
273.191 301.442 mo
276.791 301.442 li
276.791 297.842 li
273.191 297.842 li
cp
f
273.791 301.442 mo
277.511 301.442 li
277.511 297.842 li
273.791 297.842 li
cp
f
274.271 301.442 mo
277.871 301.442 li
277.871 297.842 li
274.271 297.842 li
cp
f
274.871 301.442 mo
278.591 301.442 li
278.591 297.842 li
274.871 297.842 li
cp
f
275.351 301.442 mo
278.951 301.442 li
278.951 297.842 li
275.351 297.842 li
cp
f
275.951 301.442 mo
279.551 301.442 li
279.551 297.842 li
275.951 297.842 li
cp
f
276.431 301.442 mo
280.031 301.442 li
280.031 297.842 li
276.431 297.842 li
cp
f
277.031 301.442 mo
280.631 301.442 li
280.631 297.842 li
277.031 297.842 li
cp
f
277.511 301.442 mo
281.111 301.442 li
281.111 297.842 li
277.511 297.842 li
cp
f
278.111 301.442 mo
281.711 301.442 li
281.711 297.842 li
278.111 297.842 li
cp
f
278.591 301.442 mo
282.191 301.442 li
282.191 297.842 li
278.591 297.842 li
cp
f
279.191 303.122 mo
282.791 303.122 li
282.791 299.522 li
279.191 299.522 li
cp
f
279.551 303.122 mo
283.271 303.122 li
283.271 299.522 li
279.551 299.522 li
cp
f
280.031 303.122 mo
283.751 303.122 li
283.751 299.522 li
280.031 299.522 li
cp
f
280.631 303.122 mo
284.351 303.122 li
284.351 299.522 li
280.631 299.522 li
cp
f
281.111 303.122 mo
284.831 303.122 li
284.831 299.522 li
281.111 299.522 li
cp
f
281.711 303.122 mo
285.431 303.122 li
285.431 299.522 li
281.711 299.522 li
cp
f
282.191 303.122 mo
285.911 303.122 li
285.911 299.522 li
282.191 299.522 li
cp
f
282.791 303.122 mo
286.511 303.122 li
286.511 299.522 li
282.791 299.522 li
cp
f
283.271 303.122 mo
286.991 303.122 li
286.991 299.522 li
283.271 299.522 li
cp
f
283.871 303.122 mo
287.591 303.122 li
287.591 299.522 li
283.871 299.522 li
cp
f
284.351 303.122 mo
288.071 303.122 li
288.071 299.522 li
284.351 299.522 li
cp
f
284.951 303.122 mo
288.671 303.122 li
288.671 299.522 li
284.951 299.522 li
cp
f
285.431 303.122 mo
289.151 303.122 li
289.151 299.522 li
285.431 299.522 li
cp
f
286.031 303.122 mo
289.751 303.122 li
289.751 299.522 li
286.031 299.522 li
cp
f
286.511 303.122 mo
290.231 303.122 li
290.231 299.522 li
286.511 299.522 li
cp
f
287.111 303.122 mo
290.831 303.122 li
290.831 299.522 li
287.111 299.522 li
cp
f
287.591 303.122 mo
291.311 303.122 li
291.311 299.522 li
287.591 299.522 li
cp
f
288.191 303.122 mo
291.911 303.122 li
291.911 299.522 li
288.191 299.522 li
cp
f
288.671 303.122 mo
292.391 303.122 li
292.391 299.522 li
288.671 299.522 li
cp
f
289.271 303.122 mo
292.991 303.122 li
292.991 299.522 li
289.271 299.522 li
cp
f
289.751 303.122 mo
293.471 303.122 li
293.471 299.522 li
289.751 299.522 li
cp
f
290.231 303.122 mo
293.831 303.122 li
293.831 299.522 li
290.231 299.522 li
cp
f
290.831 303.122 mo
294.551 303.122 li
294.551 299.522 li
290.831 299.522 li
cp
f
291.311 303.122 mo
294.911 303.122 li
294.911 299.522 li
291.311 299.522 li
cp
f
291.911 303.122 mo
295.631 303.122 li
295.631 299.522 li
291.911 299.522 li
cp
f
292.391 303.122 mo
295.991 303.122 li
295.991 299.522 li
292.391 299.522 li
cp
f
292.991 303.122 mo
296.711 303.122 li
296.711 299.522 li
292.991 299.522 li
cp
f
293.471 303.122 mo
297.071 303.122 li
297.071 299.522 li
293.471 299.522 li
cp
f
294.071 303.122 mo
297.671 303.122 li
297.671 299.522 li
294.071 299.522 li
cp
f
294.551 303.122 mo
298.151 303.122 li
298.151 299.522 li
294.551 299.522 li
cp
f
295.151 303.122 mo
298.751 303.122 li
298.751 299.522 li
295.151 299.522 li
cp
f
295.631 303.122 mo
299.231 303.122 li
299.231 299.522 li
295.631 299.522 li
cp
f
296.231 303.122 mo
299.831 303.122 li
299.831 299.522 li
296.231 299.522 li
cp
f
296.711 303.122 mo
300.311 303.122 li
300.311 299.522 li
296.711 299.522 li
cp
f
297.311 303.122 mo
300.911 303.122 li
300.911 299.522 li
297.311 299.522 li
cp
f
297.671 303.122 mo
301.391 303.122 li
301.391 299.522 li
297.671 299.522 li
cp
f
298.391 303.122 mo
301.991 303.122 li
301.991 299.522 li
298.391 299.522 li
cp
f
298.751 303.122 mo
302.471 303.122 li
302.471 299.522 li
298.751 299.522 li
cp
f
299.471 303.122 mo
303.071 303.122 li
303.071 299.522 li
299.471 299.522 li
cp
f
299.831 303.122 mo
303.551 303.122 li
303.551 299.522 li
299.831 299.522 li
cp
f
300.551 303.122 mo
304.151 303.122 li
304.151 299.522 li
300.551 299.522 li
cp
f
300.911 303.122 mo
304.631 303.122 li
304.631 299.522 li
300.911 299.522 li
cp
f
301.391 304.922 mo
305.111 304.922 li
305.111 301.202 li
301.391 301.202 li
cp
f
301.991 304.922 mo
305.711 304.922 li
305.711 301.202 li
301.991 301.202 li
cp
f
302.471 304.922 mo
306.191 304.922 li
306.191 301.202 li
302.471 301.202 li
cp
f
303.071 304.922 mo
306.791 304.922 li
306.791 301.202 li
303.071 301.202 li
cp
f
303.551 304.922 mo
307.271 304.922 li
307.271 301.202 li
303.551 301.202 li
cp
f
304.151 304.922 mo
307.871 304.922 li
307.871 301.202 li
304.151 301.202 li
cp
f
304.631 304.922 mo
308.351 304.922 li
308.351 301.202 li
304.631 301.202 li
cp
f
305.231 304.922 mo
308.951 304.922 li
308.951 301.202 li
305.231 301.202 li
cp
f
305.711 304.922 mo
309.431 304.922 li
309.431 301.202 li
305.711 301.202 li
cp
f
306.311 304.922 mo
310.031 304.922 li
310.031 301.202 li
306.311 301.202 li
cp
f
306.791 304.922 mo
310.511 304.922 li
310.511 301.202 li
306.791 301.202 li
cp
f
307.391 304.922 mo
311.111 304.922 li
311.111 301.202 li
307.391 301.202 li
cp
f
307.871 304.922 mo
311.591 304.922 li
311.591 301.202 li
307.871 301.202 li
cp
f
308.471 304.922 mo
312.191 304.922 li
312.191 301.202 li
308.471 301.202 li
cp
f
308.951 304.922 mo
312.671 304.922 li
312.671 301.202 li
308.951 301.202 li
cp
f
309.551 304.922 mo
313.271 304.922 li
313.271 301.202 li
309.551 301.202 li
cp
f
310.031 304.922 mo
313.751 304.922 li
313.751 301.202 li
310.031 301.202 li
cp
f
310.631 304.922 mo
314.351 304.922 li
314.351 301.202 li
310.631 301.202 li
cp
f
311.111 304.922 mo
314.831 304.922 li
314.831 301.202 li
311.111 301.202 li
cp
f
311.591 304.922 mo
315.191 304.922 li
315.191 301.202 li
311.591 301.202 li
cp
f
312.191 304.922 mo
315.791 304.922 li
315.791 301.202 li
312.191 301.202 li
cp
f
312.671 304.922 mo
316.271 304.922 li
316.271 301.202 li
312.671 301.202 li
cp
f
313.271 304.922 mo
316.871 304.922 li
316.871 301.202 li
313.271 301.202 li
cp
f
313.751 304.922 mo
317.351 304.922 li
317.351 301.202 li
313.751 301.202 li
cp
f
314.351 304.922 mo
317.951 304.922 li
317.951 301.202 li
314.351 301.202 li
cp
f
314.831 304.922 mo
318.431 304.922 li
318.431 301.202 li
314.831 301.202 li
cp
f
315.431 304.922 mo
319.031 304.922 li
319.031 301.202 li
315.431 301.202 li
cp
f
315.791 304.922 mo
319.511 304.922 li
319.511 301.202 li
315.791 301.202 li
cp
f
316.511 304.922 mo
320.111 304.922 li
320.111 301.202 li
316.511 301.202 li
cp
f
316.871 304.922 mo
320.591 304.922 li
320.591 301.202 li
316.871 301.202 li
cp
f
317.591 304.922 mo
321.191 304.922 li
321.191 301.202 li
317.591 301.202 li
cp
f
317.951 304.922 mo
321.671 304.922 li
321.671 301.202 li
317.951 301.202 li
cp
f
318.671 304.922 mo
322.271 304.922 li
322.271 301.202 li
318.671 301.202 li
cp
f
319.031 304.922 mo
322.751 304.922 li
322.751 301.202 li
319.031 301.202 li
cp
f
319.631 304.922 mo
323.351 304.922 li
323.351 301.202 li
319.631 301.202 li
cp
f
320.111 304.922 mo
323.831 304.922 li
323.831 301.202 li
320.111 301.202 li
cp
f
320.711 304.922 mo
324.431 304.922 li
324.431 301.202 li
320.711 301.202 li
cp
f
321.191 304.922 mo
324.911 304.922 li
324.911 301.202 li
321.191 301.202 li
cp
f
321.791 304.922 mo
325.511 304.922 li
325.511 301.202 li
321.791 301.202 li
cp
f
322.271 304.922 mo
325.991 304.922 li
325.991 301.202 li
322.271 301.202 li
cp
f
322.751 304.922 mo
326.471 304.922 li
326.471 301.202 li
322.751 301.202 li
cp
f
323.351 304.922 mo
327.071 304.922 li
327.071 301.202 li
323.351 301.202 li
cp
f
323.831 304.922 mo
327.551 304.922 li
327.551 301.202 li
323.831 301.202 li
cp
f
324.431 304.922 mo
328.151 304.922 li
328.151 301.202 li
324.431 301.202 li
cp
f
324.911 304.922 mo
328.631 304.922 li
328.631 301.202 li
324.911 301.202 li
cp
f
325.511 304.922 mo
329.231 304.922 li
329.231 301.202 li
325.511 301.202 li
cp
f
325.991 304.922 mo
329.711 304.922 li
329.711 301.202 li
325.991 301.202 li
cp
f
326.591 304.922 mo
330.311 304.922 li
330.311 301.202 li
326.591 301.202 li
cp
f
327.071 304.922 mo
330.791 304.922 li
330.791 301.202 li
327.071 301.202 li
cp
f
327.671 304.922 mo
331.391 304.922 li
331.391 301.202 li
327.671 301.202 li
cp
f
328.151 304.922 mo
331.871 304.922 li
331.871 301.202 li
328.151 301.202 li
cp
f
328.751 304.922 mo
332.471 304.922 li
332.471 301.202 li
328.751 301.202 li
cp
f
329.231 304.922 mo
332.951 304.922 li
332.951 301.202 li
329.231 301.202 li
cp
f
329.831 304.922 mo
333.551 304.922 li
333.551 301.202 li
329.831 301.202 li
cp
f
330.311 304.922 mo
333.911 304.922 li
333.911 301.202 li
330.311 301.202 li
cp
f
330.911 304.922 mo
334.631 304.922 li
334.631 301.202 li
330.911 301.202 li
cp
f
331.391 304.922 mo
334.991 304.922 li
334.991 301.202 li
331.391 301.202 li
cp
f
331.991 304.922 mo
335.711 304.922 li
335.711 301.202 li
331.991 301.202 li
cp
f
332.471 304.922 mo
336.071 304.922 li
336.071 301.202 li
332.471 301.202 li
cp
f
332.951 304.922 mo
336.551 304.922 li
336.551 301.202 li
332.951 301.202 li
cp
f
333.551 304.922 mo
337.151 304.922 li
337.151 301.202 li
333.551 301.202 li
cp
f
333.911 304.922 mo
337.631 304.922 li
337.631 301.202 li
333.911 301.202 li
cp
f
334.631 304.922 mo
338.231 304.922 li
338.231 301.202 li
334.631 301.202 li
cp
f
334.991 304.922 mo
338.711 304.922 li
338.711 301.202 li
334.991 301.202 li
cp
f
335.711 304.922 mo
339.311 304.922 li
339.311 301.202 li
335.711 301.202 li
cp
f
336.071 304.922 mo
339.791 304.922 li
339.791 301.202 li
336.071 301.202 li
cp
f
336.791 304.922 mo
340.391 304.922 li
340.391 301.202 li
336.791 301.202 li
cp
f
337.151 304.922 mo
340.871 304.922 li
340.871 301.202 li
337.151 301.202 li
cp
f
337.751 304.922 mo
341.471 304.922 li
341.471 301.202 li
337.751 301.202 li
cp
f
338.231 304.922 mo
341.951 304.922 li
341.951 301.202 li
338.231 301.202 li
cp
f
338.831 304.922 mo
342.551 304.922 li
342.551 301.202 li
338.831 301.202 li
cp
f
339.311 304.922 mo
343.031 304.922 li
343.031 301.202 li
339.311 301.202 li
cp
f
339.911 304.922 mo
343.631 304.922 li
343.631 301.202 li
339.911 301.202 li
cp
f
340.391 304.922 mo
344.111 304.922 li
344.111 301.202 li
340.391 301.202 li
cp
f
340.991 304.922 mo
344.711 304.922 li
344.711 301.202 li
340.991 301.202 li
cp
f
341.471 304.922 mo
345.191 304.922 li
345.191 301.202 li
341.471 301.202 li
cp
f
342.071 304.922 mo
345.791 304.922 li
345.791 301.202 li
342.071 301.202 li
cp
f
342.551 304.922 mo
346.271 304.922 li
346.271 301.202 li
342.551 301.202 li
cp
f
343.151 304.922 mo
346.871 304.922 li
346.871 301.202 li
343.151 301.202 li
cp
f
343.631 304.922 mo
347.351 304.922 li
347.351 301.202 li
343.631 301.202 li
cp
f
344.111 304.922 mo
347.831 304.922 li
347.831 301.202 li
344.111 301.202 li
cp
f
344.711 304.922 mo
348.431 304.922 li
348.431 301.202 li
344.711 301.202 li
cp
f
345.191 304.922 mo
348.911 304.922 li
348.911 301.202 li
345.191 301.202 li
cp
f
345.791 304.922 mo
349.511 304.922 li
349.511 301.202 li
345.791 301.202 li
cp
f
346.271 304.922 mo
349.991 304.922 li
349.991 301.202 li
346.271 301.202 li
cp
f
346.871 304.922 mo
350.591 304.922 li
350.591 301.202 li
346.871 301.202 li
cp
f
347.351 304.922 mo
351.071 304.922 li
351.071 301.202 li
347.351 301.202 li
cp
f
347.951 304.922 mo
351.671 304.922 li
351.671 301.202 li
347.951 301.202 li
cp
f
348.431 304.922 mo
352.031 304.922 li
352.031 301.202 li
348.431 301.202 li
cp
f
349.031 304.922 mo
352.751 304.922 li
352.751 301.202 li
349.031 301.202 li
cp
f
349.511 304.922 mo
353.111 304.922 li
353.111 301.202 li
349.511 301.202 li
cp
f
350.111 304.922 mo
353.831 304.922 li
353.831 301.202 li
350.111 301.202 li
cp
f
350.591 304.922 mo
354.191 304.922 li
354.191 301.202 li
350.591 301.202 li
cp
f
351.191 304.922 mo
354.911 304.922 li
354.911 301.202 li
351.191 301.202 li
cp
f
351.671 304.922 mo
355.271 304.922 li
355.271 301.202 li
351.671 301.202 li
cp
f
352.271 304.922 mo
355.871 304.922 li
355.871 301.202 li
352.271 301.202 li
cp
f
352.751 304.922 mo
356.351 304.922 li
356.351 301.202 li
352.751 301.202 li
cp
f
353.351 304.922 mo
356.951 304.922 li
356.951 301.202 li
353.351 301.202 li
cp
f
353.831 304.922 mo
357.431 304.922 li
357.431 301.202 li
353.831 301.202 li
cp
f
354.191 304.922 mo
357.911 304.922 li
357.911 301.202 li
354.191 301.202 li
cp
f
354.911 304.922 mo
358.511 304.922 li
358.511 301.202 li
354.911 301.202 li
cp
f
355.271 304.922 mo
358.991 304.922 li
358.991 301.202 li
355.271 301.202 li
cp
f
355.871 304.922 mo
359.591 304.922 li
359.591 301.202 li
355.871 301.202 li
cp
f
356.351 304.922 mo
360.071 304.922 li
360.071 301.202 li
356.351 301.202 li
cp
f
356.951 304.922 mo
360.671 304.922 li
360.671 301.202 li
356.951 301.202 li
cp
f
357.431 304.922 mo
361.151 304.922 li
361.151 301.202 li
357.431 301.202 li
cp
f
358.031 304.922 mo
361.751 304.922 li
361.751 301.202 li
358.031 301.202 li
cp
f
358.511 304.922 mo
362.231 304.922 li
362.231 301.202 li
358.511 301.202 li
cp
f
359.111 304.922 mo
362.831 304.922 li
362.831 301.202 li
359.111 301.202 li
cp
f
359.591 304.922 mo
363.311 304.922 li
363.311 301.202 li
359.591 301.202 li
cp
f
360.191 304.922 mo
363.911 304.922 li
363.911 301.202 li
360.191 301.202 li
cp
f
360.671 304.922 mo
364.391 304.922 li
364.391 301.202 li
360.671 301.202 li
cp
f
361.271 304.922 mo
364.991 304.922 li
364.991 301.202 li
361.271 301.202 li
cp
f
361.751 304.922 mo
365.471 304.922 li
365.471 301.202 li
361.751 301.202 li
cp
f
362.351 304.922 mo
366.071 304.922 li
366.071 301.202 li
362.351 301.202 li
cp
f
362.831 304.922 mo
366.551 304.922 li
366.551 301.202 li
362.831 301.202 li
cp
f
363.431 304.922 mo
367.151 304.922 li
367.151 301.202 li
363.431 301.202 li
cp
f
363.911 304.922 mo
367.631 304.922 li
367.631 301.202 li
363.911 301.202 li
cp
f
364.511 304.922 mo
368.231 304.922 li
368.231 301.202 li
364.511 301.202 li
cp
f
364.991 304.922 mo
368.711 304.922 li
368.711 301.202 li
364.991 301.202 li
cp
f
365.471 304.922 mo
369.191 304.922 li
369.191 301.202 li
365.471 301.202 li
cp
f
366.071 304.922 mo
369.791 304.922 li
369.791 301.202 li
366.071 301.202 li
cp
f
366.551 304.922 mo
370.271 304.922 li
370.271 301.202 li
366.551 301.202 li
cp
f
367.151 304.922 mo
370.871 304.922 li
370.871 301.202 li
367.151 301.202 li
cp
f
367.631 304.922 mo
371.231 304.922 li
371.231 301.202 li
367.631 301.202 li
cp
f
368.231 304.922 mo
371.951 304.922 li
371.951 301.202 li
368.231 301.202 li
cp
f
368.711 304.922 mo
372.311 304.922 li
372.311 301.202 li
368.711 301.202 li
cp
f
369.311 304.922 mo
373.031 304.922 li
373.031 301.202 li
369.311 301.202 li
cp
f
369.791 304.922 mo
373.391 304.922 li
373.391 301.202 li
369.791 301.202 li
cp
f
370.391 304.922 mo
373.991 304.922 li
373.991 301.202 li
370.391 301.202 li
cp
f
370.871 304.922 mo
374.471 304.922 li
374.471 301.202 li
370.871 301.202 li
cp
f
371.471 304.922 mo
375.071 304.922 li
375.071 301.202 li
371.471 301.202 li
cp
f
371.951 304.922 mo
375.551 304.922 li
375.551 301.202 li
371.951 301.202 li
cp
f
372.551 304.922 mo
376.151 304.922 li
376.151 301.202 li
372.551 301.202 li
cp
f
373.031 304.922 mo
376.631 304.922 li
376.631 301.202 li
373.031 301.202 li
cp
f
373.631 304.922 mo
377.231 304.922 li
377.231 301.202 li
373.631 301.202 li
cp
f
373.991 304.922 mo
377.711 304.922 li
377.711 301.202 li
373.991 301.202 li
cp
f
374.711 304.922 mo
378.311 304.922 li
378.311 301.202 li
374.711 301.202 li
cp
f
375.071 304.922 mo
378.791 304.922 li
378.791 301.202 li
375.071 301.202 li
cp
f
375.551 304.922 mo
379.271 304.922 li
379.271 301.202 li
375.551 301.202 li
cp
f
376.151 304.922 mo
379.871 304.922 li
379.871 301.202 li
376.151 301.202 li
cp
f
376.631 304.922 mo
380.351 304.922 li
380.351 301.202 li
376.631 301.202 li
cp
f
377.231 304.922 mo
380.951 304.922 li
380.951 301.202 li
377.231 301.202 li
cp
f
377.711 304.922 mo
381.431 304.922 li
381.431 301.202 li
377.711 301.202 li
cp
f
378.311 304.922 mo
382.031 304.922 li
382.031 301.202 li
378.311 301.202 li
cp
f
378.791 304.922 mo
382.511 304.922 li
382.511 301.202 li
378.791 301.202 li
cp
f
379.391 304.922 mo
383.111 304.922 li
383.111 301.202 li
379.391 301.202 li
cp
f
379.871 304.922 mo
383.591 304.922 li
383.591 301.202 li
379.871 301.202 li
cp
f
380.471 304.922 mo
384.191 304.922 li
384.191 301.202 li
380.471 301.202 li
cp
f
380.951 304.922 mo
384.671 304.922 li
384.671 301.202 li
380.951 301.202 li
cp
f
381.551 304.922 mo
385.271 304.922 li
385.271 301.202 li
381.551 301.202 li
cp
f
382.031 304.922 mo
385.751 304.922 li
385.751 301.202 li
382.031 301.202 li
cp
f
382.631 304.922 mo
386.351 304.922 li
386.351 301.202 li
382.631 301.202 li
cp
f
383.111 304.922 mo
386.831 304.922 li
386.831 301.202 li
383.111 301.202 li
cp
f
383.711 304.922 mo
387.431 304.922 li
387.431 301.202 li
383.711 301.202 li
cp
f
384.191 304.922 mo
387.911 304.922 li
387.911 301.202 li
384.191 301.202 li
cp
f
384.791 304.922 mo
388.511 304.922 li
388.511 301.202 li
384.791 301.202 li
cp
f
385.271 304.922 mo
388.991 304.922 li
388.991 301.202 li
385.271 301.202 li
cp
f
385.871 304.922 mo
389.591 304.922 li
389.591 301.202 li
385.871 301.202 li
cp
f
386.351 304.922 mo
390.071 304.922 li
390.071 301.202 li
386.351 301.202 li
cp
f
386.831 304.922 mo
390.431 304.922 li
390.431 301.202 li
386.831 301.202 li
cp
f
387.431 304.922 mo
391.151 304.922 li
391.151 301.202 li
387.431 301.202 li
cp
f
387.911 304.922 mo
391.511 304.922 li
391.511 301.202 li
387.911 301.202 li
cp
f
388.511 304.922 mo
392.231 304.922 li
392.231 301.202 li
388.511 301.202 li
cp
f
388.991 304.922 mo
392.591 304.922 li
392.591 301.202 li
388.991 301.202 li
cp
f
389.591 304.922 mo
393.191 304.922 li
393.191 301.202 li
389.591 301.202 li
cp
f
390.071 304.922 mo
393.671 304.922 li
393.671 301.202 li
390.071 301.202 li
cp
f
390.671 304.922 mo
394.271 304.922 li
394.271 301.202 li
390.671 301.202 li
cp
f
391.151 304.922 mo
394.751 304.922 li
394.751 301.202 li
391.151 301.202 li
cp
f
391.751 304.922 mo
395.351 304.922 li
395.351 301.202 li
391.751 301.202 li
cp
f
392.231 304.922 mo
395.831 304.922 li
395.831 301.202 li
392.231 301.202 li
cp
f
392.831 304.922 mo
396.431 304.922 li
396.431 301.202 li
392.831 301.202 li
cp
f
393.191 304.922 mo
396.911 304.922 li
396.911 301.202 li
393.191 301.202 li
cp
f
393.911 304.922 mo
397.511 304.922 li
397.511 301.202 li
393.911 301.202 li
cp
f
394.271 304.922 mo
397.991 304.922 li
397.991 301.202 li
394.271 301.202 li
cp
f
394.991 304.922 mo
398.591 304.922 li
398.591 301.202 li
394.991 301.202 li
cp
f
395.351 304.922 mo
399.071 304.922 li
399.071 301.202 li
395.351 301.202 li
cp
f
395.951 304.922 mo
399.671 304.922 li
399.671 301.202 li
395.951 301.202 li
cp
f
396.431 304.922 mo
400.151 304.922 li
400.151 301.202 li
396.431 301.202 li
cp
f
396.911 304.922 mo
400.631 304.922 li
400.631 301.202 li
396.911 301.202 li
cp
f
397.511 304.922 mo
401.231 304.922 li
401.231 301.202 li
397.511 301.202 li
cp
f
397.991 304.922 mo
401.711 304.922 li
401.711 301.202 li
397.991 301.202 li
cp
f
398.591 304.922 mo
402.311 304.922 li
402.311 301.202 li
398.591 301.202 li
cp
f
399.071 304.922 mo
402.791 304.922 li
402.791 301.202 li
399.071 301.202 li
cp
f
399.671 304.922 mo
403.391 304.922 li
403.391 301.202 li
399.671 301.202 li
cp
f
400.151 304.922 mo
403.871 304.922 li
403.871 301.202 li
400.151 301.202 li
cp
f
400.751 304.922 mo
404.471 304.922 li
404.471 301.202 li
400.751 301.202 li
cp
f
401.231 304.922 mo
404.951 304.922 li
404.951 301.202 li
401.231 301.202 li
cp
f
401.831 304.922 mo
405.551 304.922 li
405.551 301.202 li
401.831 301.202 li
cp
f
402.311 304.922 mo
406.031 304.922 li
406.031 301.202 li
402.311 301.202 li
cp
f
402.911 304.922 mo
406.631 304.922 li
406.631 301.202 li
402.911 301.202 li
cp
f
403.391 304.922 mo
407.111 304.922 li
407.111 301.202 li
403.391 301.202 li
cp
f
403.991 304.922 mo
407.711 304.922 li
407.711 301.202 li
403.991 301.202 li
cp
f
404.471 304.922 mo
408.191 304.922 li
408.191 301.202 li
404.471 301.202 li
cp
f
405.071 304.922 mo
408.791 304.922 li
408.791 301.202 li
405.071 301.202 li
cp
f
405.551 304.922 mo
409.271 304.922 li
409.271 301.202 li
405.551 301.202 li
cp
f
406.151 304.922 mo
409.871 304.922 li
409.871 301.202 li
406.151 301.202 li
cp
f
406.631 304.922 mo
410.351 304.922 li
410.351 301.202 li
406.631 301.202 li
cp
f
407.231 304.922 mo
410.951 304.922 li
410.951 301.202 li
407.231 301.202 li
cp
f
407.711 304.922 mo
411.311 304.922 li
411.311 301.202 li
407.711 301.202 li
cp
f
408.191 304.922 mo
411.791 304.922 li
411.791 301.202 li
408.191 301.202 li
cp
f
408.791 304.922 mo
412.391 304.922 li
412.391 301.202 li
408.791 301.202 li
cp
f
409.271 304.922 mo
412.871 304.922 li
412.871 301.202 li
409.271 301.202 li
cp
f
409.871 304.922 mo
413.471 304.922 li
413.471 301.202 li
409.871 301.202 li
cp
f
410.351 304.922 mo
413.951 304.922 li
413.951 301.202 li
410.351 301.202 li
cp
f
410.951 304.922 mo
414.551 304.922 li
414.551 301.202 li
410.951 301.202 li
cp
f
411.311 304.922 mo
415.031 304.922 li
415.031 301.202 li
411.311 301.202 li
cp
f
412.031 304.922 mo
415.631 304.922 li
415.631 301.202 li
412.031 301.202 li
cp
f
412.391 304.922 mo
416.111 304.922 li
416.111 301.202 li
412.391 301.202 li
cp
f
413.111 304.922 mo
416.711 304.922 li
416.711 301.202 li
413.111 301.202 li
cp
f
413.471 304.922 mo
417.191 304.922 li
417.191 301.202 li
413.471 301.202 li
cp
f
414.191 304.922 mo
417.791 304.922 li
417.791 301.202 li
414.191 301.202 li
cp
f
414.551 304.922 mo
418.271 304.922 li
418.271 301.202 li
414.551 301.202 li
cp
f
415.151 304.922 mo
418.871 304.922 li
418.871 301.202 li
415.151 301.202 li
cp
f
415.631 304.922 mo
419.351 304.922 li
419.351 301.202 li
415.631 301.202 li
cp
f
416.231 304.922 mo
419.951 304.922 li
419.951 301.202 li
416.231 301.202 li
cp
f
416.711 304.922 mo
420.431 304.922 li
420.431 301.202 li
416.711 301.202 li
cp
f
417.311 304.922 mo
421.031 304.922 li
421.031 301.202 li
417.311 301.202 li
cp
f
417.791 304.922 mo
421.511 304.922 li
421.511 301.202 li
417.791 301.202 li
cp
f
418.271 304.922 mo
421.991 304.922 li
421.991 301.202 li
418.271 301.202 li
cp
f
418.871 304.922 mo
422.591 304.922 li
422.591 301.202 li
418.871 301.202 li
cp
f
419.351 304.922 mo
423.071 304.922 li
423.071 301.202 li
419.351 301.202 li
cp
f
419.951 304.922 mo
423.671 304.922 li
423.671 301.202 li
419.951 301.202 li
cp
f
420.431 304.922 mo
424.151 304.922 li
424.151 301.202 li
420.431 301.202 li
cp
f
421.031 304.922 mo
424.751 304.922 li
424.751 301.202 li
421.031 301.202 li
cp
f
421.511 304.922 mo
425.231 304.922 li
425.231 301.202 li
421.511 301.202 li
cp
f
422.111 304.922 mo
425.831 304.922 li
425.831 301.202 li
422.111 301.202 li
cp
f
422.591 304.922 mo
426.311 304.922 li
426.311 301.202 li
422.591 301.202 li
cp
f
423.191 304.922 mo
426.911 304.922 li
426.911 301.202 li
423.191 301.202 li
cp
f
423.671 304.922 mo
427.391 304.922 li
427.391 301.202 li
423.671 301.202 li
cp
f
424.271 304.922 mo
427.991 304.922 li
427.991 301.202 li
424.271 301.202 li
cp
f
424.751 304.922 mo
428.471 304.922 li
428.471 301.202 li
424.751 301.202 li
cp
f
425.351 304.922 mo
429.071 304.922 li
429.071 301.202 li
425.351 301.202 li
cp
f
425.831 304.922 mo
429.431 304.922 li
429.431 301.202 li
425.831 301.202 li
cp
f
426.431 304.922 mo
430.151 304.922 li
430.151 301.202 li
426.431 301.202 li
cp
f
426.911 304.922 mo
430.511 304.922 li
430.511 301.202 li
426.911 301.202 li
cp
f
427.511 304.922 mo
431.231 304.922 li
431.231 301.202 li
427.511 301.202 li
cp
f
427.991 304.922 mo
431.591 304.922 li
431.591 301.202 li
427.991 301.202 li
cp
f
428.591 304.922 mo
432.311 304.922 li
432.311 301.202 li
428.591 301.202 li
cp
f
429.071 304.922 mo
432.671 304.922 li
432.671 301.202 li
429.071 301.202 li
cp
f
429.431 304.922 mo
433.151 304.922 li
433.151 301.202 li
429.431 301.202 li
cp
f
430.151 304.922 mo
433.751 304.922 li
433.751 301.202 li
430.151 301.202 li
cp
f
430.511 304.922 mo
434.231 304.922 li
434.231 301.202 li
430.511 301.202 li
cp
f
431.231 304.922 mo
434.831 304.922 li
434.831 301.202 li
431.231 301.202 li
cp
f
431.591 306.602 mo
435.311 306.602 li
435.311 302.882 li
431.591 302.882 li
cp
f
432.311 306.602 mo
435.911 306.602 li
435.911 302.882 li
432.311 302.882 li
cp
f
432.671 306.602 mo
436.391 306.602 li
436.391 302.882 li
432.671 302.882 li
cp
f
433.271 306.602 mo
436.991 306.602 li
436.991 302.882 li
433.271 302.882 li
cp
f
433.751 306.602 mo
437.471 306.602 li
437.471 302.882 li
433.751 302.882 li
cp
f
434.351 306.602 mo
438.071 306.602 li
438.071 302.882 li
434.351 302.882 li
cp
f
434.831 306.602 mo
438.551 306.602 li
438.551 302.882 li
434.831 302.882 li
cp
f
435.431 306.602 mo
439.151 306.602 li
439.151 302.882 li
435.431 302.882 li
cp
f
435.911 306.602 mo
439.631 306.602 li
439.631 302.882 li
435.911 302.882 li
cp
f
436.511 306.602 mo
440.231 306.602 li
440.231 302.882 li
436.511 302.882 li
cp
f
436.991 306.602 mo
440.711 306.602 li
440.711 302.882 li
436.991 302.882 li
cp
f
437.591 306.602 mo
441.311 306.602 li
441.311 302.882 li
437.591 302.882 li
cp
f
438.071 306.602 mo
441.791 306.602 li
441.791 302.882 li
438.071 302.882 li
cp
f
438.671 306.602 mo
442.391 306.602 li
442.391 302.882 li
438.671 302.882 li
cp
f
439.151 306.602 mo
442.871 306.602 li
442.871 302.882 li
439.151 302.882 li
cp
f
439.631 306.602 mo
443.351 306.602 li
443.351 302.882 li
439.631 302.882 li
cp
f
440.231 306.602 mo
443.951 306.602 li
443.951 302.882 li
440.231 302.882 li
cp
f
440.711 306.602 mo
444.431 306.602 li
444.431 302.882 li
440.711 302.882 li
cp
f
441.311 306.602 mo
445.031 306.602 li
445.031 302.882 li
441.311 302.882 li
cp
f
441.791 306.602 mo
445.511 306.602 li
445.511 302.882 li
441.791 302.882 li
cp
f
442.391 306.602 mo
446.111 306.602 li
446.111 302.882 li
442.391 302.882 li
cp
f
442.871 306.602 mo
446.591 306.602 li
446.591 302.882 li
442.871 302.882 li
cp
f
443.471 306.602 mo
447.191 306.602 li
447.191 302.882 li
443.471 302.882 li
cp
f
443.951 306.602 mo
447.551 306.602 li
447.551 302.882 li
443.951 302.882 li
cp
f
444.551 306.602 mo
448.271 306.602 li
448.271 302.882 li
444.551 302.882 li
cp
f
445.031 306.602 mo
448.631 306.602 li
448.631 302.882 li
445.031 302.882 li
cp
f
445.631 306.602 mo
449.351 306.602 li
449.351 302.882 li
445.631 302.882 li
cp
f
446.111 306.602 mo
449.711 306.602 li
449.711 302.882 li
446.111 302.882 li
cp
f
446.711 306.602 mo
450.431 306.602 li
450.431 302.882 li
446.711 302.882 li
cp
f
447.191 306.602 mo
450.791 306.602 li
450.791 302.882 li
447.191 302.882 li
cp
f
447.791 306.602 mo
451.391 306.602 li
451.391 302.882 li
447.791 302.882 li
cp
f
448.271 308.282 mo
451.871 308.282 li
451.871 304.562 li
448.271 304.562 li
cp
f
448.871 308.282 mo
452.471 308.282 li
452.471 304.562 li
448.871 304.562 li
cp
f
449.351 308.282 mo
452.951 308.282 li
452.951 304.562 li
449.351 304.562 li
cp
f
449.951 308.282 mo
453.551 308.282 li
453.551 304.562 li
449.951 304.562 li
cp
f
450.431 308.282 mo
454.031 308.282 li
454.031 304.562 li
450.431 304.562 li
cp
f
450.791 308.282 mo
454.511 308.282 li
454.511 304.562 li
450.791 304.562 li
cp
f
451.391 308.282 mo
455.111 308.282 li
455.111 304.562 li
451.391 304.562 li
cp
f
451.871 308.282 mo
455.591 308.282 li
455.591 304.562 li
451.871 304.562 li
cp
f
452.471 308.282 mo
456.191 308.282 li
456.191 304.562 li
452.471 304.562 li
cp
f
452.951 308.282 mo
456.671 308.282 li
456.671 304.562 li
452.951 304.562 li
cp
f
453.551 308.282 mo
457.271 308.282 li
457.271 304.562 li
453.551 304.562 li
cp
f
454.031 308.282 mo
457.751 308.282 li
457.751 304.562 li
454.031 304.562 li
cp
f
454.631 308.282 mo
458.351 308.282 li
458.351 304.562 li
454.631 304.562 li
cp
f
455.111 308.282 mo
458.831 308.282 li
458.831 304.562 li
455.111 304.562 li
cp
f
455.711 308.282 mo
459.431 308.282 li
459.431 304.562 li
455.711 304.562 li
cp
f
456.191 308.282 mo
459.911 308.282 li
459.911 304.562 li
456.191 304.562 li
cp
f
456.791 308.282 mo
460.511 308.282 li
460.511 304.562 li
456.791 304.562 li
cp
f
457.271 308.282 mo
460.991 308.282 li
460.991 304.562 li
457.271 304.562 li
cp
f
457.871 308.282 mo
461.591 308.282 li
461.591 304.562 li
457.871 304.562 li
cp
f
458.351 308.282 mo
462.071 308.282 li
462.071 304.562 li
458.351 304.562 li
cp
f
458.951 308.282 mo
462.671 308.282 li
462.671 304.562 li
458.951 304.562 li
cp
f
459.431 308.282 mo
463.151 308.282 li
463.151 304.562 li
459.431 304.562 li
cp
f
460.031 308.282 mo
463.751 308.282 li
463.751 304.562 li
460.031 304.562 li
cp
f
460.511 308.282 mo
464.231 308.282 li
464.231 304.562 li
460.511 304.562 li
cp
f
460.991 308.282 mo
464.711 308.282 li
464.711 304.562 li
460.991 304.562 li
cp
f
461.591 308.282 mo
465.311 308.282 li
465.311 304.562 li
461.591 304.562 li
cp
f
462.071 308.282 mo
465.671 308.282 li
465.671 304.562 li
462.071 304.562 li
cp
f
462.671 308.282 mo
466.391 308.282 li
466.391 304.562 li
462.671 304.562 li
cp
f
463.151 308.282 mo
466.751 308.282 li
466.751 304.562 li
463.151 304.562 li
cp
f
463.751 308.282 mo
467.471 308.282 li
467.471 304.562 li
463.751 304.562 li
cp
f
464.231 308.282 mo
467.831 308.282 li
467.831 304.562 li
464.231 304.562 li
cp
f
464.831 308.282 mo
468.551 308.282 li
468.551 304.562 li
464.831 304.562 li
cp
f
465.311 308.282 mo
468.911 308.282 li
468.911 304.562 li
465.311 304.562 li
cp
f
465.911 308.282 mo
469.511 308.282 li
469.511 304.562 li
465.911 304.562 li
cp
f
466.391 308.282 mo
469.991 308.282 li
469.991 304.562 li
466.391 304.562 li
cp
f
466.991 308.282 mo
470.591 308.282 li
470.591 304.562 li
466.991 304.562 li
cp
f
467.471 308.282 mo
471.071 308.282 li
471.071 304.562 li
467.471 304.562 li
cp
f
468.071 308.282 mo
471.671 308.282 li
471.671 304.562 li
468.071 304.562 li
cp
f
468.551 308.282 mo
472.151 308.282 li
472.151 304.562 li
468.551 304.562 li
cp
f
469.151 308.282 mo
472.751 308.282 li
472.751 304.562 li
469.151 304.562 li
cp
f
469.511 308.282 mo
473.231 308.282 li
473.231 304.562 li
469.511 304.562 li
cp
f
470.231 308.282 mo
473.831 308.282 li
473.831 304.562 li
470.231 304.562 li
cp
f
470.591 308.282 mo
474.311 308.282 li
474.311 304.562 li
470.591 304.562 li
cp
f
471.311 308.282 mo
474.911 308.282 li
474.911 304.562 li
471.311 304.562 li
cp
f
471.671 308.282 mo
475.391 308.282 li
475.391 304.562 li
471.671 304.562 li
cp
f
472.151 308.282 mo
475.871 308.282 li
475.871 304.562 li
472.151 304.562 li
cp
f
472.751 308.282 mo
476.471 308.282 li
476.471 304.562 li
472.751 304.562 li
cp
f
473.231 308.282 mo
476.951 308.282 li
476.951 304.562 li
473.231 304.562 li
cp
f
473.831 308.282 mo
477.551 308.282 li
477.551 304.562 li
473.831 304.562 li
cp
f
474.311 308.282 mo
478.031 308.282 li
478.031 304.562 li
474.311 304.562 li
cp
f
474.911 308.282 mo
478.631 308.282 li
478.631 304.562 li
474.911 304.562 li
cp
f
475.391 308.282 mo
479.111 308.282 li
479.111 304.562 li
475.391 304.562 li
cp
f
475.991 308.282 mo
479.711 308.282 li
479.711 304.562 li
475.991 304.562 li
cp
f
476.471 308.282 mo
480.191 308.282 li
480.191 304.562 li
476.471 304.562 li
cp
f
477.071 308.282 mo
480.791 308.282 li
480.791 304.562 li
477.071 304.562 li
cp
f
477.551 308.282 mo
481.271 308.282 li
481.271 304.562 li
477.551 304.562 li
cp
f
478.151 308.282 mo
481.871 308.282 li
481.871 304.562 li
478.151 304.562 li
cp
f
478.631 308.282 mo
482.351 308.282 li
482.351 304.562 li
478.631 304.562 li
cp
f
479.231 308.282 mo
482.951 308.282 li
482.951 304.562 li
479.231 304.562 li
cp
f
479.711 308.282 mo
483.431 308.282 li
483.431 304.562 li
479.711 304.562 li
cp
f
353.951 163.682 mo
354.431 163.322 li
354.551 163.322 li
354.551 163.442 li
354.071 163.802 li
353.951 163.802 li
353.951 163.682 li
.69015 .93228 0 0 cmyk
f
gsave
54.5512 14.522 mo
482.471 14.522 li
482.471 324.482 li
54.5512 324.482 li
cp
eclp
54.1912 322.082 mo
54.6712 321.602 li
54.7912 321.602 54.9112 321.482 54.9112 321.482 cv
56.1112 320.762 li
56.5912 320.522 li
56.9512 320.162 li
57.0712 320.162 57.1912 320.042 57.3112 320.042 cv
57.9112 319.802 li
57.5512 319.922 li
58.0312 319.562 li
58.7512 319.202 li
59.3512 318.842 li
59.8312 318.602 li
60.5512 318.362 li
60.1912 318.482 li
60.6712 318.122 li
61.3912 317.762 li
61.7512 317.402 li
62.4712 317.042 li
62.5912 316.922 62.7112 316.922 62.8312 316.802 cv
63.3112 316.682 li
62.8312 316.922 li
63.4312 316.442 li
63.5512 316.442 63.5512 316.322 63.6712 316.322 cv
64.1512 316.082 li
63.9112 316.202 li
64.3912 315.842 li
64.5112 315.842 64.6312 315.722 64.7512 315.722 cv
65.3512 315.482 li
64.9912 315.602 li
65.4712 315.242 li
65.5912 315.242 65.7112 315.122 65.8312 315.122 cv
66.4312 314.882 li
66.0712 315.002 li
66.5512 314.642 li
67.2712 314.282 li
67.8712 313.922 li
68.3512 313.682 li
68.7112 313.322 li
68.8312 313.322 68.8312 313.202 68.9512 313.202 cv
69.9112 312.722 li
70.5112 312.362 li
70.9912 312.122 li
71.3512 311.762 li
71.4712 311.762 71.5912 311.642 71.7112 311.642 cv
72.3112 311.402 li
71.9512 311.522 li
72.4312 311.162 li
73.1512 310.802 li
73.7512 310.442 li
73.5112 310.562 li
73.9912 310.202 li
74.1112 310.202 74.2312 310.082 74.3512 310.082 cv
74.9512 309.842 li
74.4712 310.082 li
74.9512 309.602 li
75.0712 309.482 75.3112 309.362 75.4312 309.362 cv
76.0312 309.122 li
76.3912 308.882 li
76.8712 308.642 li
77.2312 308.282 li
77.3512 308.282 77.4712 308.162 77.5912 308.162 cv
78.1912 307.922 li
77.8312 308.042 li
78.7912 307.322 li
78.9112 307.322 79.0312 307.202 79.1512 307.202 cv
79.7512 306.962 li
80.1112 306.722 li
79.8712 306.842 li
80.4712 306.362 li
80.5912 306.362 80.5912 306.242 80.7112 306.242 cv
81.1912 306.002 li
81.9112 305.762 li
81.5512 305.882 li
82.0312 305.522 li
82.7512 305.162 li
83.3512 304.802 li
83.8312 304.562 li
84.1912 304.202 li
84.6712 303.842 li
84.7912 303.842 84.9112 303.722 85.0312 303.722 cv
85.6312 303.482 li
85.9912 303.242 li
86.4712 303.002 li
86.8312 302.642 li
86.9512 302.642 87.0712 302.522 87.1912 302.522 cv
87.7912 302.282 li
89.1702 301.432 89.5872 300.899 91.2712 300.122 cv
91.6312 299.762 li
91.7512 299.762 91.8712 299.642 91.9912 299.642 cv
92.5912 299.402 li
92.9512 299.162 li
92.7112 299.282 li
93.3112 298.802 li
93.4312 298.802 93.4312 298.682 93.5512 298.682 cv
94.9912 297.962 li
95.3512 297.602 li
95.4712 297.602 95.5912 297.482 95.7112 297.482 cv
96.3112 297.242 li
95.9512 297.362 li
96.4312 297.002 li
97.1512 296.642 li
97.5112 296.282 li
97.6312 296.282 97.7512 296.162 97.8712 296.162 cv
98.4712 295.922 li
98.8312 295.682 li
99.3112 295.442 li
100.031 295.202 li
99.6712 295.322 li
100.151 294.962 li
100.271 294.962 100.391 294.842 100.511 294.842 cv
101.111 294.602 li
101.471 294.362 li
102.191 294.122 li
101.711 294.362 li
102.191 293.882 li
102.311 293.762 102.551 293.642 102.671 293.642 cv
103.271 293.402 li
103.631 293.162 li
104.351 292.922 li
104.711 292.682 li
104.471 292.802 li
104.951 292.442 li
105.071 292.442 105.191 292.322 105.311 292.322 cv
105.911 292.082 li
106.664 291.584 107.663 291.127 108.431 290.642 cv
108.911 290.402 li
108.671 290.522 li
109.151 290.042 li
109.271 289.922 109.391 289.922 109.511 289.802 cv
109.991 289.562 li
111.35 289.086 112.592 288.358 113.951 287.882 cv
114.311 287.642 li
114.071 287.762 li
114.551 287.402 li
114.671 287.402 114.791 287.282 114.911 287.282 cv
115.511 287.042 li
115.151 287.162 li
115.631 286.802 li
115.751 286.802 115.871 286.682 115.991 286.682 cv
116.591 286.442 li
116.231 286.562 li
116.711 286.202 li
117.431 285.842 li
118.031 285.482 li
118.511 285.242 li
118.871 284.882 li
118.991 284.882 118.991 284.762 119.111 284.762 cv
119.591 284.522 li
120.311 284.282 li
120.671 284.042 li
121.151 283.802 li
121.511 283.442 li
121.631 283.442 121.751 283.322 121.871 283.322 cv
122.471 283.082 li
122.111 283.202 li
122.591 282.842 li
122.711 282.842 122.831 282.722 122.951 282.722 cv
123.551 282.482 li
123.191 282.602 li
124.151 281.882 li
124.271 281.882 124.391 281.762 124.511 281.762 cv
125.111 281.522 li
125.471 281.282 li
125.231 281.402 li
125.831 280.922 li
125.951 280.922 125.951 280.802 126.071 280.802 cv
126.551 280.562 li
127.41 280.143 128.332 279.541 129.191 279.122 cv
129.791 278.762 li
129.551 278.882 li
130.031 278.522 li
130.751 278.162 li
131.351 277.802 li
131.831 277.562 li
132.191 277.202 li
132.311 277.202 132.431 277.082 132.551 277.082 cv
133.151 276.842 li
132.791 276.962 li
133.271 276.602 li
133.991 276.242 li
134.351 275.882 li
134.471 275.882 134.471 275.762 134.591 275.762 cv
135.071 275.522 li
136.431 274.853 137.542 274.107 138.791 273.362 cv
139.391 273.002 li
139.151 273.122 li
139.631 272.762 li
140.351 272.402 li
140.951 272.042 li
141.431 271.802 li
141.791 271.442 li
141.911 271.442 142.031 271.322 142.151 271.322 cv
142.751 271.082 li
142.391 271.202 li
142.871 270.842 li
142.991 270.842 143.111 270.722 143.231 270.722 cv
143.831 270.482 li
143.471 270.602 li
143.951 270.242 li
144.071 270.242 144.071 270.122 144.191 270.122 cv
145.151 269.642 li
145.511 269.282 li
146.231 268.922 li
146.831 268.562 li
147.551 268.322 li
147.071 268.562 li
147.551 268.082 li
147.671 267.962 147.911 267.842 148.031 267.842 cv
148.631 267.602 li
148.991 267.362 li
149.471 267.122 li
150.071 266.762 li
149.831 266.882 li
150.311 266.522 li
150.431 266.522 150.551 266.402 150.671 266.402 cv
151.271 266.162 li
151.631 265.922 li
152.351 265.682 li
152.711 265.442 li
153.191 265.202 li
153.551 264.842 li
153.671 264.842 153.791 264.722 153.911 264.722 cv
154.511 264.482 li
154.151 264.602 li
155.111 263.882 li
155.231 263.882 155.351 263.762 155.471 263.762 cv
156.071 263.522 li
155.711 263.642 li
156.191 263.282 li
156.311 263.282 156.431 263.162 156.551 263.162 cv
157.151 262.922 li
157.511 262.682 li
157.991 262.442 li
158.351 262.082 li
158.471 262.082 158.591 261.962 158.711 261.962 cv
159.311 261.722 li
158.951 261.842 li
159.431 261.482 li
159.551 261.482 159.551 261.362 159.671 261.362 cv
160.151 261.122 li
160.871 260.882 li
160.391 261.122 li
160.871 260.642 li
161.351 260.162 162.191 260.162 162.791 260.642 cv
163.271 261.122 163.271 261.962 162.791 262.562 cv
162.311 263.042 li
162.191 263.162 161.951 263.282 161.831 263.282 cv
160.871 263.762 li
161.111 263.642 li
160.631 264.002 li
160.511 264.002 160.391 264.122 160.271 264.122 cv
159.671 264.362 li
160.031 264.242 li
159.431 264.602 li
158.711 265.082 li
157.511 265.562 li
157.871 265.442 li
157.391 265.802 li
157.271 265.802 157.151 265.922 157.031 265.922 cv
156.431 266.162 li
156.791 266.042 li
155.831 266.762 li
155.711 266.762 155.591 266.882 155.471 266.882 cv
154.871 267.122 li
155.231 267.002 li
154.631 267.362 li
153.911 267.842 li
153.311 268.082 li
152.831 268.322 li
151.631 268.802 li
151.991 268.682 li
151.511 269.042 li
151.391 269.042 151.271 269.162 151.271 269.162 cv
150.911 269.282 li
150.191 269.762 li
148.991 270.242 li
149.471 270.002 li
148.991 270.482 li
148.871 270.602 148.631 270.722 148.511 270.722 cv
148.031 270.962 li
147.671 271.082 li
147.191 271.442 li
146.591 271.802 li
145.871 272.282 li
145.391 272.522 li
145.631 272.402 li
145.151 272.762 li
145.031 272.762 144.911 272.882 144.791 272.882 cv
144.191 273.122 li
144.551 273.002 li
144.071 273.362 li
143.951 273.362 143.831 273.482 143.711 273.482 cv
143.111 273.722 li
143.471 273.602 li
142.871 273.962 li
142.151 274.442 li
141.791 274.562 li
140.831 275.282 li
140.711 275.282 140.591 275.402 140.591 275.402 cv
140.231 275.522 li
139.001 276.489 137.565 277.078 136.271 277.922 cv
135.791 278.162 li
136.031 278.042 li
135.431 278.402 li
134.471 279.122 li
134.351 279.122 134.231 279.242 134.111 279.242 cv
133.511 279.482 li
133.871 279.362 li
133.271 279.722 li
132.551 280.202 li
132.191 280.322 li
131.231 281.042 li
131.111 281.042 130.991 281.162 130.991 281.162 cv
130.631 281.282 li
129.712 281.92 128.67 282.324 127.751 282.962 cv
127.271 283.202 li
127.511 283.082 li
126.911 283.562 li
126.791 283.562 126.791 283.562 126.671 283.682 cv
125.471 284.162 li
125.831 284.042 li
124.871 284.762 li
124.751 284.762 124.631 284.882 124.511 284.882 cv
123.911 285.122 li
124.271 285.002 li
123.791 285.362 li
123.671 285.362 123.551 285.482 123.431 285.482 cv
122.831 285.722 li
123.191 285.602 li
122.591 285.962 li
121.871 286.442 li
121.271 286.682 li
120.311 287.162 li
120.551 287.042 li
119.951 287.402 li
119.231 287.882 li
118.871 288.002 li
117.911 288.722 li
117.791 288.722 117.671 288.842 117.551 288.842 cv
116.951 289.082 li
117.311 288.962 li
116.831 289.322 li
116.711 289.322 116.591 289.442 116.471 289.442 cv
115.871 289.682 li
116.231 289.562 li
115.751 289.922 li
115.631 289.922 115.511 290.042 115.511 290.042 cv
114.911 290.282 li
113.686 290.874 112.416 291.37 111.191 291.962 cv
110.711 292.202 li
111.071 291.962 li
110.591 292.442 li
110.471 292.442 110.351 292.562 110.351 292.562 cv
109.631 293.042 li
109.271 293.162 li
108.551 293.642 li
108.191 293.762 li
107.471 294.242 li
106.271 294.722 li
106.631 294.602 li
106.151 294.962 li
106.031 294.962 105.911 295.082 105.911 295.082 cv
105.311 295.322 li
104.831 295.562 li
103.631 296.042 li
104.111 295.802 li
103.631 296.282 li
103.511 296.402 103.271 296.522 103.151 296.522 cv
102.671 296.762 li
101.471 297.242 li
101.831 297.122 li
101.351 297.482 li
101.231 297.482 101.111 297.602 100.991 297.602 cv
100.031 298.082 li
98.8312 298.562 li
99.1912 298.442 li
98.5912 298.802 li
97.6312 299.522 li
97.5112 299.522 97.3912 299.642 97.2712 299.642 cv
96.6712 299.882 li
97.0312 299.762 li
96.4312 300.122 li
95.7112 300.602 li
94.7512 301.082 li
94.9912 300.962 li
94.3912 301.442 li
94.2712 301.442 94.2712 301.442 94.1512 301.562 cv
92.9512 302.042 li
93.3112 301.922 li
92.7112 302.282 li
91.4052 302.946 90.0012 304.226 88.7512 304.682 cv
88.1512 304.922 li
88.5112 304.802 li
87.9112 305.162 li
87.1912 305.642 li
85.9912 306.122 li
86.3512 306.002 li
85.8712 306.362 li
85.2712 306.722 li
84.5512 307.202 li
84.1912 307.322 li
83.2312 308.042 li
83.1112 308.042 82.9912 308.162 82.8712 308.162 cv
81.9112 308.642 li
82.1512 308.522 li
81.5512 309.002 li
81.4312 309.002 81.4312 309.002 81.3112 309.122 cv
80.1112 309.602 li
80.4712 309.482 li
79.5112 310.202 li
79.3912 310.202 79.2712 310.322 79.1512 310.322 cv
78.5512 310.562 li
78.9112 310.442 li
78.3112 310.802 li
77.5912 311.282 li
76.3912 311.762 li
76.8712 311.522 li
76.3912 312.002 li
76.2712 312.122 76.0312 312.242 75.9112 312.242 cv
75.3112 312.482 li
75.6712 312.362 li
75.1912 312.722 li
75.0712 312.722 74.9512 312.842 74.9512 312.842 cv
74.5912 312.962 li
73.6312 313.682 li
73.5112 313.682 73.3912 313.802 73.2712 313.802 cv
72.6712 314.042 li
73.0312 313.922 li
72.4312 314.282 li
71.7112 314.762 li
71.3512 314.882 li
70.6312 315.362 li
70.1512 315.602 li
70.3912 315.482 li
69.7912 315.842 li
69.0712 316.322 li
68.7112 316.442 li
67.7512 317.162 li
67.6312 317.162 67.5112 317.282 67.3912 317.282 cv
66.7912 317.522 li
67.1512 317.402 li
66.6712 317.762 li
66.5512 317.762 66.4312 317.882 66.3112 317.882 cv
65.7112 318.122 li
66.0712 318.002 li
65.5912 318.362 li
65.4712 318.362 65.3512 318.482 65.3512 318.482 cv
64.8712 318.722 li
65.1112 318.602 li
64.5112 319.082 li
64.3912 319.202 64.1512 319.202 64.0312 319.322 cv
63.5512 319.442 li
63.9112 319.202 li
63.4312 319.562 li
62.8312 319.922 li
61.8712 320.642 li
61.7512 320.642 61.6312 320.762 61.5112 320.762 cv
60.5512 321.242 li
60.1912 321.362 li
59.2312 322.082 li
59.1112 322.082 58.9912 322.202 58.8712 322.202 cv
58.2712 322.442 li
58.6312 322.322 li
58.0312 322.682 li
57.3112 323.162 li
56.9512 323.282 li
56.3512 323.642 li
56.5912 323.522 li
56.1112 324.002 li
55.5112 324.482 54.6712 324.482 54.1912 324.002 cv
53.7112 323.402 53.7112 322.562 54.1912 322.082 cv
f
grestore
161.351 260.402 mo
161.951 260.162 li
162.311 259.922 li
163.031 259.682 li
163.391 259.442 li
164.111 259.202 li
163.751 259.322 li
164.231 258.962 li
164.351 258.962 164.351 258.842 164.471 258.842 cv
164.951 258.602 li
165.671 258.362 li
166.031 258.122 li
166.751 257.882 li
166.391 258.002 li
166.871 257.642 li
166.991 257.642 167.111 257.522 167.231 257.522 cv
167.831 257.282 li
167.471 257.402 li
167.951 257.042 li
168.071 257.042 168.191 256.922 168.311 256.922 cv
168.911 256.682 li
169.737 256.145 171.65 255.414 172.631 255.002 cv
172.991 254.762 li
173.111 254.762 173.231 254.642 173.351 254.642 cv
173.951 254.522 li
173.591 254.642 li
174.071 254.402 li
174.791 254.162 li
175.151 253.922 li
175.631 253.682 li
176.351 253.442 li
176.951 253.202 li
176.591 253.442 li
177.791 252.722 li
178.511 252.482 li
178.871 252.242 li
179.591 252.002 li
179.231 252.122 li
179.711 251.762 li
179.831 251.762 179.831 251.642 179.951 251.642 cv
180.911 251.162 li
180.671 251.282 li
181.151 250.802 li
181.271 250.682 181.511 250.562 181.631 250.562 cv
182.231 250.322 li
182.591 250.082 li
183.311 249.842 li
183.671 249.602 li
184.391 249.362 li
184.751 249.122 li
184.391 249.362 li
184.871 248.882 li
184.991 248.762 185.231 248.642 185.351 248.642 cv
185.951 248.402 li
185.591 248.522 li
186.071 248.162 li
187.066 247.629 188.127 247.089 189.191 246.722 cv
189.551 246.482 li
189.311 246.602 li
189.791 246.242 li
189.911 246.242 190.031 246.122 190.151 246.122 cv
190.751 245.882 li
191.111 245.642 li
191.831 245.402 li
192.191 245.162 li
192.911 244.922 li
193.271 244.682 li
193.991 244.442 li
193.631 244.562 li
194.111 244.202 li
194.231 244.202 194.351 244.082 194.471 244.082 cv
195.071 243.842 li
194.711 243.962 li
195.191 243.602 li
195.311 243.602 195.311 243.482 195.431 243.482 cv
196.391 243.002 li
196.151 243.122 li
196.631 242.642 li
196.751 242.522 196.991 242.402 197.111 242.402 cv
197.711 242.162 li
198.071 241.922 li
198.791 241.682 li
199.151 241.442 li
199.871 241.202 li
200.231 240.962 li
199.991 241.082 li
200.471 240.722 li
201.752 239.98 202.732 239.724 203.951 238.922 cv
204.671 238.682 li
204.311 238.802 li
205.271 238.082 li
205.391 238.082 205.511 237.962 205.631 237.962 cv
206.231 237.722 li
205.871 237.842 li
206.351 237.482 li
206.471 237.482 206.591 237.362 206.711 237.362 cv
207.311 237.122 li
207.671 236.882 li
208.151 236.642 li
208.751 236.282 li
209.471 236.042 li
209.111 236.162 li
209.591 235.802 li
209.711 235.802 209.711 235.682 209.831 235.682 cv
210.311 235.442 li
211.031 235.202 li
211.391 234.962 li
211.871 234.722 li
212.471 234.362 li
213.191 234.122 li
213.551 233.882 li
213.311 234.002 li
213.911 233.522 li
214.031 233.522 214.031 233.402 214.151 233.402 cv
215.591 232.682 li
215.951 232.322 li
216.671 231.962 li
217.031 231.602 li
217.151 231.602 217.271 231.482 217.391 231.482 cv
217.991 231.242 li
217.631 231.362 li
218.111 231.002 li
218.231 231.002 218.351 230.882 218.471 230.882 cv
219.071 230.642 li
218.711 230.762 li
219.191 230.402 li
219.311 230.402 219.431 230.282 219.551 230.282 cv
220.151 230.042 li
219.791 230.162 li
220.271 229.802 li
220.391 229.802 220.391 229.682 220.511 229.682 cv
220.991 229.442 li
221.854 228.906 222.688 228.318 223.631 227.882 cv
223.991 227.522 li
224.111 227.522 224.231 227.402 224.351 227.402 cv
224.951 227.162 li
225.598 226.618 227.308 226.206 227.951 225.722 cv
228.671 225.482 li
228.311 225.602 li
228.791 225.242 li
228.911 225.242 229.031 225.122 229.151 225.122 cv
229.751 224.882 li
232.189 223.626 235.073 222.522 237.551 221.282 cv
238.271 221.042 li
237.911 221.162 li
238.391 220.802 li
238.511 220.802 238.631 220.682 238.751 220.682 cv
239.351 220.442 li
240.338 219.919 241.398 219.504 242.351 218.882 cv
243.071 218.642 li
242.711 218.762 li
243.191 218.402 li
243.911 218.042 li
244.511 217.682 li
245.231 217.442 li
244.871 217.562 li
245.831 216.842 li
245.951 216.842 246.071 216.722 246.191 216.722 cv
246.791 216.482 li
247.151 216.242 li
247.631 216.002 li
248.231 215.642 li
248.951 215.402 li
248.591 215.522 li
249.071 215.162 li
249.191 215.162 249.311 215.042 249.431 215.042 cv
250.031 214.802 li
250.391 214.562 li
250.151 214.682 li
250.631 214.322 li
250.751 214.322 250.871 214.202 250.991 214.202 cv
251.591 213.962 li
252.392 213.521 253.95 212.86 254.831 212.522 cv
255.191 212.282 li
254.951 212.402 li
255.431 212.042 li
255.551 212.042 255.671 211.922 255.791 211.922 cv
256.391 211.682 li
257.402 211.017 258.508 210.539 259.631 210.122 cv
259.991 209.882 li
259.751 210.002 li
260.231 209.642 li
260.351 209.642 260.471 209.522 260.591 209.522 cv
261.191 209.282 li
261.551 209.042 li
262.271 208.802 li
261.911 208.922 li
262.391 208.562 li
262.511 208.562 262.631 208.442 262.751 208.442 cv
263.351 208.202 li
264.539 207.671 265.654 206.99 266.831 206.402 cv
267.191 206.042 li
267.311 206.042 267.431 205.922 267.551 205.922 cv
268.151 205.682 li
268.871 205.322 269.591 205.682 269.831 206.402 cv
270.071 207.122 269.831 207.842 269.111 208.082 cv
268.511 208.322 li
268.871 208.202 li
268.271 208.562 li
267.152 209.277 265.545 210.12 264.311 210.602 cv
263.711 210.842 li
264.071 210.722 li
263.591 211.082 li
263.471 211.082 263.351 211.202 263.231 211.202 cv
262.751 211.442 li
261.551 211.922 li
261.911 211.802 li
261.431 212.162 li
261.311 212.162 261.191 212.282 261.191 212.282 cv
260.591 212.522 li
259.283 213.064 258.56 213.495 257.351 214.082 cv
256.751 214.322 li
257.111 214.202 li
256.631 214.562 li
256.511 214.562 256.391 214.682 256.391 214.682 cv
255.791 214.922 li
254.744 215.412 253.616 215.911 252.551 216.362 cv
251.951 216.602 li
252.311 216.482 li
251.831 216.842 li
251.711 216.842 251.591 216.962 251.591 216.962 cv
250.391 217.442 li
250.751 217.322 li
250.271 217.682 li
250.151 217.682 250.031 217.802 249.911 217.802 cv
249.431 218.042 li
249.071 218.162 li
248.351 218.642 li
247.151 219.122 li
247.511 219.002 li
246.551 219.722 li
246.431 219.722 246.311 219.842 246.191 219.842 cv
245.711 220.082 li
245.351 220.202 li
244.391 220.922 li
244.271 220.922 244.151 221.042 244.031 221.042 cv
243.551 221.282 li
242.494 221.826 241.448 222.433 240.311 222.842 cv
239.711 223.082 li
240.071 222.962 li
239.591 223.322 li
239.471 223.322 239.351 223.442 239.231 223.442 cv
238.751 223.682 li
236.07 224.858 233.39 226.095 230.711 227.282 cv
230.111 227.522 li
230.471 227.402 li
229.991 227.762 li
229.871 227.762 229.751 227.882 229.631 227.882 cv
229.151 228.122 li
228.046 228.545 227.008 229.12 225.911 229.562 cv
225.311 229.802 li
225.671 229.682 li
225.071 230.042 li
224.103 230.643 223.146 231.17 222.191 231.842 cv
221.711 232.082 li
221.951 231.962 li
221.471 232.322 li
221.351 232.322 221.231 232.442 221.111 232.442 cv
220.511 232.682 li
220.871 232.562 li
220.391 232.922 li
220.271 232.922 220.151 233.042 220.031 233.042 cv
219.431 233.282 li
219.791 233.162 li
219.311 233.522 li
219.191 233.522 219.071 233.642 218.951 233.642 cv
218.351 233.882 li
218.711 233.762 li
218.111 234.122 li
217.631 234.482 li
217.031 234.842 li
216.311 235.322 li
215.351 235.802 li
215.591 235.682 li
214.991 236.162 li
214.871 236.162 214.871 236.162 214.751 236.282 cv
214.151 236.522 li
213.011 236.991 212.746 237.341 211.511 237.842 cv
211.031 238.082 li
211.271 237.962 li
210.791 238.322 li
210.671 238.322 210.551 238.442 210.431 238.442 cv
209.951 238.682 li
209.591 238.802 li
208.871 239.282 li
207.671 239.762 li
208.031 239.642 li
207.551 240.002 li
207.431 240.002 207.311 240.122 207.191 240.122 cv
206.591 240.362 li
206.951 240.242 li
205.991 240.962 li
205.871 240.962 205.751 241.082 205.631 241.082 cv
205.151 241.322 li
204.791 241.442 li
204.071 241.922 li
203.471 242.162 li
202.991 242.402 li
202.631 242.522 li
201.671 243.242 li
201.551 243.242 201.431 243.362 201.431 243.362 cv
200.831 243.602 li
200.351 243.842 li
199.751 244.082 li
199.271 244.322 li
198.071 244.802 li
198.551 244.562 li
198.071 245.042 li
197.951 245.042 197.831 245.162 197.831 245.162 cv
197.111 245.642 li
196.631 245.882 li
196.871 245.762 li
196.391 246.122 li
196.271 246.122 196.151 246.242 196.031 246.242 cv
195.431 246.482 li
195.791 246.362 li
195.311 246.722 li
195.191 246.722 195.071 246.842 194.951 246.842 cv
194.471 247.082 li
193.567 247.433 192.615 247.931 191.711 248.282 cv
191.111 248.522 li
191.471 248.402 li
190.991 248.762 li
190.871 248.762 190.751 248.882 190.751 248.882 cv
190.151 249.122 li
189.671 249.362 li
189.071 249.602 li
188.591 249.842 li
188.231 249.962 li
187.271 250.682 li
187.151 250.682 187.031 250.802 186.911 250.802 cv
186.311 251.042 li
186.791 250.802 li
186.311 251.282 li
186.191 251.402 186.071 251.402 185.951 251.522 cv
185.351 251.762 li
184.871 252.002 li
184.271 252.242 li
183.791 252.482 li
182.591 252.962 li
183.071 252.722 li
182.591 253.202 li
182.471 253.202 182.351 253.322 182.351 253.322 cv
181.631 253.802 li
181.151 254.042 li
181.391 253.922 li
180.911 254.282 li
180.791 254.282 180.671 254.402 180.551 254.402 cv
180.071 254.642 li
179.471 254.882 li
178.991 255.122 li
178.631 255.242 li
178.031 255.602 li
177.911 255.722 177.791 255.722 177.671 255.842 cv
177.311 255.842 li
176.351 256.322 li
175.751 256.562 li
174.791 257.042 li
174.671 257.042 174.551 257.162 174.431 257.162 cv
173.831 257.282 li
174.191 257.162 li
173.591 257.402 li
172.362 257.957 171.102 258.545 169.871 259.082 cv
169.271 259.322 li
169.631 259.202 li
169.151 259.562 li
169.031 259.562 168.911 259.682 168.791 259.682 cv
168.191 259.922 li
168.551 259.802 li
168.071 260.162 li
167.951 260.162 167.831 260.282 167.711 260.282 cv
167.231 260.522 li
166.631 260.762 li
165.671 261.242 li
165.911 261.122 li
165.431 261.482 li
165.311 261.482 165.191 261.602 165.071 261.602 cv
164.591 261.842 li
163.991 262.082 li
163.511 262.322 li
162.311 262.802 li
161.591 263.042 160.871 262.802 160.631 262.082 cv
160.271 261.362 160.631 260.642 161.351 260.402 cv
f
267.791 205.802 mo
268.271 205.442 li
268.391 205.442 268.511 205.322 268.631 205.322 cv
269.231 205.082 li
268.871 205.202 li
269.351 204.842 li
269.471 204.842 269.591 204.722 269.711 204.722 cv
270.311 204.482 li
269.951 204.602 li
270.911 203.882 li
271.031 203.882 271.151 203.762 271.271 203.762 cv
271.871 203.522 li
272.231 203.282 li
272.711 203.042 li
273.311 202.682 li
273.791 202.442 li
274.151 202.082 li
274.271 202.082 274.391 201.962 274.511 201.962 cv
275.111 201.722 li
276.065 201.066 278.177 200.43 279.191 199.802 cv
279.911 199.562 li
279.551 199.682 li
280.031 199.322 li
280.151 199.322 280.151 199.202 280.271 199.202 cv
280.751 198.962 li
282.382 198.388 284.103 197.346 285.791 196.922 cv
286.391 196.682 li
286.151 196.802 li
286.631 196.562 li
287.351 196.322 li
286.991 196.442 li
287.471 196.082 li
287.591 196.082 287.711 195.962 287.831 195.962 cv
288.431 195.722 li
288.791 195.482 li
289.511 195.242 li
289.151 195.362 li
289.631 195.002 li
289.751 195.002 289.871 194.882 289.991 194.882 cv
290.591 194.642 li
290.951 194.402 li
291.431 194.162 li
292.151 193.922 li
291.791 194.042 li
292.271 193.682 li
292.391 193.682 292.511 193.562 292.631 193.562 cv
293.231 193.322 li
293.591 193.082 li
294.311 192.842 li
294.671 192.602 li
295.391 192.362 li
295.751 192.122 li
295.511 192.242 li
295.991 191.882 li
296.111 191.882 296.231 191.762 296.351 191.762 cv
296.951 191.522 li
299.676 190.257 302.161 188.883 304.991 187.802 cv
305.351 187.562 li
305.111 187.682 li
305.591 187.322 li
306.311 186.962 li
306.911 186.602 li
307.631 186.362 li
307.271 186.482 li
307.751 186.122 li
307.871 186.122 307.991 186.002 308.111 186.002 cv
308.711 185.762 li
308.231 186.002 li
308.711 185.522 li
308.831 185.522 308.951 185.402 308.951 185.402 cv
309.551 185.042 li
311.416 183.883 313.649 183.02 315.671 182.162 cv
316.271 181.922 li
316.031 182.042 li
316.511 181.802 li
317.231 181.562 li
317.591 181.322 li
318.311 181.082 li
317.951 181.202 li
318.431 180.842 li
318.551 180.842 318.671 180.722 318.791 180.722 cv
319.391 180.482 li
319.031 180.602 li
319.511 180.242 li
320.231 179.882 li
320.591 179.522 li
320.711 179.522 320.711 179.402 320.831 179.402 cv
321.311 179.162 li
322.031 178.922 li
321.671 179.042 li
322.151 178.682 li
322.391 178.562 322.511 178.562 322.751 178.442 cv
323.351 178.322 li
322.751 178.562 li
323.231 178.202 li
323.471 178.082 323.591 178.082 323.831 177.962 cv
324.431 177.842 li
323.831 178.082 li
324.311 177.722 li
324.431 177.722 324.551 177.602 324.671 177.602 cv
325.271 177.362 li
326.132 176.727 326.621 176.839 327.671 176.162 cv
328.031 175.802 li
328.151 175.802 328.271 175.682 328.391 175.682 cv
328.991 175.442 li
329.351 175.202 li
330.071 174.962 li
329.711 175.082 li
330.191 174.722 li
330.311 174.722 330.431 174.602 330.551 174.602 cv
331.151 174.362 li
331.511 174.122 li
331.991 173.882 li
332.711 173.642 li
332.351 173.762 li
332.831 173.402 li
333.551 173.042 li
334.151 172.682 li
334.871 172.442 li
334.511 172.562 li
334.991 172.202 li
335.111 172.202 335.231 172.082 335.351 172.082 cv
335.951 171.842 li
335.591 171.962 li
336.071 171.602 li
336.191 171.602 336.191 171.482 336.311 171.482 cv
336.791 171.242 li
337.511 171.002 li
337.871 170.762 li
338.591 170.522 li
338.231 170.642 li
338.711 170.282 li
338.831 170.282 338.951 170.162 339.071 170.162 cv
339.671 169.922 li
339.311 170.042 li
339.791 169.682 li
339.911 169.682 340.031 169.562 340.151 169.562 cv
340.751 169.322 li
341.111 169.082 li
341.591 168.842 li
342.311 168.602 li
341.951 168.722 li
342.431 168.362 li
342.551 168.362 342.671 168.242 342.791 168.242 cv
343.391 168.002 li
343.031 168.122 li
343.511 167.762 li
343.631 167.762 343.751 167.642 343.871 167.642 cv
344.471 167.402 li
344.831 167.162 li
344.591 167.282 li
345.191 166.802 li
345.311 166.802 345.311 166.682 345.431 166.682 cv
346.391 166.202 li
347.111 165.962 li
347.471 165.722 li
347.951 165.482 li
348.311 165.122 li
348.431 165.122 348.551 165.002 348.671 165.002 cv
349.271 164.762 li
349.631 164.522 li
350.111 164.282 li
350.471 163.922 li
350.591 163.922 350.591 163.802 350.711 163.802 cv
351.191 163.562 li
351.911 163.322 li
352.271 163.082 li
352.991 162.842 li
353.351 162.602 li
353.951 162.242 354.791 162.602 355.151 163.202 cv
355.511 163.802 355.151 164.642 354.551 165.002 cv
353.951 165.242 li
353.471 165.482 li
352.871 165.722 li
351.911 166.202 li
352.151 166.082 li
351.551 166.442 li
350.831 166.922 li
349.631 167.402 li
349.991 167.282 li
349.391 167.642 li
348.671 168.122 li
348.071 168.362 li
346.631 169.082 li
346.871 168.962 li
346.271 169.442 li
346.151 169.442 346.151 169.442 346.031 169.562 cv
344.831 170.042 li
345.191 169.922 li
344.711 170.282 li
344.591 170.282 344.471 170.402 344.351 170.402 cv
343.751 170.642 li
344.111 170.522 li
343.631 170.882 li
343.511 170.882 343.391 171.002 343.271 171.002 cv
342.311 171.482 li
341.111 171.962 li
341.471 171.842 li
340.991 172.202 li
340.871 172.202 340.751 172.322 340.631 172.322 cv
340.031 172.562 li
340.391 172.442 li
339.911 172.802 li
339.791 172.802 339.671 172.922 339.551 172.922 cv
339.071 173.162 li
338.471 173.402 li
337.511 173.882 li
337.751 173.762 li
337.271 174.122 li
337.151 174.122 337.031 174.242 336.911 174.242 cv
336.311 174.482 li
336.671 174.362 li
336.191 174.722 li
336.071 174.722 335.951 174.842 335.831 174.842 cv
335.351 175.082 li
334.991 175.202 li
334.031 175.922 li
333.911 175.922 333.791 176.042 333.671 176.042 cv
332.711 176.522 li
331.511 177.002 li
331.871 176.882 li
331.391 177.242 li
331.271 177.242 331.151 177.362 331.031 177.362 cv
330.551 177.602 li
329.351 178.082 li
329.711 177.962 li
329.111 178.322 li
328.535 178.81 326.994 179.416 326.231 179.762 cv
325.631 180.002 li
325.991 179.882 li
325.511 180.242 li
325.271 180.362 325.151 180.362 324.911 180.482 cv
324.311 180.602 li
324.911 180.362 li
324.431 180.722 li
324.191 180.842 324.071 180.842 323.831 180.962 cv
323.231 181.082 li
323.831 180.842 li
323.351 181.202 li
323.231 181.202 323.111 181.322 322.991 181.322 cv
322.031 181.802 li
322.271 181.682 li
321.671 182.042 li
320.711 182.762 li
320.591 182.762 320.471 182.882 320.351 182.882 cv
319.751 183.122 li
320.111 183.002 li
319.631 183.362 li
319.511 183.362 319.391 183.482 319.271 183.482 cv
318.791 183.722 li
318.191 183.962 li
317.231 184.442 li
317.111 184.442 316.991 184.442 316.991 184.562 cv
316.631 184.562 li
316.151 184.802 li
315.551 185.042 li
315.071 185.282 li
314.471 185.522 li
313.991 185.762 li
313.391 186.002 li
312.431 186.482 li
312.071 186.602 li
311.351 187.082 li
310.991 187.202 li
310.391 187.562 li
310.631 187.442 li
310.151 187.922 li
310.031 188.042 309.791 188.162 309.671 188.162 cv
309.071 188.402 li
309.431 188.282 li
308.951 188.642 li
308.831 188.642 308.711 188.762 308.591 188.762 cv
308.111 189.002 li
307.751 189.122 li
306.791 189.842 li
306.671 189.842 306.551 189.962 306.551 189.962 cv
305.951 190.202 li
303.132 191.37 300.659 192.76 297.911 193.922 cv
297.311 194.162 li
297.671 194.042 li
297.191 194.402 li
297.071 194.402 296.951 194.522 296.951 194.522 cv
296.351 194.762 li
295.871 195.002 li
295.271 195.242 li
294.791 195.482 li
293.591 195.962 li
293.951 195.842 li
293.471 196.202 li
293.351 196.202 293.231 196.322 293.111 196.322 cv
292.151 196.802 li
290.951 197.282 li
291.311 197.162 li
290.831 197.522 li
290.711 197.522 290.591 197.642 290.471 197.642 cv
289.991 197.882 li
288.791 198.362 li
289.151 198.242 li
288.671 198.602 li
288.551 198.602 288.431 198.722 288.311 198.722 cv
287.351 199.202 li
287.231 199.202 287.111 199.202 287.111 199.322 cv
286.751 199.322 li
285.095 199.943 283.587 200.588 281.951 201.362 cv
281.471 201.602 li
281.711 201.482 li
281.231 201.842 li
281.111 201.842 280.991 201.962 280.871 201.962 cv
280.391 202.202 li
278.931 202.798 277.519 203.5 276.071 204.122 cv
275.471 204.362 li
275.831 204.242 li
275.231 204.602 li
274.511 205.082 li
274.151 205.202 li
273.431 205.682 li
272.231 206.162 li
272.591 206.042 li
271.631 206.762 li
271.511 206.762 271.391 206.882 271.271 206.882 cv
270.671 207.122 li
271.031 207.002 li
270.551 207.362 li
270.431 207.362 270.311 207.482 270.191 207.482 cv
269.591 207.722 li
269.951 207.602 li
269.471 207.962 li
268.871 208.322 268.031 208.202 267.551 207.722 cv
267.191 207.122 267.311 206.282 267.791 205.802 cv
cp
353.951 162.242 mo
354.431 162.002 li
355.151 161.762 li
354.791 161.882 li
355.271 161.522 li
357.619 160.304 360.163 159.203 362.591 158.042 cv
362.951 157.802 li
363.071 157.802 363.191 157.682 363.311 157.682 cv
363.911 157.562 li
363.551 157.682 li
364.031 157.442 li
364.751 157.202 li
365.111 156.962 li
365.231 156.962 365.351 156.842 365.471 156.842 cv
366.071 156.722 li
365.711 156.842 li
366.191 156.602 li
369.074 155.341 371.801 153.92 374.711 152.642 cv
375.191 152.402 li
375.911 151.922 376.631 152.162 376.991 152.762 cv
377.471 153.482 377.231 154.202 376.631 154.562 cv
375.911 155.042 li
372.967 156.26 370.255 157.652 367.391 159.002 cv
366.911 159.242 li
366.791 159.242 366.671 159.362 366.551 159.362 cv
365.951 159.482 li
366.311 159.362 li
365.711 159.602 li
364.751 160.082 li
364.631 160.082 364.511 160.202 364.391 160.202 cv
363.791 160.322 li
364.151 160.202 li
363.551 160.442 li
361.384 161.661 358.935 162.504 356.951 163.682 cv
356.471 164.042 li
356.351 164.042 356.231 164.162 356.111 164.162 cv
355.151 164.642 li
354.431 165.002 353.711 164.642 353.351 164.042 cv
352.991 163.322 353.351 162.602 353.951 162.242 cv
f
gsave
54.5512 14.522 mo
482.471 14.522 li
482.471 324.482 li
54.5512 324.482 li
cp
eclp
gsave
-41.8088 -258.758 mo
553.391 -258.758 li
553.391 583.282 li
-41.8088 583.282 li
cp
clp
375.311 152.282 mo
375.791 152.042 li
377.481 151.018 379.363 150.486 381.071 149.522 cv
381.671 149.162 li
381.431 149.282 li
381.911 148.922 li
382.031 148.922 382.151 148.802 382.271 148.802 cv
382.871 148.562 li
382.511 148.682 li
382.991 148.322 li
383.711 147.962 li
384.311 147.602 li
384.791 147.362 li
385.151 147.002 li
385.271 147.002 385.391 146.882 385.511 146.882 cv
386.111 146.642 li
386.471 146.402 li
387.431 145.922 li
387.551 145.802 387.671 145.802 387.791 145.682 cv
388.271 145.562 li
387.911 145.802 li
388.511 145.442 li
388.631 145.322 388.751 145.322 388.871 145.202 cv
389.351 145.082 li
390.185 144.827 390.979 144.428 391.751 144.002 cv
392.471 143.762 li
391.991 144.002 li
392.471 143.522 li
392.591 143.402 392.711 143.282 392.951 143.282 cv
393.551 143.042 li
396.164 141.82 398.346 140.862 400.871 139.322 cv
401.591 139.082 li
401.231 139.202 li
401.711 138.842 li
401.831 138.842 401.831 138.722 401.951 138.722 cv
402.431 138.482 li
403.151 138.242 li
404.618 137.542 406.444 136.688 407.951 136.082 cv
408.311 135.842 li
409.031 135.602 li
409.391 135.362 li
410.111 135.122 li
410.711 134.882 li
411.191 134.762 li
411.551 134.522 li
412.511 134.042 li
413.111 133.682 li
413.831 133.442 li
414.191 133.202 li
414.911 132.962 li
415.271 132.722 li
415.391 132.722 415.511 132.602 415.631 132.602 cv
416.231 132.482 li
415.511 132.842 li
415.991 132.362 li
416.111 132.362 416.111 132.242 416.111 132.242 cv
416.591 131.882 li
416.711 131.882 416.831 131.762 416.951 131.762 cv
417.551 131.522 li
417.191 131.642 li
417.671 131.282 li
417.791 131.282 417.911 131.162 418.031 131.162 cv
418.631 130.922 li
418.271 131.042 li
418.751 130.682 li
418.871 130.682 418.991 130.562 419.111 130.562 cv
419.711 130.322 li
422.697 128.939 425.624 127.569 428.591 126.122 cv
429.311 125.882 li
428.951 126.002 li
429.431 125.642 li
429.551 125.642 429.671 125.522 429.791 125.522 cv
430.391 125.282 li
431.462 124.542 432.383 124.247 433.391 123.722 cv
434.111 123.482 li
433.751 123.602 li
434.231 123.242 li
434.351 123.242 434.471 123.122 434.591 123.122 cv
435.191 122.882 li
434.831 123.002 li
435.311 122.642 li
435.431 122.642 435.551 122.522 435.671 122.522 cv
436.271 122.282 li
440.286 120.282 444.383 118.254 448.511 116.522 cv
448.871 116.282 li
448.991 116.282 449.111 116.162 449.231 116.162 cv
449.831 116.042 li
449.471 116.162 li
449.951 115.922 li
451.518 115.5 452.875 114.65 454.391 114.122 cv
454.751 113.882 li
454.871 113.882 454.991 113.762 455.111 113.762 cv
455.711 113.642 li
455.351 113.762 li
455.831 113.522 li
459.287 112.068 462.69 110.377 466.151 108.962 cv
466.511 108.722 li
466.631 108.722 466.751 108.602 466.751 108.602 cv
467.231 108.482 li
468.55 108.114 470.667 106.44 472.031 106.082 cv
472.391 105.842 li
472.151 105.962 li
472.631 105.602 li
472.751 105.602 472.871 105.482 472.991 105.482 cv
473.591 105.242 li
473.951 105.002 li
474.431 104.762 li
475.031 104.402 li
475.751 104.162 li
475.391 104.282 li
475.871 103.922 li
475.991 103.922 476.111 103.802 476.231 103.802 cv
476.831 103.562 li
478.363 102.745 479.965 102.037 481.631 101.522 cv
481.991 101.282 li
482.591 100.922 483.431 101.282 483.791 101.882 cv
484.151 102.482 483.791 103.322 483.191 103.682 cv
482.591 103.922 li
480.854 104.551 479.492 105.199 477.791 105.962 cv
477.191 106.202 li
477.551 106.082 li
477.071 106.442 li
476.951 106.442 476.831 106.562 476.711 106.562 cv
476.231 106.802 li
475.871 106.922 li
475.151 107.402 li
473.951 107.882 li
474.311 107.762 li
473.831 108.122 li
473.711 108.122 473.591 108.242 473.591 108.242 cv
472.991 108.482 li
471.248 109.256 469.716 110.373 467.951 111.122 cv
467.471 111.242 li
467.711 111.122 li
467.111 111.362 li
463.757 112.896 460.377 114.37 457.031 115.922 cv
456.551 116.162 li
456.431 116.162 456.311 116.282 456.191 116.282 cv
455.591 116.402 li
455.951 116.282 li
455.351 116.522 li
453.854 117.202 452.694 117.814 451.151 118.322 cv
450.671 118.562 li
450.551 118.562 450.431 118.682 450.311 118.682 cv
449.711 118.802 li
450.071 118.682 li
449.471 118.922 li
445.281 120.773 441.349 122.747 437.231 124.682 cv
436.631 124.922 li
436.991 124.802 li
436.511 125.162 li
436.391 125.162 436.271 125.282 436.151 125.282 cv
435.551 125.522 li
435.911 125.402 li
435.431 125.762 li
435.311 125.762 435.191 125.882 435.071 125.882 cv
434.591 126.122 li
433.444 126.519 432.448 127.202 431.351 127.682 cv
430.751 127.922 li
431.111 127.802 li
430.631 128.162 li
430.511 128.162 430.391 128.282 430.271 128.282 cv
429.791 128.522 li
426.705 129.861 423.825 131.443 420.671 132.722 cv
420.071 132.962 li
420.431 132.842 li
419.951 133.202 li
419.831 133.202 419.711 133.322 419.591 133.322 cv
418.991 133.562 li
419.351 133.442 li
418.871 133.802 li
418.751 133.802 418.631 133.922 418.511 133.922 cv
417.911 134.162 li
418.271 134.042 li
417.791 134.402 li
417.911 134.282 li
417.431 134.762 li
417.191 134.882 416.951 135.002 416.711 135.122 cv
416.111 135.242 li
416.471 135.122 li
415.871 135.362 li
411.821 137.38 407.764 138.933 403.631 140.882 cv
403.151 141.122 li
403.391 141.002 li
402.911 141.362 li
402.791 141.362 402.671 141.482 402.551 141.482 cv
402.071 141.722 li
401.711 141.842 li
400.792 142.48 399.75 142.884 398.831 143.522 cv
398.231 143.762 li
397.751 144.002 li
396.889 144.442 395.973 144.762 395.111 145.202 cv
393.911 145.682 li
394.391 145.442 li
393.911 145.922 li
393.791 146.042 393.551 146.162 393.431 146.162 cv
392.951 146.402 li
392.009 146.882 391.004 147.223 390.071 147.722 cv
389.591 147.842 li
389.951 147.602 li
389.351 147.962 li
389.231 148.082 389.111 148.082 388.991 148.202 cv
388.511 148.322 li
388.871 148.082 li
388.151 148.562 li
387.671 148.802 li
386.471 149.282 li
386.831 149.162 li
386.231 149.522 li
385.511 150.002 li
385.151 150.122 li
384.191 150.842 li
384.071 150.842 383.951 150.962 383.831 150.962 cv
383.231 151.202 li
383.591 151.082 li
383.111 151.442 li
382.991 151.442 382.871 151.562 382.871 151.562 cv
382.511 151.682 li
381.017 152.727 378.523 153.372 376.991 154.442 cv
376.511 154.682 li
375.791 155.042 375.071 154.682 374.711 154.082 cv
374.351 153.362 374.711 152.642 375.311 152.282 cv
f
481.991 101.282 mo
482.471 101.042 li
482.591 101.042 482.711 100.922 482.831 100.922 cv
483.431 100.802 li
482.831 101.042 li
483.311 100.682 li
483.551 100.562 483.671 100.562 483.911 100.442 cv
484.511 100.322 li
484.151 100.442 li
484.631 100.202 li
490.15 98.001 495.352 95.064 500.831 92.762 cv
501.191 92.522 li
501.311 92.522 501.431 92.402 501.551 92.402 cv
502.151 92.282 li
501.791 92.402 li
502.751 91.922 li
503.471 91.682 li
503.111 91.802 li
503.591 91.442 li
503.831 91.322 503.951 91.322 504.191 91.202 cv
504.791 91.082 li
504.191 91.322 li
504.671 90.962 li
504.911 90.842 505.031 90.842 505.271 90.722 cv
505.871 90.602 li
505.511 90.722 li
505.991 90.482 li
506.711 90.242 li
507.071 90.002 li
507.191 90.002 507.311 89.882 507.311 89.882 cv
507.791 89.762 li
508.818 89.458 510.021 89.05 511.031 88.682 cv
511.751 88.562 li
511.391 88.682 li
511.871 88.442 li
511.991 88.442 512.111 88.322 512.111 88.322 cv
513.071 88.082 li
513.671 87.842 li
513.311 88.082 li
514.511 87.362 li
515.231 87.122 li
515.591 86.882 li
515.711 86.882 515.831 86.762 515.951 86.762 cv
516.551 86.642 li
516.191 86.762 li
516.671 86.522 li
517.807 86.147 518.165 85.733 519.551 85.322 cv
520.031 85.202 li
519.671 85.322 li
520.151 84.962 li
520.391 84.842 520.511 84.842 520.751 84.722 cv
521.351 84.602 li
520.751 84.842 li
521.231 84.482 li
521.471 84.362 521.591 84.362 521.831 84.242 cv
522.431 84.122 li
522.071 84.242 li
522.551 84.002 li
523.66 83.532 524.732 82.979 525.911 82.682 cv
526.271 82.442 li
526.391 82.442 526.511 82.322 526.631 82.322 cv
527.231 82.202 li
526.871 82.322 li
527.351 82.082 li
527.471 82.082 527.591 81.962 527.591 81.962 cv
528.071 81.842 li
528.791 81.722 li
528.431 81.842 li
528.911 81.602 li
530.07 81.155 530.824 80.973 532.031 80.762 cv
532.391 80.642 li
532.151 80.762 li
532.631 80.522 li
532.871 80.402 532.991 80.402 533.231 80.402 cv
533.831 80.402 li
533.231 80.522 li
533.711 80.282 li
534.431 80.042 li
535.031 79.802 li
535.151 79.802 535.271 79.802 535.391 79.802 cv
535.991 79.802 li
535.631 79.802 li
536.111 79.682 li
536.831 79.562 li
537.191 79.442 li
537.671 79.322 li
538.271 79.082 li
538.391 79.082 538.511 79.082 538.631 79.082 cv
539.111 79.082 li
538.871 79.082 li
539.471 78.962 li
539.831 78.842 li
540.311 78.722 li
540.431 78.602 540.671 78.602 540.791 78.602 cv
541.271 78.602 li
541.031 78.602 li
541.631 78.482 li
541.271 78.602 li
541.751 78.362 li
541.991 78.242 542.111 78.242 542.351 78.242 cv
542.951 78.242 li
542.351 78.362 li
543.311 77.882 li
543.431 77.882 543.551 77.762 543.671 77.762 cv
544.271 77.642 li
545.866 77.326 546.84 76.888 548.351 76.442 cv
549.071 76.322 li
548.711 76.442 li
549.191 76.202 li
549.311 76.202 549.431 76.082 549.551 76.082 cv
550.151 75.962 li
550.511 75.842 li
551.231 75.722 li
550.871 75.842 li
551.351 75.602 li
551.471 75.602 551.591 75.482 551.711 75.482 cv
552.311 75.362 li
551.951 75.482 li
552.431 75.242 li
552.551 75.242 552.671 75.122 552.671 75.122 cv
553.151 75.002 li
553.871 74.882 li
553.511 75.002 li
553.991 74.762 li
554.711 74.522 li
555.071 74.282 li
555.191 74.282 555.311 74.162 555.431 74.162 cv
556.031 74.042 li
555.671 74.162 li
556.151 73.922 li
556.271 73.922 556.391 73.802 556.511 73.802 cv
557.111 73.682 li
558.537 73.367 559.226 72.813 560.591 72.482 cv
560.951 72.242 li
561.071 72.242 561.191 72.122 561.311 72.122 cv
561.911 72.002 li
561.311 72.242 li
561.791 71.882 li
562.031 71.762 562.151 71.762 562.391 71.642 cv
562.991 71.522 li
562.631 71.642 li
563.591 71.162 li
564.311 70.922 li
564.911 70.682 li
565.631 70.562 li
565.271 70.682 li
565.751 70.442 li
565.871 70.442 565.991 70.322 566.111 70.322 cv
566.711 70.202 li
566.351 70.322 li
566.831 70.082 li
566.951 70.082 567.071 69.962 567.191 69.962 cv
567.791 69.842 li
567.431 69.962 li
567.911 69.722 li
568.031 69.722 568.151 69.602 568.151 69.602 cv
568.631 69.482 li
569.351 69.362 li
568.991 69.482 li
569.471 69.242 li
569.591 69.242 569.711 69.122 569.831 69.122 cv
570.431 69.002 li
570.071 69.122 li
570.551 68.882 li
571.271 68.642 li
571.871 68.402 li
572.351 68.282 li
572.951 68.042 li
572.711 68.162 li
573.191 67.922 li
573.311 67.922 573.431 67.802 573.551 67.802 cv
574.151 67.682 li
573.791 67.802 li
574.271 67.562 li
576.008 66.983 577.511 66.363 579.311 66.002 cv
580.031 65.882 li
579.671 66.002 li
580.151 65.762 li
580.871 65.522 li
581.471 65.282 li
582.191 65.162 li
582.551 65.042 li
583.271 64.922 583.991 65.282 584.231 66.002 cv
584.351 66.722 583.991 67.442 583.271 67.682 cv
582.671 67.802 li
582.191 67.922 li
581.831 67.922 li
580.871 68.402 li
580.751 68.402 580.631 68.522 580.511 68.522 cv
580.031 68.642 li
578.325 68.941 577.051 69.381 575.471 69.962 cv
574.991 70.202 li
574.871 70.202 574.751 70.322 574.631 70.322 cv
574.031 70.442 li
574.391 70.322 li
573.911 70.562 li
573.791 70.562 573.671 70.562 573.671 70.682 cv
573.311 70.682 li
572.591 71.042 li
572.231 71.042 li
571.271 71.522 li
571.151 71.522 571.031 71.642 570.911 71.642 cv
570.311 71.762 li
570.671 71.642 li
570.191 71.882 li
570.071 71.882 569.951 72.002 569.831 72.002 cv
568.871 72.242 li
569.111 72.122 li
568.631 72.362 li
568.511 72.362 568.391 72.482 568.271 72.482 cv
567.671 72.602 li
568.031 72.482 li
567.551 72.722 li
567.431 72.722 567.311 72.842 567.191 72.842 cv
566.591 72.962 li
566.951 72.842 li
566.471 73.082 li
566.351 73.082 566.231 73.202 566.111 73.202 cv
565.631 73.322 li
565.271 73.322 li
563.831 74.042 li
563.711 74.042 563.591 74.162 563.471 74.162 cv
562.871 74.282 li
563.471 74.042 li
562.991 74.402 li
562.751 74.522 562.631 74.522 562.391 74.642 cv
561.791 74.762 li
562.151 74.642 li
561.551 74.882 li
560.273 75.289 558.724 76.192 557.591 76.322 cv
556.991 76.442 li
557.351 76.322 li
556.871 76.562 li
556.751 76.562 556.631 76.682 556.511 76.682 cv
555.911 76.802 li
556.271 76.682 li
555.671 76.922 li
554.711 77.402 li
554.591 77.402 554.471 77.522 554.351 77.522 cv
553.391 77.762 li
553.631 77.642 li
553.151 77.882 li
553.031 77.882 552.911 78.002 552.791 78.002 cv
552.191 78.122 li
552.551 78.002 li
552.071 78.242 li
551.951 78.242 551.831 78.362 551.711 78.362 cv
551.231 78.482 li
550.031 78.722 li
550.391 78.602 li
549.911 78.842 li
549.791 78.842 549.671 78.962 549.551 78.962 cv
549.071 79.082 li
547.575 79.301 546.298 80.108 544.751 80.282 cv
544.151 80.402 li
544.511 80.282 li
543.551 80.762 li
543.311 80.882 543.191 80.882 542.951 80.882 cv
542.351 80.882 li
542.951 80.762 li
542.471 81.002 li
542.351 81.002 542.231 81.122 542.111 81.122 cv
541.511 81.242 li
541.391 81.242 541.391 81.242 541.271 81.242 cv
540.791 81.242 li
541.271 81.122 li
540.551 81.482 li
539.351 81.722 li
539.231 81.722 539.231 81.722 539.111 81.722 cv
538.631 81.722 li
538.991 81.722 li
538.631 81.722 li
537.911 82.082 li
537.311 82.202 li
536.351 82.442 li
536.231 82.442 536.111 82.442 535.991 82.442 cv
535.391 82.442 li
535.751 82.442 li
535.391 82.442 li
534.431 82.922 li
534.191 83.042 534.071 83.042 533.831 83.042 cv
533.231 83.042 li
533.831 82.922 li
533.351 83.162 li
533.231 83.162 533.111 83.162 533.111 83.282 cv
532.511 83.402 li
532.031 83.522 li
531.431 83.642 li
530.951 83.762 li
530.591 83.762 li
529.631 84.242 li
529.511 84.242 529.391 84.362 529.271 84.362 cv
528.311 84.602 li
528.551 84.482 li
528.071 84.722 li
527.951 84.722 527.831 84.842 527.711 84.842 cv
527.111 84.962 li
527.471 84.842 li
526.871 85.082 li
525.766 85.576 524.941 85.715 523.751 86.402 cv
523.271 86.642 li
523.151 86.642 523.031 86.762 522.911 86.762 cv
522.311 86.882 li
522.911 86.642 li
522.431 87.002 li
522.191 87.122 522.071 87.122 521.831 87.242 cv
521.231 87.362 li
521.831 87.122 li
521.351 87.482 li
521.231 87.482 521.111 87.602 520.991 87.602 cv
520.271 87.962 li
519.911 87.962 li
518.951 88.442 li
518.351 88.682 li
517.391 89.162 li
517.271 89.162 517.151 89.282 517.031 89.282 cv
516.431 89.402 li
516.791 89.282 li
516.191 89.522 li
515.711 89.762 li
515.351 89.882 li
514.751 90.242 li
514.631 90.362 514.511 90.362 514.391 90.482 cv
514.031 90.482 li
513.311 90.842 li
512.831 90.962 li
513.071 90.842 li
512.591 91.082 li
512.471 91.082 512.351 91.202 512.231 91.202 cv
511.751 91.322 li
510.931 91.457 509.322 92.063 508.511 92.402 cv
508.031 92.522 li
508.271 92.402 li
507.671 92.642 li
506.711 93.122 li
506.591 93.122 506.471 93.242 506.351 93.242 cv
505.751 93.362 li
506.351 93.122 li
505.871 93.482 li
505.631 93.602 505.511 93.602 505.271 93.722 cv
504.671 93.842 li
505.271 93.602 li
504.791 93.962 li
504.671 93.962 504.551 94.082 504.431 94.082 cv
502.991 94.802 li
502.871 94.802 502.751 94.922 502.631 94.922 cv
502.031 95.042 li
502.391 94.922 li
501.791 95.162 li
496.384 97.606 491.347 100.247 485.831 102.602 cv
485.351 102.842 li
485.231 102.842 485.111 102.962 484.991 102.962 cv
484.391 103.082 li
484.991 102.842 li
484.511 103.202 li
484.271 103.322 484.151 103.322 483.911 103.442 cv
483.311 103.562 li
483.671 103.442 li
483.191 103.682 li
482.471 104.042 481.751 103.682 481.391 103.082 cv
481.031 102.362 481.391 101.642 481.991 101.282 cv
f
grestore
grestore
gsave
54.5512 14.522 mo
481.511 14.522 li
481.511 323.522 li
54.5512 323.522 li
cp
eclp
56.3512 95.042 mo
56.3512 99.842 li
56.4712 100.442 55.8712 101.042 55.2712 101.042 cv
54.5512 101.042 54.0712 100.562 53.9512 99.842 cv
53.9512 95.042 li
53.9512 94.442 54.4312 93.842 55.1512 93.842 cv
55.7512 93.842 56.3512 94.322 56.3512 95.042 cv
cp
56.4712 104.642 mo
56.4712 109.442 li
56.5912 110.042 55.9912 110.642 55.3912 110.642 cv
54.6712 110.642 54.1912 110.162 54.0712 109.442 cv
54.0712 104.642 li
54.0712 104.042 54.5512 103.442 55.2712 103.442 cv
55.8712 103.442 56.4712 103.922 56.4712 104.642 cv
cp
56.5912 114.242 mo
56.5912 119.042 li
56.7112 119.642 56.1112 120.242 55.5112 120.242 cv
54.7912 120.242 54.3112 119.762 54.1912 119.042 cv
54.1912 114.242 li
54.1912 113.642 54.6712 113.042 55.3912 113.042 cv
55.9912 113.042 56.5912 113.522 56.5912 114.242 cv
cp
56.7112 123.842 mo
56.7112 128.642 li
56.8312 129.242 56.2312 129.842 55.6312 129.842 cv
54.9112 129.842 54.4312 129.362 54.3112 128.642 cv
54.3112 123.842 li
54.3112 123.242 54.7912 122.642 55.5112 122.642 cv
56.1112 122.642 56.7112 123.122 56.7112 123.842 cv
cp
56.8312 133.442 mo
56.8312 138.242 li
56.9512 138.842 56.3512 139.442 55.7512 139.442 cv
55.0312 139.442 54.5512 138.962 54.4312 138.242 cv
54.4312 133.442 li
54.4312 132.842 54.9112 132.242 55.6312 132.242 cv
56.2312 132.242 56.8312 132.722 56.8312 133.442 cv
cp
56.9512 143.042 mo
56.9512 147.842 li
57.0712 148.442 56.4712 149.042 55.8712 149.042 cv
55.1512 149.042 54.6712 148.562 54.5512 147.842 cv
54.5512 143.042 li
54.5512 142.442 55.0312 141.842 55.7512 141.842 cv
56.3512 141.842 56.9512 142.322 56.9512 143.042 cv
cp
57.0712 152.642 mo
57.0712 157.442 li
57.1912 158.042 56.5912 158.642 55.9912 158.642 cv
55.2712 158.642 54.7912 158.162 54.6712 157.442 cv
54.6712 152.642 li
54.6712 152.042 55.1512 151.442 55.8712 151.442 cv
56.4712 151.442 57.0712 151.922 57.0712 152.642 cv
cp
57.1912 162.242 mo
57.1912 167.042 li
57.3112 167.642 56.7112 168.242 56.1112 168.242 cv
55.3912 168.242 54.9112 167.762 54.7912 167.042 cv
54.7912 162.242 li
54.7912 161.642 55.2712 161.042 55.9912 161.042 cv
56.5912 161.042 57.1912 161.522 57.1912 162.242 cv
cp
57.3112 171.842 mo
57.3112 176.642 li
57.4312 177.242 56.8312 177.842 56.2312 177.842 cv
55.5112 177.842 55.0312 177.362 54.9112 176.642 cv
54.9112 171.842 li
54.9112 171.242 55.3912 170.642 56.1112 170.642 cv
56.7112 170.642 57.3112 171.122 57.3112 171.842 cv
cp
57.4312 181.322 mo
57.6712 186.122 li
57.6712 186.842 57.1912 187.442 56.4712 187.442 cv
55.8712 187.442 55.2712 186.962 55.2712 186.242 cv
55.0312 181.442 li
55.0312 180.842 55.5112 180.242 56.2312 180.242 cv
56.8312 180.242 57.4312 180.722 57.4312 181.322 cv
cp
57.7912 190.922 mo
58.0312 195.722 li
58.0312 196.442 57.5512 197.042 56.9512 197.042 cv
56.2312 197.042 55.6312 196.562 55.6312 195.842 cv
55.3912 191.042 li
55.3912 190.442 55.9912 189.842 56.5912 189.842 cv
57.3112 189.842 57.7912 190.322 57.7912 190.922 cv
cp
58.2712 200.522 mo
58.5112 205.322 li
58.5112 206.042 58.0312 206.522 57.3112 206.642 cv
56.7112 206.642 56.1112 206.162 56.1112 205.442 cv
55.8712 200.642 li
55.8712 200.042 56.3512 199.442 56.9512 199.442 cv
57.6712 199.442 58.2712 199.922 58.2712 200.522 cv
cp
58.7512 210.122 mo
58.9912 214.922 li
59.1112 215.522 58.6312 216.122 57.9112 216.242 cv
57.3112 216.242 56.7112 215.762 56.7112 215.042 cv
56.3512 210.242 li
56.2312 209.642 56.7112 209.042 57.4312 209.042 cv
58.0312 208.922 58.6312 209.402 58.7512 210.122 cv
cp
59.3512 219.722 mo
59.7112 224.042 li
59.7112 224.402 li
59.8312 225.122 59.3512 225.722 58.7512 225.722 cv
58.0312 225.842 57.4312 225.362 57.3112 224.762 cv
57.3112 224.282 li
56.9512 219.842 li
56.9512 219.242 57.4312 218.642 58.1512 218.522 cv
58.7512 218.522 59.3512 219.002 59.3512 219.722 cv
cp
60.3112 229.202 mo
60.9112 234.002 li
61.0312 234.602 60.5512 235.202 59.8312 235.322 cv
59.2312 235.322 58.6312 234.842 58.5112 234.242 cv
57.9112 229.442 li
57.9112 228.842 58.2712 228.242 58.9912 228.122 cv
59.5912 228.002 60.1912 228.482 60.3112 229.202 cv
cp
61.6312 238.682 mo
61.9912 241.082 li
62.3512 243.362 li
62.5912 243.962 62.1112 244.682 61.5112 244.802 cv
60.7912 244.922 60.1912 244.442 60.0712 243.842 cv
59.5912 241.442 li
59.2312 239.042 li
59.1112 238.322 59.5912 237.722 60.1912 237.602 cv
60.9112 237.602 61.5112 237.962 61.6312 238.682 cv
cp
63.4312 247.922 mo
64.2712 251.042 li
64.6312 252.602 li
64.8712 253.202 64.5112 253.802 63.9112 254.042 cv
63.1912 254.282 62.5912 253.922 62.3512 253.202 cv
61.8712 251.762 li
61.0312 248.522 li
60.9112 247.922 61.2712 247.322 61.9912 247.082 cv
62.5912 246.962 63.1912 247.322 63.4312 247.922 cv
cp
66.1912 257.042 mo
66.4312 257.642 li
67.5112 260.402 li
67.9912 261.362 li
68.2312 261.962 67.9912 262.682 67.3912 262.922 cv
66.7912 263.282 66.0712 262.922 65.8312 262.322 cv
65.3512 261.362 li
64.2712 258.602 li
63.9112 257.882 li
63.6712 257.282 64.0312 256.562 64.6312 256.322 cv
65.2312 256.082 65.9512 256.322 66.1912 257.042 cv
cp
70.1512 265.442 mo
70.8712 266.522 li
71.9512 268.082 li
72.9112 269.282 li
73.2712 269.882 73.1512 270.602 72.6712 270.962 cv
72.0712 271.442 71.3512 271.322 70.9912 270.722 cv
70.0312 269.522 li
68.7112 267.722 li
68.1112 266.762 li
67.7512 266.162 67.9912 265.442 68.5912 265.082 cv
69.0712 264.722 69.9112 264.842 70.1512 265.442 cv
cp
75.9112 272.882 mo
77.3512 274.322 li
78.4312 275.162 li
79.3912 276.002 li
79.8712 276.482 79.8712 277.202 79.5112 277.682 cv
79.0312 278.162 78.3112 278.282 77.8312 277.802 cv
76.9912 277.082 li
75.6712 276.002 li
74.1112 274.442 li
73.7512 273.962 73.7512 273.242 74.2312 272.762 cv
74.7112 272.282 75.4312 272.402 75.9112 272.882 cv
cp
82.9912 278.762 mo
83.9512 279.242 li
85.1512 280.082 li
86.1112 280.562 li
87.1912 281.162 li
87.6712 281.402 87.9112 282.122 87.6712 282.722 cv
87.3112 283.322 86.5912 283.562 85.9912 283.202 cv
85.0312 282.722 li
83.7112 282.002 li
81.7912 280.802 li
81.1912 280.442 81.0712 279.722 81.4312 279.122 cv
81.6712 278.522 82.5112 278.402 82.9912 278.762 cv
cp
91.3912 283.202 mo
91.7512 283.442 li
93.9112 284.402 li
94.9912 284.642 li
95.8312 285.002 li
96.4312 285.362 96.6712 285.962 96.4312 286.562 cv
96.0712 287.282 95.3512 287.522 94.7512 287.282 cv
94.2712 287.042 li
92.9512 286.562 li
91.8712 286.082 li
90.6712 285.602 li
90.3112 285.362 li
89.7112 285.122 89.4712 284.402 89.8312 283.802 cv
90.0712 283.202 90.7912 282.962 91.3912 283.202 cv
cp
100.151 286.562 mo
100.631 286.682 li
101.711 287.042 li
102.911 287.402 li
103.991 287.762 li
104.711 288.122 li
105.431 288.242 105.671 288.962 105.551 289.562 cv
105.311 290.162 104.591 290.522 103.991 290.402 cv
103.271 290.042 li
102.191 289.802 li
100.991 289.322 li
99.9112 289.082 li
99.4312 288.842 li
98.8312 288.722 98.4712 288.002 98.7112 287.402 cv
98.8312 286.802 99.5512 286.442 100.151 286.562 cv
cp
109.391 289.322 mo
109.631 289.322 li
110.591 289.562 li
111.311 289.682 111.671 290.402 111.551 291.002 cv
111.431 291.722 110.711 292.082 110.111 291.962 cv
108.911 291.602 li
108.671 291.602 li
107.951 291.362 107.711 290.642 107.831 290.042 cv
108.071 289.442 108.791 289.082 109.391 289.322 cv
0 0 0 1 cmyk
f
grestore
110.591 289.562 mo
111.791 289.802 li
112.991 290.162 li
115.151 290.642 li
115.271 290.642 li
115.871 290.882 116.351 291.482 116.231 292.082 cv
115.991 292.802 115.391 293.162 114.791 293.042 cv
114.671 293.042 li
113.591 292.802 li
112.271 292.442 li
111.311 292.202 li
110.111 291.962 li
109.511 291.842 109.031 291.122 109.151 290.522 cv
109.271 289.922 109.991 289.442 110.591 289.562 cv
cp
119.951 291.722 mo
120.791 291.842 li
121.751 291.962 li
123.071 292.202 li
124.151 292.442 li
124.631 292.562 li
125.351 292.682 125.711 293.282 125.591 294.002 cv
125.471 294.602 124.871 295.082 124.151 294.962 cv
123.671 294.842 li
121.511 294.362 li
120.311 294.242 li
119.471 294.002 li
118.751 293.882 118.391 293.282 118.511 292.562 cv
118.631 291.962 119.351 291.482 119.951 291.722 cv
cp
129.431 293.282 mo
129.791 293.402 li
130.871 293.522 li
132.071 293.762 li
133.031 293.882 li
134.111 294.122 li
134.711 294.242 135.191 294.842 135.071 295.562 cv
134.951 296.162 134.351 296.522 133.631 296.402 cv
132.791 296.282 li
131.591 296.162 li
130.631 295.922 li
129.311 295.802 li
128.951 295.682 li
128.231 295.562 127.871 294.842 127.991 294.242 cv
128.111 293.642 128.711 293.162 129.431 293.282 cv
cp
138.791 294.722 mo
139.871 294.842 li
141.071 295.082 li
143.231 295.322 li
143.471 295.322 li
144.191 295.442 144.671 296.042 144.551 296.642 cv
144.551 297.362 143.951 297.842 143.231 297.722 cv
142.991 297.722 li
141.911 297.602 li
140.591 297.482 li
139.631 297.242 li
138.551 297.122 li
137.831 297.002 137.351 296.522 137.471 295.802 cv
137.471 295.202 138.071 294.722 138.791 294.722 cv
cp
148.271 295.922 mo
148.871 296.042 li
149.951 296.162 li
151.151 296.282 li
152.231 296.402 li
153.071 296.522 li
153.671 296.522 154.151 297.122 154.151 297.842 cv
154.031 298.442 153.431 298.922 152.831 298.922 cv
151.991 298.802 li
150.911 298.682 li
149.711 298.562 li
148.631 298.442 li
148.031 298.322 li
147.311 298.322 146.831 297.722 146.951 297.002 cv
147.071 296.402 147.671 295.922 148.271 295.922 cv
cp
157.871 297.002 mo
159.071 297.122 li
161.231 297.362 li
162.431 297.482 li
162.551 297.482 li
163.271 297.602 163.751 298.202 163.631 298.802 cv
163.631 299.522 163.031 300.002 162.311 299.882 cv
162.191 299.882 li
160.991 299.762 li
158.831 299.522 li
157.631 299.402 li
157.511 299.402 li
156.911 299.282 156.431 298.682 156.551 298.082 cv
156.551 297.362 157.151 296.882 157.871 297.002 cv
0 0 0 1 cmyk
f
165.791 297.722 mo
166.871 297.842 li
168.071 297.962 li
169.151 298.082 li
170.351 298.202 li
170.591 298.202 li
171.191 298.322 171.671 298.922 171.671 299.522 cv
171.551 300.242 170.951 300.722 170.351 300.602 cv
170.111 300.602 li
168.911 300.482 li
167.831 300.362 li
166.631 300.242 li
165.551 300.122 li
164.831 300.002 164.351 299.402 164.471 298.802 cv
164.591 298.082 165.191 297.602 165.791 297.722 cv
cp
175.391 298.682 mo
175.871 298.682 li
177.071 298.802 li
178.031 298.802 li
179.351 298.922 li
180.191 299.042 li
180.791 299.042 181.271 299.642 181.151 300.362 cv
181.151 300.962 180.551 301.442 179.831 301.442 cv
179.111 301.322 li
178.031 301.202 li
176.831 301.202 li
175.631 301.082 li
175.031 300.962 li
174.431 300.962 173.951 300.362 174.071 299.642 cv
174.071 299.042 174.671 298.562 175.391 298.682 cv
cp
184.871 299.402 mo
185.951 299.402 li
188.351 299.642 li
189.671 299.642 li
190.391 299.762 190.871 300.362 190.751 300.962 cv
190.751 301.682 190.151 302.162 189.431 302.042 cv
188.111 302.042 li
186.911 301.922 li
185.951 301.802 li
184.631 301.802 li
184.031 301.682 183.551 301.082 183.551 300.482 cv
183.671 299.762 184.271 299.282 184.871 299.402 cv
cp
194.471 300.002 mo
195.071 300.122 li
196.151 300.122 li
197.351 300.242 li
198.311 300.242 li
199.271 300.362 li
199.871 300.362 200.351 300.962 200.351 301.682 cv
200.231 302.282 199.631 302.762 199.031 302.762 cv
198.311 302.642 li
197.111 302.642 li
196.151 302.522 li
194.831 302.522 li
194.231 302.402 li
193.511 302.402 193.031 301.802 193.151 301.082 cv
193.271 300.482 193.871 300.002 194.471 300.002 cv
cp
203.951 300.602 mo
205.271 300.722 li
206.351 300.842 li
207.431 300.842 li
208.631 300.962 li
208.751 300.962 li
209.351 300.962 209.951 301.442 209.951 302.162 cv
209.951 302.762 209.351 303.362 208.751 303.362 cv
208.391 303.362 li
207.431 303.242 li
206.111 303.242 li
203.951 303.002 li
203.231 303.002 202.751 302.402 202.751 301.802 cv
202.751 301.082 203.231 300.602 203.951 300.602 cv
cp
213.431 301.202 mo
214.151 301.202 li
215.351 301.322 li
216.431 301.322 li
217.631 301.442 li
218.231 301.442 li
218.951 301.442 219.431 301.922 219.431 302.642 cv
219.431 303.242 218.951 303.842 218.231 303.842 cv
217.391 303.842 li
216.431 303.722 li
215.111 303.722 li
214.151 303.602 li
213.431 303.602 li
212.831 303.602 212.231 303.002 212.231 302.402 cv
212.231 301.682 212.831 301.202 213.431 301.202 cv
f
220.991 301.562 mo
222.191 301.682 li
223.151 301.682 li
224.471 301.802 li
225.791 301.802 li
226.391 301.922 226.871 302.522 226.871 303.122 cv
226.751 303.842 226.151 304.322 225.551 304.202 cv
224.231 304.202 li
223.151 304.082 li
221.951 304.082 li
220.751 303.962 li
220.031 303.842 219.551 303.242 219.671 302.642 cv
219.791 301.922 220.271 301.442 220.991 301.562 cv
cp
230.591 302.042 mo
231.191 302.162 li
233.351 302.162 li
234.551 302.282 li
235.271 302.282 li
235.871 302.282 236.471 302.762 236.471 303.482 cv
236.471 304.082 235.871 304.682 235.271 304.682 cv
234.311 304.682 li
233.351 304.562 li
230.951 304.562 li
230.351 304.442 li
229.631 304.442 229.151 303.842 229.271 303.122 cv
229.271 302.522 229.871 302.042 230.591 302.042 cv
cp
240.071 302.522 mo
241.271 302.522 li
242.471 302.642 li
243.431 302.642 li
244.751 302.762 li
245.471 302.762 245.951 303.242 245.951 303.962 cv
245.951 304.562 245.471 305.162 244.751 305.162 cv
244.511 305.162 li
243.431 305.042 li
242.231 305.042 li
241.271 304.922 li
240.071 304.922 li
239.351 304.922 238.871 304.322 238.871 303.722 cv
238.871 303.002 239.351 302.522 240.071 302.522 cv
cp
249.671 302.882 mo
250.391 303.002 li
252.551 303.002 li
253.751 303.122 li
254.351 303.122 li
255.071 303.122 255.551 303.602 255.551 304.322 cv
255.551 304.922 255.071 305.522 254.351 305.522 cv
253.511 305.522 li
252.551 305.402 li
250.151 305.402 li
249.431 305.282 li
248.831 305.282 248.351 304.682 248.351 303.962 cv
248.471 303.362 249.071 302.882 249.671 302.882 cv
cp
259.271 303.362 mo
261.551 303.362 li
262.751 303.482 li
264.071 303.482 li
264.791 303.602 265.271 304.202 265.151 304.802 cv
265.031 305.522 264.551 306.002 263.831 305.882 cv
262.511 305.882 li
261.551 305.762 li
259.031 305.762 li
258.431 305.642 257.951 305.042 257.951 304.442 cv
258.071 303.722 258.671 303.242 259.271 303.362 cv
cp
268.751 303.722 mo
270.551 303.722 li
271.751 303.842 li
273.551 303.842 li
274.151 303.842 274.751 304.322 274.751 305.042 cv
274.751 305.642 274.151 306.242 273.551 306.242 cv
271.511 306.242 li
270.551 306.122 li
268.751 306.122 li
268.031 306.122 267.551 305.522 267.551 304.922 cv
267.551 304.202 268.031 303.722 268.751 303.722 cv
f
276.191 303.962 mo
277.271 303.962 li
278.591 304.082 li
281.111 304.082 li
281.711 304.202 282.191 304.802 282.191 305.402 cv
282.071 306.122 281.471 306.602 280.871 306.482 cv
278.351 306.482 li
277.271 306.362 li
276.191 306.362 li
275.471 306.362 274.991 305.762 274.991 305.162 cv
274.991 304.442 275.471 303.962 276.191 303.962 cv
cp
285.911 304.322 mo
288.551 304.322 li
289.871 304.442 li
290.591 304.442 li
291.191 304.442 291.791 304.922 291.791 305.642 cv
291.791 306.242 291.191 306.842 290.591 306.842 cv
289.631 306.842 li
288.551 306.722 li
286.151 306.722 li
285.671 306.602 li
284.951 306.602 284.471 306.002 284.591 305.282 cv
284.711 304.682 285.191 304.202 285.911 304.322 cv
cp
295.391 304.562 mo
296.471 304.562 li
297.671 304.682 li
300.311 304.682 li
300.911 304.802 301.391 305.402 301.391 306.002 cv
301.271 306.722 300.671 307.202 300.071 307.082 cv
297.431 307.082 li
296.471 306.962 li
295.391 306.962 li
294.671 306.962 294.191 306.362 294.191 305.762 cv
294.191 305.042 294.671 304.562 295.391 304.562 cv
cp
305.111 304.922 mo
308.831 304.922 li
309.911 305.042 li
310.511 305.042 310.991 305.642 310.871 306.362 cv
310.871 306.962 310.271 307.442 309.671 307.442 cv
308.831 307.322 li
305.351 307.322 li
304.751 307.202 li
304.151 307.202 303.671 306.602 303.791 305.882 cv
303.791 305.282 304.391 304.802 305.111 304.922 cv
cp
314.471 305.162 mo
316.751 305.162 li
318.071 305.282 li
319.271 305.282 li
319.991 305.282 320.471 305.762 320.471 306.482 cv
320.471 307.082 319.991 307.682 319.271 307.682 cv
317.831 307.682 li
316.751 307.562 li
314.471 307.562 li
313.871 307.562 313.271 306.962 313.271 306.362 cv
313.271 305.642 313.871 305.162 314.471 305.162 cv
cp
324.071 305.402 mo
325.751 305.402 li
327.071 305.522 li
328.871 305.522 li
329.591 305.522 330.071 306.002 330.071 306.722 cv
330.071 307.322 329.591 307.922 328.871 307.922 cv
326.831 307.922 li
325.751 307.802 li
324.071 307.802 li
323.471 307.802 322.871 307.202 322.871 306.602 cv
322.871 305.882 323.471 305.402 324.071 305.402 cv
f
331.391 305.642 mo
336.311 305.642 li
337.031 305.762 337.511 306.362 337.391 306.962 cv
337.271 307.682 336.671 308.162 336.071 308.042 cv
331.391 308.042 li
330.671 308.042 330.191 307.442 330.191 306.842 cv
330.191 306.122 330.671 305.642 331.391 305.642 cv
cp
341.111 305.762 mo
341.711 305.882 li
344.951 305.882 li
345.911 306.002 li
346.511 306.002 346.991 306.602 346.991 307.322 cv
346.871 307.922 346.271 308.402 345.671 308.402 cv
344.951 308.282 li
341.471 308.282 li
340.871 308.162 li
340.151 308.162 339.671 307.562 339.791 306.842 cv
339.911 306.242 340.511 305.762 341.111 305.762 cv
cp
350.591 306.002 mo
351.911 306.122 li
355.391 306.122 li
355.991 306.122 356.591 306.602 356.591 307.322 cv
356.591 307.922 355.991 308.522 355.391 308.522 cv
351.671 308.522 li
350.591 308.402 li
349.871 308.402 349.391 307.802 349.391 307.202 cv
349.391 306.482 349.871 306.002 350.591 306.002 cv
cp
360.191 306.242 mo
360.791 306.242 li
361.991 306.362 li
364.991 306.362 li
365.591 306.362 366.191 306.842 366.191 307.562 cv
366.191 308.162 365.591 308.762 364.991 308.762 cv
361.751 308.762 li
360.791 308.642 li
360.191 308.642 li
359.471 308.642 358.991 308.042 358.991 307.442 cv
358.991 306.722 359.471 306.242 360.191 306.242 cv
cp
369.791 306.482 mo
372.071 306.482 li
373.271 306.602 li
374.591 306.602 li
375.191 306.602 375.791 307.082 375.791 307.802 cv
375.791 308.402 375.191 309.002 374.591 309.002 cv
373.031 309.002 li
372.071 308.882 li
369.791 308.882 li
369.071 308.882 368.591 308.282 368.591 307.682 cv
368.591 306.962 369.071 306.482 369.791 306.482 cv
cp
379.511 306.722 mo
384.071 306.722 li
384.791 306.722 385.271 307.202 385.271 307.922 cv
385.271 308.522 384.791 309.122 384.071 309.122 cv
379.751 309.122 li
379.151 309.002 li
378.551 309.002 378.071 308.402 378.191 307.682 cv
378.191 307.082 378.791 306.602 379.511 306.722 cv
f
386.711 306.842 mo
390.071 306.842 li
391.271 306.962 li
391.511 306.962 li
392.111 306.962 392.711 307.442 392.711 308.162 cv
392.711 308.762 392.111 309.362 391.511 309.362 cv
391.031 309.362 li
390.071 309.242 li
386.711 309.242 li
385.991 309.242 385.511 308.642 385.511 308.042 cv
385.511 307.322 385.991 306.842 386.711 306.842 cv
cp
396.311 306.962 mo
396.791 306.962 li
398.111 307.082 li
401.111 307.082 li
401.711 307.082 402.311 307.562 402.311 308.282 cv
402.311 308.882 401.711 309.482 401.111 309.482 cv
397.871 309.482 li
396.791 309.362 li
396.311 309.362 li
395.591 309.362 395.111 308.762 395.111 308.162 cv
395.111 307.442 395.591 306.962 396.311 306.962 cv
cp
405.911 307.202 mo
410.831 307.202 li
411.431 307.322 411.911 307.922 411.911 308.522 cv
411.791 309.242 411.191 309.722 410.591 309.602 cv
405.911 309.602 li
405.191 309.602 404.711 309.002 404.711 308.402 cv
404.711 307.682 405.191 307.202 405.911 307.202 cv
cp
415.511 307.322 mo
417.191 307.322 li
418.391 307.442 li
420.311 307.442 li
420.911 307.442 421.511 307.922 421.511 308.642 cv
421.511 309.242 420.911 309.842 420.311 309.842 cv
418.151 309.842 li
417.191 309.722 li
415.511 309.722 li
414.791 309.722 414.311 309.122 414.311 308.522 cv
414.311 307.802 414.791 307.322 415.511 307.322 cv
cp
425.111 307.562 mo
429.911 307.562 li
430.511 307.562 431.111 308.042 431.111 308.762 cv
431.111 309.362 430.511 309.962 429.911 309.962 cv
425.111 309.962 li
424.391 309.962 423.911 309.362 423.911 308.762 cv
423.911 308.042 424.391 307.562 425.111 307.562 cv
cp
434.711 307.682 mo
438.551 307.682 li
439.631 307.802 li
440.231 307.802 440.711 308.402 440.711 309.122 cv
440.591 309.722 439.991 310.202 439.391 310.202 cv
438.551 310.082 li
434.711 310.082 li
433.991 310.082 433.511 309.482 433.511 308.882 cv
433.511 308.162 433.991 307.682 434.711 307.682 cv
f
gsave
54.5512 14.522 mo
481.511 14.522 li
481.511 323.522 li
54.5512 323.522 li
cp
eclp
gsave
-41.8088 -258.758 mo
553.391 -258.758 li
553.391 583.282 li
-41.8088 583.282 li
cp
clp
441.911 307.802 mo
446.831 307.802 li
447.551 307.922 448.031 308.522 447.911 309.122 cv
447.791 309.842 447.191 310.322 446.591 310.202 cv
441.911 310.202 li
441.191 310.202 440.711 309.602 440.711 309.002 cv
440.711 308.282 441.191 307.802 441.911 307.802 cv
cp
451.511 307.922 mo
454.391 307.922 li
455.591 308.042 li
456.311 308.042 li
456.911 308.042 457.511 308.522 457.511 309.242 cv
457.511 309.842 456.911 310.442 456.311 310.442 cv
455.351 310.442 li
454.391 310.322 li
451.511 310.322 li
450.791 310.322 450.311 309.722 450.311 309.122 cv
450.311 308.402 450.791 307.922 451.511 307.922 cv
cp
461.111 308.042 mo
462.311 308.042 li
463.511 308.162 li
465.911 308.162 li
466.511 308.162 467.111 308.642 467.111 309.362 cv
467.111 309.962 466.511 310.562 465.911 310.562 cv
463.271 310.562 li
462.311 310.442 li
461.111 310.442 li
460.391 310.442 459.911 309.842 459.911 309.242 cv
459.911 308.522 460.391 308.042 461.111 308.042 cv
cp
470.831 308.162 mo
471.431 308.282 li
475.511 308.282 li
476.111 308.282 476.711 308.762 476.711 309.482 cv
476.711 310.082 476.111 310.682 475.511 310.682 cv
471.191 310.682 li
470.591 310.562 li
469.871 310.562 469.391 309.962 469.511 309.242 cv
469.511 308.642 470.111 308.162 470.831 308.162 cv
cp
480.431 308.402 mo
485.111 308.402 li
485.711 308.402 486.311 308.882 486.311 309.602 cv
486.311 310.202 485.711 310.802 485.111 310.802 cv
480.191 310.802 li
479.471 310.682 478.991 310.082 479.111 309.482 cv
479.111 308.762 479.711 308.282 480.431 308.402 cv
cp
489.911 308.522 mo
494.711 308.522 li
495.311 308.522 495.911 309.002 495.911 309.722 cv
495.911 310.322 495.311 310.922 494.711 310.922 cv
489.911 310.922 li
489.191 310.922 488.711 310.322 488.711 309.722 cv
488.711 309.002 489.191 308.522 489.911 308.522 cv
f
54.6712 314.042 mo
58.8712 311.882 li
59.4712 311.642 60.1912 311.882 60.5512 312.482 cv
60.7912 313.082 60.5512 313.802 59.9512 314.042 cv
55.6312 316.202 li
55.0312 316.442 54.3112 316.202 54.0712 315.602 cv
53.8312 315.002 54.0712 314.282 54.6712 314.042 cv
cp
63.1912 309.842 mo
67.5112 307.682 li
68.1112 307.322 68.8312 307.562 69.1912 308.162 cv
69.4312 308.762 69.1912 309.482 68.5912 309.842 cv
64.2712 311.882 li
63.6712 312.242 62.9512 312.002 62.7112 311.402 cv
62.3512 310.802 62.5912 310.082 63.1912 309.842 cv
cp
71.8312 305.522 mo
76.1512 303.362 li
76.7512 303.122 77.4712 303.362 77.7112 303.962 cv
78.0712 304.562 77.8312 305.282 77.2312 305.522 cv
72.9112 307.682 li
72.3112 307.922 71.5912 307.682 71.2312 307.082 cv
70.9912 306.602 71.2312 305.882 71.8312 305.522 cv
cp
80.4712 301.322 mo
84.7912 299.162 li
85.2712 298.802 85.9912 299.162 86.3512 299.642 cv
86.5912 300.242 86.3512 300.962 85.7512 301.322 cv
81.5512 303.482 li
80.9512 303.722 80.2312 303.482 79.8712 302.882 cv
79.6312 302.282 79.8712 301.562 80.4712 301.322 cv
cp
88.9912 297.002 mo
93.3112 294.842 li
93.9112 294.602 94.6312 294.842 94.9912 295.442 cv
95.2312 296.042 94.9912 296.762 94.3912 297.002 cv
90.0712 299.162 li
89.4712 299.522 88.7512 299.282 88.5112 298.682 cv
88.1512 298.082 88.3912 297.362 88.9912 297.002 cv
cp
97.6312 292.802 mo
101.951 290.642 li
102.551 290.402 103.271 290.642 103.511 291.242 cv
103.871 291.842 103.631 292.562 103.031 292.802 cv
98.7112 294.962 li
98.1112 295.202 97.3912 294.962 97.1512 294.362 cv
96.7912 293.762 97.0312 293.042 97.6312 292.802 cv
cp
106.271 288.482 mo
110.591 286.442 li
111.191 286.082 111.911 286.322 112.151 286.922 cv
112.511 287.522 112.271 288.242 111.671 288.482 cv
107.351 290.642 li
106.751 291.002 106.031 290.762 105.671 290.162 cv
105.431 289.562 105.671 288.842 106.271 288.482 cv
cp
114.911 284.282 mo
119.111 282.122 li
119.711 281.882 120.431 282.122 120.791 282.722 cv
121.031 283.322 120.791 284.042 120.191 284.282 cv
115.871 286.442 li
115.271 286.682 114.551 286.442 114.311 285.842 cv
114.071 285.242 114.311 284.522 114.911 284.282 cv
cp
123.431 279.962 mo
127.751 277.922 li
128.351 277.562 129.071 277.802 129.431 278.402 cv
129.671 279.002 129.431 279.722 128.831 280.082 cv
124.511 282.122 li
123.911 282.482 123.191 282.242 122.951 281.642 cv
122.591 281.042 122.831 280.322 123.431 279.962 cv
cp
132.071 275.762 mo
136.391 273.602 li
136.991 273.362 137.711 273.602 137.951 274.202 cv
138.311 274.802 138.071 275.522 137.471 275.762 cv
133.151 277.922 li
132.551 278.162 131.831 277.922 131.471 277.322 cv
131.231 276.722 131.471 276.002 132.071 275.762 cv
cp
140.711 271.442 mo
145.031 269.402 li
145.631 269.042 146.351 269.282 146.591 269.882 cv
146.831 270.482 146.591 271.202 145.991 271.562 cv
141.791 273.602 li
141.191 273.962 140.471 273.722 140.111 273.122 cv
139.871 272.522 140.111 271.802 140.711 271.442 cv
cp
149.231 267.242 mo
153.551 265.082 li
154.151 264.842 154.871 265.082 155.231 265.682 cv
155.471 266.282 155.231 267.002 154.631 267.242 cv
150.311 269.402 li
149.711 269.642 148.991 269.402 148.751 268.802 cv
148.391 268.202 148.631 267.482 149.231 267.242 cv
cp
157.871 263.042 mo
162.191 260.882 li
162.791 260.522 163.511 260.762 163.751 261.362 cv
164.111 261.962 163.871 262.682 163.271 263.042 cv
158.951 265.202 li
158.351 265.442 157.631 265.202 157.391 264.602 cv
157.031 264.002 157.271 263.282 157.871 263.042 cv
cp
166.511 258.722 mo
170.831 256.562 li
171.431 256.322 172.151 256.562 172.391 257.162 cv
172.751 257.762 172.511 258.482 171.911 258.722 cv
167.591 260.882 li
166.991 261.242 166.271 260.882 165.911 260.402 cv
165.671 259.802 165.911 259.082 166.511 258.722 cv
cp
175.151 254.522 mo
179.351 252.362 li
179.951 252.122 180.671 252.362 181.031 252.842 cv
181.271 253.442 181.031 254.162 180.431 254.522 cv
176.111 256.682 li
175.511 256.922 174.791 256.682 174.551 256.082 cv
174.311 255.482 174.551 254.762 175.151 254.522 cv
cp
183.671 250.202 mo
187.991 248.162 li
188.591 247.802 189.311 248.042 189.671 248.642 cv
189.911 249.242 189.671 249.962 189.071 250.202 cv
184.751 252.362 li
184.151 252.722 183.431 252.482 183.191 251.882 cv
182.831 251.282 183.071 250.562 183.671 250.202 cv
cp
192.311 246.002 mo
196.631 243.842 li
197.231 243.602 197.951 243.842 198.191 244.442 cv
198.551 245.042 198.311 245.762 197.711 246.002 cv
193.391 248.162 li
192.791 248.402 192.071 248.162 191.711 247.562 cv
191.471 246.962 191.711 246.242 192.311 246.002 cv
cp
200.951 241.682 mo
205.271 239.642 li
205.871 239.282 206.591 239.522 206.831 240.122 cv
207.071 240.722 206.831 241.442 206.231 241.802 cv
202.031 243.842 li
201.431 244.202 200.711 243.962 200.351 243.362 cv
200.111 242.762 200.351 242.042 200.951 241.682 cv
cp
209.471 237.482 mo
213.791 235.322 li
214.391 235.082 215.111 235.322 215.471 235.922 cv
215.711 236.522 215.471 237.242 214.871 237.482 cv
210.551 239.642 li
209.951 239.882 209.231 239.642 208.991 239.042 cv
208.631 238.442 208.871 237.722 209.471 237.482 cv
cp
218.111 233.162 mo
222.431 231.122 li
223.031 230.762 223.751 231.002 223.991 231.602 cv
224.351 232.202 224.111 232.922 223.511 233.282 cv
219.191 235.322 li
218.591 235.682 217.871 235.442 217.631 234.842 cv
217.271 234.242 217.511 233.522 218.111 233.162 cv
cp
226.751 228.962 mo
231.071 226.802 li
231.671 226.562 232.391 226.802 232.631 227.402 cv
232.991 228.002 232.751 228.722 232.151 228.962 cv
227.831 231.122 li
227.231 231.362 226.511 231.122 226.151 230.522 cv
225.911 229.922 226.151 229.202 226.751 228.962 cv
cp
235.391 224.762 mo
239.591 222.602 li
240.191 222.242 240.911 222.482 241.271 223.082 cv
241.511 223.682 241.271 224.402 240.671 224.762 cv
236.351 226.802 li
235.751 227.162 235.031 226.922 234.791 226.322 cv
234.551 225.722 234.791 225.002 235.391 224.762 cv
cp
243.911 220.442 mo
248.231 218.282 li
248.831 218.042 249.551 218.282 249.911 218.882 cv
250.151 219.482 249.911 220.202 249.311 220.442 cv
244.991 222.602 li
244.391 222.842 243.671 222.602 243.431 222.002 cv
243.071 221.522 243.311 220.802 243.911 220.442 cv
cp
252.551 216.242 mo
256.871 214.082 li
257.471 213.722 258.191 213.962 258.431 214.562 cv
258.791 215.162 258.551 215.882 257.951 216.242 cv
253.631 218.402 li
253.031 218.642 252.311 218.402 251.951 217.802 cv
251.711 217.202 251.951 216.482 252.551 216.242 cv
cp
261.191 211.922 mo
265.511 209.762 li
266.111 209.522 266.831 209.762 267.071 210.362 cv
267.311 210.962 267.071 211.682 266.471 211.922 cv
262.271 214.082 li
261.671 214.442 260.951 214.202 260.591 213.602 cv
260.351 213.002 260.591 212.282 261.191 211.922 cv
cp
269.711 207.722 mo
274.031 205.562 li
274.631 205.322 275.351 205.562 275.711 206.162 cv
275.951 206.642 275.711 207.362 275.111 207.722 cv
270.791 209.882 li
270.191 210.122 269.471 209.882 269.231 209.282 cv
268.871 208.682 269.111 207.962 269.711 207.722 cv
cp
278.351 203.402 mo
282.671 201.362 li
283.271 201.002 283.991 201.242 284.231 201.842 cv
284.591 202.442 284.351 203.162 283.751 203.402 cv
279.431 205.562 li
278.831 205.922 278.111 205.682 277.871 205.082 cv
277.511 204.482 277.751 203.762 278.351 203.402 cv
cp
286.991 199.202 mo
291.311 197.042 li
291.911 196.802 292.631 197.042 292.871 197.642 cv
293.231 198.242 292.991 198.962 292.391 199.202 cv
288.071 201.362 li
287.471 201.602 286.751 201.362 286.391 200.762 cv
286.151 200.162 286.391 199.442 286.991 199.202 cv
cp
295.631 194.882 mo
299.831 192.842 li
300.431 192.482 301.151 192.722 301.511 193.322 cv
301.751 193.922 301.511 194.642 300.911 195.002 cv
296.591 197.042 li
296.111 197.402 295.391 197.162 295.031 196.562 cv
294.791 195.962 295.031 195.242 295.631 194.882 cv
cp
304.151 190.682 mo
308.471 188.522 li
309.071 188.282 309.791 188.522 310.151 189.122 cv
310.391 189.722 310.151 190.442 309.551 190.682 cv
305.231 192.842 li
304.631 193.082 303.911 192.842 303.671 192.242 cv
303.311 191.642 303.551 190.922 304.151 190.682 cv
cp
312.791 186.362 mo
317.111 184.322 li
317.711 183.962 318.431 184.202 318.671 184.802 cv
319.031 185.402 318.791 186.122 318.191 186.482 cv
313.871 188.522 li
313.271 188.882 312.551 188.642 312.191 188.042 cv
311.951 187.442 312.191 186.722 312.791 186.362 cv
cp
321.431 182.162 mo
325.751 180.002 li
326.351 179.762 327.071 180.002 327.311 180.602 cv
327.551 181.202 327.311 181.922 326.711 182.162 cv
322.511 184.322 li
321.911 184.562 321.191 184.322 320.831 183.722 cv
320.591 183.122 320.831 182.402 321.431 182.162 cv
cp
329.951 177.962 mo
334.271 175.802 li
334.871 175.442 335.591 175.682 335.951 176.282 cv
336.191 176.882 335.951 177.602 335.351 177.962 cv
331.031 180.122 li
330.431 180.362 329.711 180.122 329.471 179.522 cv
329.111 178.922 329.471 178.202 329.951 177.962 cv
cp
338.591 173.642 mo
342.911 171.482 li
343.511 171.242 344.231 171.482 344.471 172.082 cv
344.831 172.682 344.591 173.402 343.991 173.642 cv
339.671 175.802 li
339.071 176.042 338.351 175.802 338.111 175.322 cv
337.751 174.722 337.991 174.002 338.591 173.642 cv
cp
347.231 169.442 mo
351.551 167.282 li
352.151 166.922 352.871 167.282 353.111 167.762 cv
353.471 168.362 353.231 169.082 352.631 169.442 cv
348.311 171.602 li
347.711 171.842 346.991 171.602 346.631 171.002 cv
346.391 170.402 346.631 169.682 347.231 169.442 cv
cp
355.871 165.122 mo
360.071 162.962 li
360.671 162.722 361.391 162.962 361.751 163.562 cv
361.991 164.162 361.751 164.882 361.151 165.122 cv
356.831 167.282 li
356.351 167.642 355.631 167.402 355.271 166.802 cv
355.031 166.202 355.271 165.482 355.871 165.122 cv
cp
364.391 160.922 mo
368.711 158.762 li
369.311 158.522 370.031 158.762 370.391 159.362 cv
370.631 159.962 370.391 160.682 369.791 160.922 cv
365.471 163.082 li
364.871 163.322 364.151 163.082 363.911 162.482 cv
363.551 161.882 363.791 161.162 364.391 160.922 cv
cp
373.031 156.602 mo
377.351 154.562 li
377.951 154.202 378.671 154.442 378.911 155.042 cv
379.271 155.642 379.031 156.362 378.431 156.722 cv
374.111 158.762 li
373.511 159.122 372.791 158.882 372.551 158.282 cv
372.191 157.682 372.431 156.962 373.031 156.602 cv
cp
381.671 152.402 mo
385.991 150.242 li
386.591 150.002 387.311 150.242 387.551 150.842 cv
387.791 151.442 387.551 152.162 386.951 152.402 cv
382.751 154.562 li
382.151 154.802 381.431 154.562 381.071 153.962 cv
380.831 153.362 381.071 152.642 381.671 152.402 cv
cp
390.191 148.082 mo
394.511 146.042 li
395.111 145.682 395.831 145.922 396.191 146.522 cv
396.431 147.122 396.191 147.842 395.591 148.202 cv
391.271 150.242 li
390.671 150.602 389.951 150.362 389.711 149.762 cv
389.351 149.162 389.711 148.442 390.191 148.082 cv
cp
398.831 143.882 mo
403.151 141.722 li
403.751 141.482 404.471 141.722 404.711 142.322 cv
405.071 142.922 404.831 143.642 404.231 143.882 cv
399.911 146.042 li
399.311 146.282 398.591 146.042 398.351 145.442 cv
397.991 144.842 398.231 144.122 398.831 143.882 cv
cp
407.471 139.682 mo
411.791 137.522 li
412.391 137.162 413.111 137.402 413.351 138.002 cv
413.711 138.602 413.471 139.322 412.871 139.682 cv
408.551 141.722 li
407.951 142.082 407.231 141.842 406.871 141.242 cv
406.631 140.642 406.871 139.922 407.471 139.682 cv
cp
416.111 135.362 mo
420.311 133.202 li
420.911 132.962 421.631 133.202 421.991 133.802 cv
422.231 134.402 421.991 135.122 421.391 135.362 cv
417.071 137.522 li
416.591 137.762 415.871 137.522 415.511 136.922 cv
415.271 136.442 415.511 135.722 416.111 135.362 cv
cp
424.631 131.162 mo
428.951 129.002 li
429.551 128.642 430.271 128.882 430.631 129.482 cv
430.871 130.082 430.631 130.802 430.031 131.162 cv
425.711 133.322 li
425.111 133.562 424.391 133.322 424.151 132.722 cv
423.791 132.122 424.031 131.402 424.631 131.162 cv
cp
433.271 126.842 mo
437.591 124.682 li
438.191 124.442 438.911 124.682 439.151 125.282 cv
439.511 125.882 439.271 126.602 438.671 126.842 cv
434.351 129.002 li
433.751 129.362 433.031 129.122 432.791 128.522 cv
432.431 127.922 432.671 127.202 433.271 126.842 cv
cp
441.911 122.642 mo
446.231 120.482 li
446.831 120.242 447.551 120.482 447.791 121.082 cv
448.031 121.562 447.791 122.282 447.191 122.642 cv
442.991 124.802 li
442.391 125.042 441.671 124.802 441.311 124.202 cv
441.071 123.602 441.311 122.882 441.911 122.642 cv
cp
450.431 118.322 mo
454.751 116.282 li
455.351 115.922 456.071 116.162 456.431 116.762 cv
456.671 117.362 456.431 118.082 455.831 118.322 cv
451.511 120.482 li
450.911 120.842 450.191 120.602 449.951 120.002 cv
449.711 119.402 449.951 118.682 450.431 118.322 cv
cp
459.071 114.122 mo
463.391 111.962 li
463.991 111.722 464.711 111.962 464.951 112.562 cv
465.311 113.162 465.071 113.882 464.471 114.122 cv
460.151 116.282 li
459.551 116.522 458.831 116.282 458.591 115.682 cv
458.231 115.082 458.471 114.362 459.071 114.122 cv
cp
467.711 109.802 mo
472.031 107.762 li
472.631 107.402 473.351 107.642 473.591 108.242 cv
473.951 108.842 473.711 109.562 473.111 109.922 cv
468.791 111.962 li
468.191 112.322 467.471 112.082 467.111 111.482 cv
466.871 110.882 467.111 110.162 467.711 109.802 cv
cp
476.351 105.602 mo
480.671 103.442 li
481.151 103.202 481.871 103.442 482.231 104.042 cv
482.471 104.642 482.231 105.362 481.631 105.602 cv
477.431 107.762 li
476.831 108.002 476.111 107.762 475.751 107.162 cv
475.511 106.562 475.751 105.842 476.351 105.602 cv
cp
484.871 101.282 mo
489.191 99.242 li
489.791 98.882 490.511 99.122 490.871 99.722 cv
491.111 100.322 490.871 101.042 490.271 101.402 cv
485.951 103.442 li
485.351 103.802 484.631 103.562 484.391 102.962 cv
484.031 102.362 484.271 101.642 484.871 101.282 cv
cp
493.511 97.082 mo
497.831 94.922 li
498.431 94.682 499.151 94.922 499.391 95.522 cv
499.751 96.122 499.511 96.842 498.911 97.082 cv
494.591 99.242 li
493.991 99.482 493.271 99.242 493.031 98.642 cv
492.671 98.042 492.911 97.322 493.511 97.082 cv
cp
502.151 92.882 mo
506.471 90.722 li
507.071 90.362 507.791 90.602 508.031 91.202 cv
508.271 91.802 508.031 92.522 507.551 92.882 cv
503.231 94.922 li
502.631 95.282 501.911 95.042 501.551 94.442 cv
501.311 93.842 501.551 93.122 502.151 92.882 cv
cp
510.791 88.562 mo
514.991 86.402 li
515.591 86.162 516.311 86.402 516.671 87.002 cv
516.911 87.602 516.671 88.322 516.071 88.562 cv
511.751 90.722 li
511.151 90.962 510.431 90.722 510.191 90.242 cv
509.951 89.642 510.191 88.922 510.791 88.562 cv
cp
519.311 84.362 mo
523.631 82.202 li
524.231 81.842 524.951 82.202 525.191 82.682 cv
525.551 83.282 525.311 84.002 524.711 84.362 cv
520.391 86.522 li
519.791 86.762 519.071 86.522 518.831 85.922 cv
518.471 85.322 518.711 84.602 519.311 84.362 cv
cp
527.951 80.042 mo
532.271 77.882 li
532.871 77.642 533.591 77.882 533.831 78.482 cv
534.191 79.082 533.951 79.802 533.351 80.042 cv
529.031 82.202 li
528.431 82.562 527.711 82.322 527.351 81.722 cv
527.111 81.122 527.351 80.402 527.951 80.042 cv
cp
536.591 75.842 mo
540.911 73.682 li
541.391 73.442 542.111 73.682 542.471 74.282 cv
542.711 74.882 542.471 75.602 541.871 75.842 cv
537.671 78.002 li
537.071 78.242 536.351 78.002 535.991 77.402 cv
535.751 76.802 535.991 76.082 536.591 75.842 cv
cp
545.111 71.522 mo
549.431 69.482 li
550.031 69.122 550.751 69.362 551.111 69.962 cv
551.351 70.562 551.111 71.282 550.511 71.642 cv
546.191 73.682 li
545.591 74.042 544.871 73.802 544.631 73.202 cv
544.271 72.602 544.511 71.882 545.111 71.522 cv
cp
553.751 67.322 mo
558.071 65.162 li
558.671 64.922 559.391 65.162 559.631 65.762 cv
559.991 66.362 559.751 67.082 559.151 67.322 cv
554.831 69.482 li
554.231 69.722 553.511 69.482 553.271 68.882 cv
552.911 68.282 553.151 67.562 553.751 67.322 cv
cp
562.391 63.002 mo
566.711 60.962 li
567.311 60.602 568.031 60.842 568.271 61.442 cv
568.631 62.042 568.271 62.762 567.791 63.122 cv
563.471 65.162 li
562.871 65.522 562.151 65.282 561.791 64.682 cv
561.551 64.082 561.791 63.362 562.391 63.002 cv
cp
571.031 58.802 mo
575.231 56.642 li
575.831 56.402 576.551 56.642 576.911 57.242 cv
577.151 57.842 576.911 58.562 576.311 58.802 cv
571.991 60.962 li
571.391 61.202 570.671 60.962 570.431 60.362 cv
570.191 59.762 570.431 59.042 571.031 58.802 cv
cp
579.551 54.602 mo
582.431 53.162 li
582.911 52.922 583.631 53.162 583.991 53.762 cv
584.231 54.242 583.991 54.962 583.391 55.322 cv
580.631 56.642 li
580.031 57.002 579.311 56.762 579.071 56.162 cv
578.711 55.562 578.951 54.842 579.551 54.602 cv
f
grestore
grestore
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DMSAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /DMSAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9ddb6d7000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c796663143f6d0000b0a000000aa868656164f0778bc800000f640000
0036686865610dad126500000f9c00000024686d7478525eb9e300000fc0
00003c966c6f6361007d085200004c5800003ca06d617870214826250000
88f8000000206e616d65c07279bc0000891800000377707265706baf02fe
00008c9000002410676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e00002ff4000acff00000001000000004d53202000400000
feff0600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d0000000100000005bae11355535a5f0f3cf500190800
00000000bbeb7ccc00000000cf7409dbfbfafd8b09ec07b6000000090002
000100000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000000f24040e0000000000000000000001cf000004a1
002304a1002304a1002304a1002304a1002304a1002304a1002304a10023
04a1002304a1002304a10023061bffcc061bffcc045a00ac044400610444
00610444006104440061044400610444006104ec00ac04ec009704ff001b
04ff001b03e800ac03e8004503e800ac03e8004603e8004603e8006303e8
005f03e8008103e800ac03e800ac03ad00ac050c005b050c005b050c005b
050c005b050c005b04fc00ac04fc00ac05400020020400ac0204ff4a0204
00280204ff390204ff310204ff500204ff4f0204ff7b0204001e02040027
049200ac028d0007028dffa9042800ac042800ac035d00ac035d00810362
00ac035d00ac0370001c045e00ac06d700ac052a00ac052a00ac052a00ac
052a00ac052a00ac050700ac054c0063054c0063054c0063054c0063054c
0063054c0063054c0063054c0063054c0063054f0063054f006306ef0063
042200ac042200ac05620063045800ac045800ac04580053045800ac03ad
004703ad004703ad001503ad001803ad004703ad004703e6000f03e6000f
03e6000f03e6000f052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa052200aa052200aa052200aa048a0022071e003d
071e003d071e003d071e003d071e003d0427003003e6001e03e6001e03e6
001e03e6001e03e6001e03bf003b03bf003b03bf001a03bf003b03f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f40010055cffe2055cffe2040400a103cb006d03cb006d
03cb006d03cb006d03cb006d03cb006d046500a10465006a047700320477
0032038000a103800030038000a103800020038000200380002c03800029
03800042038000a1038000a1035000a10482006c0482006c0482006c0482
006c0482006c047800a10478008c049d004001ec00a101ecff5801ec0019
01ecff4801ecff2701ecff5501ecff5201ecff7101ec001101ec0018041b
00a1023e0000023eff8c03c900a103c900a102e000a102e0008702e600a1
02e000a102f0003203d500a1060600a1049100a1049100a1049100990491
0078049100a1046600a104aa006604aa006604aa006604aa006604aa0066
04aa006604aa006604aa006604aa006604ba006604ba00660606006603c5
00a103c500a104b1006603ed00a103ed00a103ed004503ed00a1034f0049
034f0049034ffff5034ffff6034f0049034f00490359001c0359fffe0359
001c0359001c048d009f048d009c048d009f048d0097048d0075048d009f
048d009f048d009f048d009f048d009f048d009f03fd0021063e0037063e
0037063e0037063e0037063e003703cc0036038300100383001003830010
03830010038300100369004403690044036900080369004403d5005c03d5
005c03d5005c03d5005c03d5001e03d5005c03d5005c03d5005c03d5005c
03d5005c03d5005c062f005c062f005c043400990362005a0362005a0362
004e036200570362005a0362005a076f005a06dd005a0601005a0601005a
04340060048c0060046a00600434006103fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d02710025
069a002508d5002504ab0025069b002508d50025043c0025043c0025043c
0025043c0025044f0025044f0025044f0025044f0025043c0025043c0025
067600250676002506760025067600250689002506890025068900250689
00250676002506760025043c0025043c0025067600250609002508430025
043c0025043c002504830025043c00250676002504ed002504ed00250513
00250728002503c4003503c4003503c4003503c4003503c4003504340060
04340060043400600434006004340060043400990434ffad0443fff901d6
008501d6ff6e01d6000f01d6ff5a01d6ff2001d6ff7201d6ff5801d6ff67
01d6001101d6009903c00085041e008801eaffd501eaffd501eaff6303a3
009903a3009903a3009901d6009901d6002a021c009901d6004b01fb001c
02fd0099066400990434009904340099043400990434004e0434009904a2
ff9d043400990438005a0438005a0438005a0438005a0438004f0438005a
0438005a0438005a0438005a043c005a043c005a06cc005a043400990434
00990434006002ca009902ca009902cafff902ca006e0321005103210051
0321fffe0321fffd032100510321005105ae005105ae00510438009901f1
009902ae002102c4002102ae002102bc002604e600210475002104750021
047500210475002104750021047500210475002104750021047500210475
002105130021074b002106d9002106d9002106d9002106d9002106d90021
06d9002106d9002106d9002106d9002106d90021043400940434008e0434
0094043400860434004d0434008904340086043400940434009404340094
04340094039d002205b8003505b8003505b8003505b8003505b800350377
0029039f0022039f0022039f0022039f0022039f00220329005903290059
032900070329005903380072036100640378005d02ac004402e5006c024e
004402e5004802b8004701c100240297002a02e9006c01630061016dffd8
0297006c015e006c0456006c02e6006c02e6004502e5006c02e5004801f6
006c0230004201e3002302e9006c0285001f03ef002c027e00280286001f
023700420254000002750000029400000000fd080000fce8025600000275
0000029400000000fd080000fce803290000035f0000039400000000fc9f
0000fc6703290000035f0000039400000000fc9d0000fc6901ff0000039a
000003a2000003a800000000fc650000fc600324000002f5000003460000
036700000000fca00000fc7e0327000003490000036a00000000fc9d0000
fc7d030c0000030f0000031100000000fcac0000fca90291000002980000
02a000000000fce90000fce202cf000002c2000002b5000003c1000003e1
0000040000000000fc520000fc3101ce000001d6000001ce000001ce0000
0000fd4d0000fd4d027500840000fd7a027f00840000fd7601f700840231
000004a1002304a1ff89045a00ac035300ac0484003a03e800ac03e8fec7
03bf003b04fc00ac04fcfe9e054c0063020400ac0204feb20204ff520428
00ac0495002406d700ac052a00ac03ef0053054c0063054cff1604fc00ac
042200ac03ab004603e6000f03e6001e03e6fe6e03e6001e061300000427
0030060000900550005e0550fef903f4001003f40010040400a102fb00a1
03c90023038000a1038000a103690044047800a1047800a104b4006601ec
00a101ec000001ecff5403c900a103e10011060600a1049100a10387005e
04aa006604aa0066047800a103c500a1035b004b0359001c038300100383
0010038300100552000003cc00360558008704b1006604b10066048a0061
048a00610440009904320064039200180430000003a5005903a5005902c8
004e044c0099044c00990441006004780006023200940232ffec0232ff7a
0232ff0f03a3009903b4000004660099039700220302004d0303004d0438
005a0438005a046c002804120076044100590349005c0319000304550090
045500900455007d0455001605360055053b00550369001205a900940592
006405920064028900000000fd0a03f400000000fc360205009702050097
020500970224004801ff006e01ff006e04a10023044d00ad045a00ac0370
00ac037000ac037600ac0527000303e800ac03e8004503e8006106680055
03ca004b052200ac052200ac052200ac020400ac0204ff50028d00070458
00ac045800ac04e3000306fa000306d700ac04fc00ac070300ac054c0063
054c006304f900ac042200ac0444006103ad004703e6000f0438000f0438
000f04b800220594000004270030051c00ac04f500ac0472007406f200ac
071e00ac04eb000f061800ac044000ac0462005d04610062070800ac0471
005304ff000f04f2000f0504000003f4001003ee00a2040400a1031400a1
031400a1032700a10480000e038000a1038000300380002c057800440380
0057048900a1048900960489009501ec00a101ecff55023e000003ca00a1
03ca00a104320001060600a1047800a104aa006604a90066046a00a103c5
00a103cb006d034f00490359001c039d001e039d001b042f0022050a0000
03cc0036048e00a1046900a103fa006d062300a1064500a1045f00170583
00a103e800a103e4006b03f00066063200a103ff005c045f001f0463001f
044d000006010001063200a103d5005c044300000430000003d5009902c4
009902c4009902d5009901d6ff58047700170434006003fb005d03fb005d
03fb005d0583003e0362004b04530099045300780453008801d6008501d6
ff7201eaffd503b6009903b6009904150016060200130569005f04470099
062800990438005a0431005a042a009904340086043400990362005a0321
00510319000a06640099039f0022039f001803d2002204fe005103770029
045500990433009903c0004205d4009905fe0099044a000a0554009903c2
0099038b004d038d005d05c6009903cb00380453fff90443fff904270018
036e0000036e0000036e00000000fca50000fca5029b010a029b00bf029b
00bf03b5008503b5005e03b5005e03de0064026000ed026000b10364007a
0361005f01ff002a02240048022400bb020500970586009601ff008c01ff
002a01ff008c01ff002a035900880359002b035900880359002b01ff002a
0359002b02b6007402b600c002b6007402b600c004190075041900ad0419
0075041900ad0317000102df001f03af018a03fc01ae0317000b02df002d
027300450273004503fcfff603fcfff6073e0095073e0095073e0095073e
009503fcfff903fc00c10205009702050097026d0085026d007a027400bf
0274005a0284005602840075024000840240007a024a00b0024a0067026d
0085026d007a027400bf0274005a028400560284007503fc009e03fc0077
03fc007803fc007604b0006b043d006e03fc006a03fc003d01c4008b0335
008b057500000556000007f7000007270000073c00000727000006ad00af
06ad00af040e008005a4003f05ac004d02b6000003fc003f04b30049040e
002a03fc0057040e00600434005803fc00b903fc004a040e005303fc006d
0419002b040e003403f30035039f006103be005f039f0058039f00250621
0049083300ac03fc002406e300a10411001d0494005f02cb002303ec0062
03ec00510455002203d700510436007e03b20035043600630436005c040e
0048040e00ae040e0072040e0067040e0020040e0065040e006b040e0063
040e0052040e005204430067028d00190381005c0373005903ac00260368
006103b7006e0349002f03b5004b03bc0052039f0050039f008d039f0065
039f0062039f003a039f0067039f0061039f005e039f0051039f00500494
005f02cb002303ec006203ec00510428002203d700510436007e03b20035
043600630436005c040e0048040e00ae040e0072040e0067040e0030040e
0065040e006b040e0063040e0052040e00520321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df004402ea
005102df005102d0005701bc006001bc00580321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df004402ea
005102df005102d0005701bc006001bc0058029d003801f500310252003c
0249002d024a001402460032025100300238002202570025024d0023029d
003801f500310252003c0249002d024a0014024600320251003002380022
02570025024d002302b1ff4b03130044055f004405690044051700440569
0044052e00440553004405c9004e05c9004e0567004705b7004705a20047
05cd0027057d004505a20045052a003505b80048084e0048057d005c07c9
005c03fc004603fc004c03fc006003fc002b03fc005e03fc006003fc0059
03fc004503fc006503fc004c03fc005503fc005603fc003d05e9002c0405
003506d300690443006102ed000703fc00080484003a0550005e04660099
066500660454005b0416004a073e009a073e0096073e00c9073e00c9070e
00af070e013a070e00af070e013a0a4e009a0638009f04660028018a0000
01da00000466000004660000046600000466000004660000046600000466
000004660000046600000466000004660000046600000466000004660000
0466000004660000046601d004a1002304a1002304a1002304a1001904a1
001504a1001d04a1002304a1001c04a1001c04a1001c04a1001d04a10023
03e800ac03e800ac03e8003703e8ffe803e8ffe903e8ffe803e8ffe803e8
003702040015020400a0054c0063054c0063054c0063054c0063054c0063
054c0063054c006305940063059400630594006305940063059400630594
0063052200aa052200aa05c600aa05c600aa05c600aa05c600aa05c600aa
05c600aa03e6001e03e6001e03e6001e03d5005c03d5005c03d5ffbb03d5
ffb103d5ffb803d5ffb803d5005703d5ffb803d5ffb803d5ffb803d5ffb8
03d5005c03fb005d03fb005d03fb003003fbffdb03fbffdb03fbffd903fb
ffcb03fb005d01d6002601d600850438005a0438005a0438ffe80438ffea
0438ffe80438ffea0438005a04a0005a04a0005a04a0005a04a0005a04a0
004904a0005a043400940434009404d2009404d2009404d2008c04d20094
04d2004604d20094039f0022039f0002039f0022046a00530466003803f4
001003f4001003f4ffbd03f4ffc003f4ffbd03f4ffc803f4001003f4ffc8
03f4ffc803f4ffc803f4ffc803f40010038000a1038000a10380fff00380
ffa70380ffa00380ffa20380ff8e0380001101ec000901ec009404aa0066
04aa006604aa002104aa002204aa002104aa002204aa006604ec006604ec
006604ec006604ec006604ec006604ec0066048d009f048d009f0515009f
0515009f0515009a0515009f051500750515009f038300100383fff10383
001001da0000046600000466000004660000046600000466000004660000
046600000466000004c10066052400ac052400ac050600ac049300a10493
00a1047c00a103e6000f02ae00210359001c01d60011043c0025043c0025
043c002506760025067600250676002502f5001c02e7008e0306005a034b
008e02a8008e028c008e0344005a035b008e01a6008e01cb000502e0008e
025b008e046d008e0375008d0375005a02d8008e0375005a029b00570280
0046025700040314005702e3001a0445002202b5001c028b001c02b80050
0000fdfd0000fdfd0466ffff0466ffff0466ffff0466ffff03c1ffff03c1
0000030cffff030c0000030cffff030c0002023100000231000001ffffff
01ffffff01ffffff01ffffff0000fd090000fd0902aa008202aa008202aa
009802aa009801ce008402aa008202aa008202aa008202aa0082027f008e
027f008e0324000002910084046601fd02aa001402aa0013032900000329
0000032900000329ffff039a00000327000003fcfff903fcfff9039a0000
039a00000000ff080000fe4c0000fdfb0000fdfb0000fe3f0000fe3f0000
fdc20000fdc201ce008402aa00140291008302aa001502aa009302aa0093
039a014c039a00000000fdfd0000fdfd0000fd090000fce90000fd090000
feb702aa001402aa001403fcfff90466ffff02aa0098039a0000039a0000
039a0000039a0000039a0000039a000004010014040101470000000002aa
ffff02aaffff01ceffff01ceffff030c0000030c000002aa009302aa00c8
02aa00c803f100c801ceffff01ceffff01ce000001ce000002aa00a003b1
008402aaffff02aaffff075c003c075cffff075cffff075cffff075cffff
075c003f06d0ffff06d0ffff075c0003075c0003075c004001df003001df
003001e7003201e7003200f8004400f8004402070030020700300209004c
0209004c019d0030019d003002070032020700320209004c0209004c0309
004c0309004c015f004c015f004c015200180152001801c3001601c30016
01bf001c01bf001c032700510327005103270051032700510000ffab03bd
ffff041a0000041a00000416000104160001041a0001041a0001041a0001
041a000104010002040100020401000204010002015f004c02aa00c801ce
00c803f100c804ec000f044d00ad0440001e0462005d049d006104ff001b
057e000f044d004c03e8006c0525006403ca005a03adffd6050e005b048a
001c025000ac0226001b042800ac070900aa052affd6054c0063062f0061
04e4000f045800ac03ad004703ab0046043f000f03e6000f0550005e0522
00aa0442001e03bf003b03ca004b03ca005a040e006808ab00ac081500ac
060300ac054700ac07b700ac071400ac04a100230204ff3a054c00630522
00aa052200aa052200aa052200aa052200aa04a1002304a10023061bffcc
050c005b050c005b04280073054c0063054c006303ca0008089500ac0815
00ac050c005b072800ac04d400ac052a00ac04a1ffef04a1002303e8ffe1
03e8006e0204feac0204ff4c054c003b054c00630458ffbf0458006e0522
002f052200aa03ca004b04fc00ac052400ac040e004d03ef003b04a10023
03e800ac054c0063054c0063054c0063054c006303e6001e04a1ffd90444
ffe7035d001b03e6ffb803940064046b001b0545001b0495002403e8ff9e
02a10007050a00630469001a04a0001b04a10023045a00ac045a00ac045a
00990444006104ec00ac04ec00ac04ec00ac04ec00ac04ec00ac03e80084
03e8008403e8008203e8003403e8008103ad00ac050c005b04fc00ac04fc
00ac04fc00ac04fc002804fc00ac0204ff360204ff71042800ac042800ac
042800a0035d00ac035d0035035d0060035d006606d700ac06d700ac06d7
00ac052a00ac052a00ac052a00ac052a00ac054c0063054c0063054c0063
054c0063042200ac042200ac045800ac045800ac04580077045800ac03ad
004703ad004703ad004703ad004703ad004703e6000f03e6000f03e6000f
03e6000f052200aa052200aa052200aa052200aa052200aa048a0022048a
0022071e003d071e003d042700300427003003e6001e03bf001503bf003b
03bf003b035d001b03c2ff9b0433001b045800ac052400ac047100ac03e2
003b0444003803ad005903b500ac046a0027043400990434000403b3005a
043400600430005d0271ffee064300990434009903a300990241002703b4
0014044c0099053e0059043400990321005102e0002102ae002103fc001b
0329005903ca004b0366003a03680050075d006003c00099061e009903d5
005601d6ff570438005a0434007a04340088043400880434008804340088
03fb006203d5005803d50058062f005c044cffe203c4003503a3003a0438
005a0438005a03ca002e01eaff60075d006003c400350434009903d5ffbf
03d5005c03fbffe203fb005d01d6fece01d6ff650438ffed0438005a02ca
ff7302ca00100434ffff0434008703ca004b0434005104cd0060040e0052
034c005903d5005c03fb005d0438005a0438004f0438005a0438005a039f
00220289009804eb009902ae002106930060069200600362fff003210051
032900590394006403fb003c0240fff70240fff70434006002ff002703e2
002203720049040e00720321005101f300ad032900ad049700ac029b010a
03d5005c0434009904340099043400860362005a04340060043400600434
0060043400600434006003fb005d03fb005d03fb005d03fb003f03fb005d
0271002503c40035043400990434009904340067043400130434009401d6
ff1f01d6ff1f01d6ff5a03a3009903a3009903a3006b01d6008901d6ff58
01d6ff5801d6ff5906640099066400990664009904340099043400990434
0086043400860438004f0438004f0438005a0438005a0434009904340099
02ca009902ca008a02ca000a02caffff0321005103210051032100510321
00030321005102ae002102ae002102aeffd202aeffd20434008904340041
0434007b0434004d04340086039d0001039d002205b8003505b800350377
002903770029039f00220329000103290059032900000434008602aeffc6
05b80035039f002203d5005c01f100530241002703d5002902aeff960463
009903db00990344005903c200360362003b02ee003c03190099053b0055
0471000803ee00a203ee001403cb004803fc006d0477003204d3000803ee
00530380007204a40066038a00680350ffe80482006c03f300130232008e
01ecfffe03c900a1063200910491ffe804aa00660592006e0433000803ed
00a1034f0053035b004b038300080359001c04b10066048d009f03b70010
03690044039000570393006b0398005507ce00a1085500ac055a00a105cd
00ac06cf00a1076800ac03f4001001ecff4704aa0066048d0096048d009f
048d009f048d009f048d009f03f4001003f40010055cffe20482006c0482
006c03c9005204aa006604aa00660390000007ce00a1085500ac0482006c
065500a1046200a0049100a103f4ffc503f400100380ffb10380004d01ec
fed001ecff7004aa001d04aa006603edffa403ed0064048d0000048d009f
039000570478008c049300a103c50057038c004403f40010038000a104aa
006604aa006604aa006604aa00660383001003f4001003cb002402e00027
0359ffeb0339005004040027048d002703fd00210380ffff023e0000048b
006603ed00270383000c039000550339005001f300ac032900ac049700ac
026000ed03f40010040400a1040400a10404006e03cb006d046500a10465
00a104650081046500a1046500950380002a038000260380004103800000
0380004a035000a10482006c047800a1047800a10478009a047800200478
00a101ecff2a01ecff5503c900a103c900a103c9007e02e000a102e00000
02e0002802e00024060600a1060600a1060600a1049100a1049100a10491
00a1049100a104aa006604aa006604aa006604aa006603c500a103c500a1
03ed00a103ed00a103ed003e03ed0091034f0049034f0049034f0049034f
0000034f00490359001c0359001c0359001803590019048d009f048d0079
048d009f048d0075048d009f03fd002103fd0021063e0037063e003703cc
003603cc003603830010036900050369004403690020047800a10359000a
063e00370383001003f4001002e00027035effa703c5002703ed00a104b6
00a103ef00a10369004403cb004803500060039900a1043c0025043c0025
0447002504470025043c0025043c0025044f0025043c0025043c00250676
002506760025068200250682002506760025067600250689002506760025
067600250475002104750021047500210475002104750021047500210475
0021047500210475002106d9002106d9002106d9002106d9002106d90021
06d9002106d9002106d9002106d9002103d5009604340060043400990434
00990362003b039b005a043400600434006003fb006203fb0062051b0065
0362005a0362004b0435004b043b005d0241fff704340060043400600451
005a039d001f03d0001e0433009404340099043400990241002701d6fff3
0232009401d6009902e7ffa702f9002701d6009904860099066300940663
0094066400990434ffc204340099045300990438005a05b3005a05920064
0536005502ca002302ca002302ca002302ca009902ca0099028e0094028e
002303980085039800850321005101eaffd50242fff801eaffd5028affc4
02ae004102ae002104a400270476004904550090039d002205b80035039f
00220351001f0329005903d3005903bc004b03bb0056039400640394005e
039400640362005a0507005f03d50099043b005a046b005a04470099028a
ffc403a300270319009904340060039400640394005e066f006006d40060
0719006004f3002103c40021057a0021060c002504ae00990469009903ef
002c03ef00700434ffd5044dffd503d60010050fffe3062f006204120027
03cb006a0444009904590030033f0099036f005501d60085022700000391
009802f000300569005f045300990474005a03cb006304a9006604a80066
0528001406cc00560368003a0438005a0438005a03a8009903cf005203cf
0052033f001b046a009a0465004b05c7004b0664014c03de0020060e0035
034f0042032f00380321005103d0001e02f2009903de00200450009903a8
0099052f0083040e000102f5001c03f1000002e7008e02fb0027034b008e
02a8008e02a800500344005a035b008e01a6008e01cb000502e0008e025b
008e046d008e0375008d0375008d0375005a02b2004802d8008e029b0057
02570004031400570445002202ac004402ac006c02e50048042b004402e5
006c02e5004802b8004702b8004702770046027700460297002a01630061
0297006c0456006c02e6006c02e60045024e003602e6004502e6004502e5
006c01e3002302e9006c02db00460456006c0285001f024a000d02be006c
024600230283002803650055025f00180163006101f6006c02e9006c0285
001f02be006c0246002302e5006c03650050025f00180694009404bbffa7
04bd0060030affa7069cffe504b4002204beffa70352ffa7031affa7039d
0014030fffa70329ffc203c4003b0304006e03c400350688002102410027
026900270468002704db002704c40027043400990451006002710025054c
0060041e009901f0006b067f0099045100990434009902ca006a037b0051
02faffd5039d002203ed0029033c0059047c005c04d800600434006003fb
005d0362005a0362004b03fb006201d600850362003b0233001e04d80094
0376004b02e5006b024e0044026e004402b200440277004201c1002401c1
00070297002a02e9006c0192000001aa006c0163006d0192000001e50000
0194006c017b00530224006e0456006c0456006c031b0000031c006c0304
006e02e600450336004502300042016dffd801e4002302e9000002b8002c
02e6006e02e6006e0285001f023700420294004202a600420272003c02e6
004502e9006c02e9006c016dffd801f6006c01f6002502030025028b006c
03ef002c0286001f01c400540334005401ff008c01ff002a01ff008c01ce
008401ce0084029900650299006c03fc004503fc0065044b0044044b0044
025100f20256000002540000025100f20327000002540000025600000239
00980239009801ce008401ce008402aa008202aa008202aa008202aa0082
02aa004b02aa009302610024015e006c02300042027e00280299006c0310
009603100096031000960310009603100096045700960457009604570096
045700960310004304570043045700430457004304570043045700430457
00430457002f0457002f0457002f0457002f0457002f0310002f04570025
045700250457002504570025045700250310001a0457001a0457001a0457
001a0457001a0457001a0310004204570042045700420457004204570042
045700420457009604570096045700960457009603100042045700420457
0042045700420457004204570042045700420457002f0457002f0457002f
0457002f0457002f0310002f0457002f0457002f0457002f0457002f0457
002f03100026045700260457002604570026045700260457002603100042
045700420457004204570042045700420457004204570096045700960457
009604570096031000420457004204570042045700420457004204570042
031000260457002604570026045700260457002604570026031000230457
0023045700230457002304570023045700230310002f0457002f0457002f
0457002f0457002f0457002f0310004b0457004b0457004b0457004b0457
004b0457004b045700960457009604570096045700960310004204570042
045700420457004204570042045700420310001a0457001a0457001a0457
001a0457001a0457001a0310002404570024045700240457002404570024
045700240310002f0457002f0457002f0457002f0457002f0457002f0310
004e0457004e0457004e0457004e0457004e0457004e0457009604570096
045700960457009602aa006202aa006203290000049a00000359002b02aa
008502aa008502aa00c802aa00c8029100840254000003c1ffff03c10000
039a0000022400bb02aa009802aa009802aa009802aa00980440fff60440
fff60302009803270000032700000324000002aa0000071200d4071200d4
02ac004402b8004702e60045027e002802b8004701d9ffff01d9ffff01d9
000001d90000028900000289000002890000028900000000fc660000fc66
032900000329000003290000032900000324000003240000032900000329
00000329000003290000032400000324000003f4000003f4000003f40000
03f40000032400000324000003270000030c000001ffffff01d900000327
000003290000032900000329000004660000046600000466000004660000
03f4000003f4000003f4000003f40000023200b6023200b6054c00630444
006104440043044400610444004303e6000e0456fec803e6000e03ad00ac
054c0063045d001e059700ac04a2000f04440061042200ac043200640375
005a037500420478000604d700510684001404120076041200030362005a
0362003b0362005a0362003b053b0055037800940438005a0399001404c5
009904a2000f0349005c01eaffd50476ffd504d7005104a9006603cb006d
03cb004803cb006d03cb00480389001a0389fe6f0389001a035000a104b1
005b03e2001e050000a1045d002a03db006d03c500a104a1ffc504a1fe8a
04a1fe6204a1ff2204a1ffc604a1fe8b04a1fe6204a1ff2204a1ff8004a1
ff5804a1002304a1002304a1002304a1ffc504a1fe8a04a1fe6204a1ff22
04a1ffc604a1fe8b04a1fe6204a1ff22066500230665ffc50665fe8a0665
fe620665ff220665ffc60665fe8b0665fe620665ff2203e8fef004bdfe82
04bdfe7a03e8fef004c1fe8604bdfe7a03e8fea403e8fe9504fcfef005d1
fe8205d1fe7a0559feaa04fcfef005d1fe8205d1fe7a0559feaa04fcfea4
04fcfe9504fc00ac04fcfef005d1fe8205d1fe7a0559feaa04fcfef005d1
fe8205d1fe7a0559feaa06c000ac06c0fef00795fe820795fe7a071dfeaa
06c0fef00795fe820795fe7a071dfeaa0204fef002d9fe8202d9fe7a0261
feaa0204fef002d9fe8202d9fe7a0261feaa0204fea40204fe950204ff4e
0204ff7a054cff0605f5fe82060cfe7b054cff0605f2fe7f0605fe74054c
fecf054cfeac0422fef003e6fe940517fe820513fe7e049ffeaa03e6fe47
03e6fe4703e6001e03e6001e0550ff0605f2fe7b060dfe780599feaa0550
ff0605f2fe7b0611fe7c0599feaa0550fecf0550feac0550005e0550ff06
05f2fe7b060dfe780599feaa0550ff0605f2fe7b0611fe7c0599feaa0714
005e0714ff0607b6fe7b07d1fe78075dfeaa0714ff0607b6fe7b07d5fe7c
075dfeaa048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a0061048a0061048a0061048a005a048a0061048a0061048a0061
048a0061048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a0061048a0061048a005a03a5005903a5005903a5004f03a50059
03a5005203a5005203a5005903a50059044c0099044c0092044c008f044c
0094044c0099044c0092044c0092044c0094044c0099044c0099044c0059
044c0099044c0099044c0092044c008f044c0094044c0099044c0092044c
0092044c0094044c0099044c0099044c0059023200010232ff860232ff83
0232ff62023200000232ff860232ff860232ff600232ff100232fecf0232
ff600232ffef0232ff7b0232ff290232ff690232ff680438005a0438005a
0438005a0438005a0438005a0438005a0438005a0438005a041200760412
007604550090045500820455008204550084045500900455008204550082
045500840455001204550010045500800455009004550090045500410455
00710455007d059200640592006405920064059200640592006405920064
059200640592006405920064059200640592006405920064059200640592
006405920064059200640592006405920064059200640592006405920064
059200640592006403f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f4001003f4001003f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001005b9001005b9001005b9001005b9001005b9001005b90010
05b9001005b9001005b90010038000a10380004903800049038000a10380
004903800049038000a10380007b047800a1047800a1047800a1047800a1
047800a1047800a1047800a1047800a1047800a1047800a10478006f0478
00a1047800a1047800a1047800a1047800a1047800a1047800a1047800a1
047800a1063c00a1063c00a1063c00a1063c00a1063c00a1063c00a1063c
00a1063c00a1063c00a101ec000901ecff6201ecff6201ecff6501ec0009
01ecff6201ecff6201ecff6501ecff1001ecfee901ecff6401ec000001ec
ff8c01ecff2a01ecff5301ecff7004aa006604aa006604aa006604aa0066
04aa006604aa006604aa006604aa006603c500a103c500a1038300100389
001a038300100389001a038300100389001a038300100389001a03830010
0389001a038300100389001a038300100389001a038300100389001a0383
00100389001a038300100389001a0383fff50389fff5038300100389001a
038300100389001a04b1006604b1006604b1006604b1006604b1006604b1
006604b1006604b1006604b1006604b1006604b1006604b1006604b10066
04b1006604b1006604b1006604b1006604b1006604b1006604b100660675
006606750066067500660675006606750066067500660675006606750066
0675006604a1002304a1ffc504a1fe8a04a1fe6204a1ff2204a1ffc604a1
fe8b04a1fe6204a1ff2204fc00ac04fcfef005d1fe8205d1fe7a0559feaa
04fcfef005d1fe8205d1fe7a0559feaa0550005e0550ff0605f2fe7b060d
fe780599feaa0550ff0605f2fe7b0611fe7c0599feaa066500230665ffc5
0665fe8a0665fe620665ff220665ffc60665fe8b0665fe620665ff2206c0
00ac06c0fef00795fe820795fe7a06c0fe4d06c0fef00795fe820795fe7a
06c0fe4d0714005e0714ff0607b6fe7b07d1fe780714fe610714ff0607b6
fe7b07d5fe7c0714fe6101d9ffff01d900000289000002890000039a0000
03290000032900000324000003290000032900000324000003f4000003f4
00000324000001d9000003270000030c0000023200b601c4007901c40079
01c40079054e00ac0440000a042200ac0366001b044100ac06b2005503ca
004b04a500ac045800ac046a001b050c000f052400ac05b100ac073800ac
052b00630444006103e6000f03e6001e03e6001e0476003005d2000f049a
007404720074047200ad05f6002805f60028020400ac06680055045f00ac
050e000304fc00ac04fc00ac04720074070700ac04a1002304a10023061b
ffcc03e8005905250064052500640668005503ca001503ca004b052200ac
052200ac054c0063054c0063054c00630462004c0438000f0438000f0438
000f04720071035300ac061800ac0366001b048500300427003004400035
065d0037061d003d041a003d070f0003072800ac0515005b0521000f03ca
005a05090003045f009903df00270434009902f90027039f009905c0003e
0362004b03f4009903b6009903eb00270447000a0471009904d8009905f1
0099046f00590362005a0319000a039d0022039d002203b2002904c5000a
03ea004203c0004203c0009904c8001904c800190583003e03cf00990421
0016044700990454009903c0004205b6005f020400ac03d5002e03d50058
062f005c03fb005603fb006203fb00620583003e0362000803bc004b0453
0095045300970438005a0431005a0431005a038b0004039f0022039f0022
039f002203c0002902c400990554009902f9002703b10029037700290434
006006550060059b004b03ba004b061f001606500099044500500481000a
0362005a042b001604a800a103e8002703c500a10314002703ec00a105d0
004403800057041c00a103ca00a103ca002704530017049800a1050100a1
067700a104a2006503cb006d0359001c0383001003830010041300360545
001c041a006d03fa006d03fa00a1054f0020054f002001ec00a105780044
03ff00a1045a0001047800a104a100a103fa006d062f00a103f4001003f4
0010055cffe20380004204a2006504a20065057800440380000303900057
048900a0048900a004aa006604a9006604a9006603e4001e039d001e039d
001e039d001e03fa0044031400a1058300a1031400270417003603cc0036
03e8004a0588004a0559007203d8007205d20001061900a10488006c0444
001c03800068045c00010400000008000000040000000800000002af0000
02000000015500000450000001bc00000199000001000000000000000000
ffdc0000ff25040e0024040e00240329000003fcfff901ff008c03580088
01c400540334005404a400540476010a03fcfffb0273004404ee004f0444
00610444006103ad0027040e005306640099052a0020076000ac064800ac
071e002005f500ac0428001b03e6000f08a80032043afffe0482002104b2
005b0495002003ad0020044400610621004906210065057800e6059d00e6
03fc005e070100bc03fc0062045201d7045200be0400fff6040001bd0400
01bd0400fff6040001bd0400fff6070900aa045c005b047200ad04440071
04d0003a0562007403c9001006640094042f005f04180015035a0053040b
00300441006f03260010032700030327000303270003025400c0025400c0
025400c8025400c802aaff8c02aaff8c04e0005907f4000a07e200140798
0003076c0061064100ac050b002406a700ac05c80055073f00ac03ca0021
0600009004b8001c085c0063054c003b076c0061076c006104440061056a
0022053400990433001b05af00990480001b060b0099034e001605a90094
03d2ffc40745005a049c005a06420059056a00220362005a06b8006d05c3
00a10453001205c000a1050b0046066400a10380002205580087042e0022
07f10066050f006806b0006d06b8006d039c006d03c7009602aa00db040e
008d0000ffdc0000fe5101cf0000022400bb01c700000163006102b1ff4b
0aa000b404d5009202d5008302d5008304d500b202d500700aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0000fc48000000000000fd170000000000000000039a0000039a00000324
00000324000003240000039a000003240000032400000256000003290000
0329000003bdffff02aaff8c055001e5027f008403240000039a00000256
000000000027000000e1000000ed0000001b032400000324000003240000
032400000324000003240000032400000324000003240000032400000000
0000000000000000000000000000039a0000039a00000346000000000027
03c10000030f00000346000003460000039a0000034800000348000003a2
000003a2000002560000035f00000000009e00000067000000220000009e
0000009e0000009e0000009e0000009e0517fe820513fe7e049ffeaa03e6
fe4703e6fe4703e6000e03e6000e03f4001003f4001003f4001005b80010
05b8001005b80010047800a1047800a10478006f063c00a1063c00a1063c
006f0383ffc80383ffc80383001004b1006604b1006604b1006606750066
06750066067500660000fdbc0000fd1a0000fd770000fd4f0000fbfe0000
fbfa0000fc000000fbfa0000fc000000fbfa0000fc000000fbfa0000fc00
0000fc000000fc000000fc000000fc000000fc000000fc000000fc000000
fdd00000fc300000fc300000fbff0000fbff0000fbff0000fbff0000fbff
0000fc000000fcac0000fcad0000fcac0000fcac0000fd1b0000fd1b0000
fd340000fd340000fd340000fd340000fd600000fd600000fd730000fd73
0000fdcf0000fd5f0000fd5f0000fd5f0000fd5f0000fd7f0000fd7f0000
fca10000fd6f0000fdfd0000fcef0000fcf20000fca00000fca00000fcae
0000fcad0000fc660000fca00000fc2f0000fc2f0000fc660000fc5f0000
fdd00000fcf10000fd6d0000fcf30000fd710000fd710000fdb10000fc65
0000fcf10000fcf10000fc2f0000fbff0000fd770000fc660000fc660000
fc650000fc650000fc650000fc650000fc460000fd790000fcde0000fcde
0000fd4b0000fd4b0000fca80000fca80000fd710000fda60000fda60000
fce30000fd4c0000fd4c0000fd4b0000fd4b0000fd7e0000fcdf0000fcde
0000fcde0000fc8f0000fc520000fc520000fc520000fc520000fc920000
fc970000fc970000fc560000fc560000fc910000fd820000fd820000fd70
0000fd700000fdfa0000fdfa0000fd5f0000fd5f0000fd790000fd790000
fd8f0000fd8f0000fd6e0000fd6e0000fd7a0000fd7a0000fcfb0000fcfb
0000fdb60000fdb60000fda80000fda80000fd680000fd680000fd710000
fd710000fcf10000fcf10000fcf10000fcf10000fc540000fc260000fc26
0000fc290000fc290000fc270000fc270000fc270000fc270000fc350000
fc350000fc350000fc350000fdb60000fda80000fda80000fce30000fd46
0000fd460000fd470000fd470000fd020000fd020000fd020000fd020000
fc650000fc660000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca1
0000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca10000fc370000
fc370000fc370000fc370000fca00000fca00000fc9f0000fcad0000fd33
0000fd470000fc9f0000fc9f0000fc9f0000fc9f0000fbff0000fc020000
fbff0000fc000000fc370000fc370000fc370000fc370000fdbd0000fdbd
0000fca20000fca30000fca30000fdd10000fdd10000fdd10000fdd10000
fc6a0000fc6a03e6fe940389ffcb0389ffcb0389001a01d6008904340060
043400600434006004340060043c0025067600250aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4047d
00a3040e00230054001b002e000000>
<000000000000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
01420000014200000142000001420000029e0000029e000004ea000004ea
000004ea000004ea000004ea000004ea000004ea000004ea000004ea0000
04ea000004ea000004ea000004ea000004ea000004ea000004ea000004ea
000004ea000004ea000004ea000004ea000004ea000004ea000004ea0000
04ea000004ea000004ea000004ea000004ea000004ea000004ea000004ea
00000650000007be000008fe000008fe00000a8800000a8800000a980000
0a9800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa800000aa800000aa800000aa800000aa800000aa8
00000aa800000aa800000aa800000aa800000aa800000aa800000aa80000
0aa800000aa800000aa8000100000f270120001000c3000700020010002f
0065000011902410000400010000000e00ae000000030000000000640000
0000000300000007007600640001000000000000003200da000100000000
0003000e010c0001000000000004000e011a0001000000000006000e0128
0001000000000007003b0136000300010409000000640171000300010409
0001001c01d50003000104090002000e01f10003000104090003001c01ff
0003000104090004001c021b0003000104090006001c0237000300010409
00070076025300a9002000320030003100340020004d006900630072006f
0073006f0066007400200043006f00720070006f0072006100740069006f
006e002e00200041006c006c002000520069006700680074007300200052
0065007300650072007600650064002e00430061006c0069006200720069
00200069007300200061002000740072006100640065006d00610072006b
0020006f006600200074006800650020004d006900630072006f0073006f
00660074002000670072006f007500700020006f006600200063006f006d
00700061006e006900650073002ea92032303134204d6963726f736f6674
20436f72706f726174696f6e2e20416c6c20526967687473205265736572
7665642e4147504c44422b43616c696272694147504c44422b43616c6962
72694147504c44422b43616c6962726943616c6962726920697320612074
726164656d61726b206f6620746865204d6963726f736f66742067726f75
70206f6620636f6d70616e6965732e00a900200032003000310034002000
4d006900630072006f0073006f0066007400200043006f00720070006f00
72006100740069006f006e002e00200041006c006c002000520069006700
6800740073002000520065007300650072007600650064002e0041004700
50004c00440042002b00430061006c006900620072006900520065006700
75006c00610072004100470050004c00440042002b00430061006c006900
6200720069004100470050004c00440042002b00430061006c0069006200
720069004100470050004c00440042002b00430061006c00690062007200
6900430061006c0069006200720069002000690073002000610020007400
72006100640065006d00610072006b0020006f0066002000740068006500
20004d006900630072006f0073006f00660074002000670072006f007500
700020006f006600200063006f006d00700061006e006900650073002e00
b2090320b80284b40918014a20b80283b40918014a20b80282b40918014a
20b80281b40918014a20b80280b40918014a20b8027fb40918014a20b802
7eb40918014a20b8027db40918014a20b8027cb40918014a20b8027bb409
18014a20b8027ab40918014a20b80279b40918014a20b80278b40918014a
20b80277b40918014a20b80276b40918014a20b80275b40918014a20b802
74b40918014a20b80273b40918014a20b80271b40918014a20b80270b409
18014a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a
20b8026cb40918014a20b8026bb40918014a20b8026ab40918014a20b802
69b40918014a20b80268b40918014a20b80267b40918014a20b80266b409
18014a20b80265b40918014a20b80264b40918014a20b80263b40918014a
20b80262b40918014a20b80261b40918014a20b80260b40918014a20b802
5fb40918014a20b8025eb40918014a20b8025db40918014a20b8025cb409
18014a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a
20b80258b40918014a20b80257b40918014a20b80256b40918014a20b802
55b40918014a20b80254b40918014a20b80253b40918014a20b80252b409
18014a20b80251b40918014a20b80250b40918014a20b8024fb40918014a
20b8024eb40918014a20b8024db40918014a20b8024cb40918014a20b802
4bb40918014a20b8024ab40918014a20b80249b40918014a20b80248b409
18014a20b80247b40918014a20b80246b40918014a20b80245b40918014a
20b80244b40918014a20b80243b40918014a20b80242b40918014a20b802
41b40918014a20b80240b40918014a20b8023fb40918014a20b8023eb409
18014a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a
20b8023ab40918014a20b80239b40918014a20b80238b40918014a20b802
37b40918014a20b80236b40918014a20b80235b40918014a20b80234b409
18014a20b80233b40918014a20b80232b40918014a20b80231b40918014a
20b80230b40918014a20b8022fb40918014a20b8022eb40918014a20b802
2db40918014a20b8022cb40918014a20b8022bb40918014a20b8022ab409
18014a20b80229b40918014a20b80228b40918014a20b80227b40918014a
20b80226b40918014a20b80225b40918014a20b80224b40918014a20b802
23b40918014a20b80222b40918014a20b80221b40918014a20b80220b409
18014a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a
20b8021cb40918014a20b8021bb40918014a20b8021ab40918014a20b802
19b40918014a20b80218b40918014a20b80217b40918014a20b80216b409
18014a20b80215b40918014a20b80214b40918014a20b80213b40918014a
20b80212b40918014a20b80211b40918014a20b80210b40918014a20b802
0fb40918014a20b8020eb40918014a20b8020db40918014a20b8020cb409
18014a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a
20b80208b40918014a20b80207b40918014a20b80206b40918014a20b802
05b40918014a20b80204b40918014a20b80203b40918014a20b80202b409
18014a20b80201b40918014a20b80200b40918014a20b801ffb40918014a
20b801feb40918014a20b801fdb40918014a20b801fcb40918014a20b801
fbb40918014a20b801fab40918014a20b801f9b40918014a20b801f8b409
18014a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a
20b801f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801
f1b40918014a20b801f0b40918014a20b801efb40918014a20b801eeb409
18014a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a
20b801eab40918014a20b801e9b40918014a20b801e8b40918014a20b801
e7b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b409
18014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a
20b801e0b40918014a20b801dfb40918014a20b801deb40918014a20b801
ddb40918014a20b801dcb40918014a20b801dbb40918014a20b801dab409
18014a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a
20b801d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801
d3b40918014a20b801d2b40918014a20b801d1b40918014a20b801d0b409
18014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a
20b801ccb40918014a20b801cbb40918014a20b801cab40918014a20b801
c9b40918014a20b801c8b40918014a20b801c7b40918014a20b801c6b409
18014a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a
20b801c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801
bfb40918014a20b801beb40918014a20b801bdb40918014a20b801bcb409
18014a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a
20b801b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801
b5b40918014a20b801b4b40918014a20b801b3b40918014a20b801b2b409
18014a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a
20b801aeb40918014a20b801adb40918014a20b801acb40918014a20b801
abb40918014a20b801aab40918014a20b801a9b40918014a20b801a8b409
18014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a
20b801a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801
a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8019eb409
18014a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a
20b8019ab40918014a20b80199b40918014a20b80198b40918014a20b801
97b40918014a20b80196b40918014a20b80195b40918014a20b80194b409
18014a20b80193b40918014a20b80192b40918014a20b80191b40918014a
20b80190b40918014a20b8018fb40918014a20b8018eb40918014a20b801
8db40918014a20b8018cb40918014a20b8018bb40918014a20b8018ab409
18014a20b80189b40918014a20b80188b40918014a20b80187b40918014a
20b80186b40918014a20b80185b40918014a20b80184b40918014a20b801
83b40918014a20b80182b40918014a20b80181b40918014a20b80180b409
18014a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a
20b8017cb40918014a20b8017bb40918014a20b8017ab40918014a20b801
79b40918014a20b80178b40918014a20b80177b40918014a20b80176b409
18014a20b80175b40918014a20b80174b40918014a20b80173b40918014a
20b80172b40918014a20b80171b40918014a20b80170b40918014a20b801
6fb40918014a20b8016eb40918014a20b8016db40918014a20b8016cb409
18014a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a
20b80168b40918014a20b80167b40918014a20b80166b40918014a20b801
65b40918014a20b80164b40918014a20b80163b40918014a20b80162b409
18014a20b80161b40918014a20b80160b40918014a20b8015fb40918014a
20b8015eb40918014a20b8015db40918014a20b8015cb40918014a20b801
5bb40918014a20b8015ab40918014a20b80159b40918014a20b80158b409
18014a20b80157b40918014a20b80156b40918014a20b80155b40918014a
20b80154b40918014a20b80153b40918014a20b80152b40918014a20b801
50b40918014a20b8014fb40918014a20b8014eb40918014a20b8014cb409
18014a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a
20b80148b40918014a20b80147b40918014a20b80146b40918014a20b801
45b40918014a20b80144b40918014a20b80143b30918014ab80284b21e3e
1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8
027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027b
b21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d
431fb80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431f
b80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb802
6eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab2
1c451fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c44
1fb80265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb8
0261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025d
b21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c
451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451f
b80254b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb802
50b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb2
1c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a
1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb8
0243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023f
b21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b
4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1f
b80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb802
32b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb2
1b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c
1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb8
0225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221
b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b
4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1f
b80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb802
14b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b2
1a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e
1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb8
0207b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203
b219501fb80202b219511fb80201b219511fb80200b219511fb801ffb219
511fb801feb219501fb801fdb219511fb801fcb219511fb801fbb219511f
b801fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801
f6b219511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b2
18541fb801f1b218541fb801f0b218531fb801efb218541fb801eeb21854
1fb801edb218541fb801ecb218531fb801ebb218531fb801eab218541fb8
01e9b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5
b218541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218
541fb801e0b218531fb801dfb218531fb801deb218541fb801ddb218541f
b801dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801
d8b218541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b2
17571fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b21756
1fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb8
01cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7
b217571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217
561fb801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561f
b801beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801
bab217571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b2
17571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b
1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb8
01adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9
b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b216
5b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1f
b801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb801
9cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2
163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e
1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8
018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018b
b2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b216
5b1fb80186b215611fb80185b215621fb80184b215621fb80183b215661f
b80182b215661fb80181b215551fb80180b215451fb8017fb215361fb801
7eb215361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab2
15641fb80179b215661fb80178b215661fb80177b215661fb80176b21566
1fb80175b215661fb80174b215661fb80173b215451fb80172b215621fb8
0171b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016d
b215661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215
621fb80168b215621fb80167b215611fb80166b215641fb80165b215641f
b80164b215661fb80163b215661fb80162b215661fb80161b215661fb801
60b215661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb2
15451fb8015bb215361fb8015ab215611fb80159b215621fb80158b21562
1fb80157b215631fb80156b215641fb80155b215661fb80154b215661fb8
0153b215661fb80152b215661fb80151b214401fb80150b214551fb8014f
b214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214
401fb8014ab214411fb80149b214401fb80148b214401fb80147b214411f
b80146b2147e1fb80145b214871fb80144b2147f1fb80143b214801fb801
42b212461fb80141b212461fb80140b212461fb8013fb212461fb8013eb2
12441fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b
1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb8
0135b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131
b211551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211
591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1f
b80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb801
24b211561fb80123b211571fb80122b211581fb80121b211591fb80120b2
115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b
1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb8
0117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113
b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb210
5f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1f
b8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb801
06b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2
105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641f
fc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f
641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641f
ed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e
671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681f
de0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d
311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1f
cf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d
6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f
40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741f
b90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c
741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1f
aa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b
7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f
9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b
7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f
8c0aa71f8503251f8403381f8301381f8255805581ab80557f557d557eab
7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a5579
55775578ab7755ba028600660285403c5576ab755504751475747503f475
01ab750144750130750102007510752075030c7455725573ab7255007250
728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c72
0d104671556f5570ab6f556e666d556a03251f6938675568ab6755663864
5565ab645563386255613860555f385d555eab5d555c385a555bab5a5559
3858555703251f5638545555ab54555338515552ab51554f384e554e0325
1f4d384b554cab4b554a38485549ab4855473846554503381f001c101c20
1c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc0
1b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf18024018
292c460f17cf17df17ef1704134017292e460016101620160315b8ffc0b3
164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f
15010f151f1502451f15010011e011f0110315bf10cf10020f0f010f0fff
0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f
0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f
0b02400b3f4346400b2d30460003012001010001100120010308b8ffc0b3
01151f46b80100b316010501b80190b154532b2b4bb80800524bb008505b
b00188b02553b00188b040515ab00688b000555a5b58b101018e59b10102
4354b0144b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0
805358b0401d594bb0ff5358b0001db1160042592b5e7375732b2b745e73
2b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b73
74755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f7373737374
2b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff02840064028300640282
00640281006402800064027f0064027e0064027d0064027c0064027b0064
027a00640279006402780064027700640276006402750064027400640273
00640271006402700064026f0064026e0064026d0064026c0064026b0064
026a00640269006402680064026700640266006402650064026400640263
0064026200640261006402600064025f0064025e0064025d0064025c0064
025b0064025a006402590064025800640257006402560064025500640254
006402530064025200640251006402500064024f0064024e0064024d0064
024c0064024b0064024a0064024900640248006402470064024600640245
00640244006402430064024200640241006402400064023f0064023e0064
023d0064023c0064023b0064023a00640239006402380064023700640236
0064023500640234006402330064023200640231006402300064022f0064
022e0064022d0064022c0064022b0064022a006402290064022800640227
006402260064022500640224006402230064022200640221006402200064
021f0064021e0064021d0064021c0064021b0064021a0064021900640218
006402170064021600640215006402140064021300640212006402110064
02100064020f0064020e0064020d0064020c0064020b0064020a00640209
006402080064020700640206006402050064020441ff0064020300640202
0064020100640200006401ff006401fe006401fd006401fc006401fb0064
01fa006401f9006401f8006401f7006401f6006401f5006401f4006401f3
006401f2006401f1006401f0006401ef006401ee006401ed006401ec0064
01eb006401ea006401e9006401e8006401e7006401e6006401e5006401e4
006401e3006401e2006401e1006401e0006401df006401de006401dd0064
01dc006401db006401da006401d9006401d8006401d7006401d6006401d5
006401d4006401d3006401d2006401d1006401d0006401cf006401ce0064
01cd006401cc006401cb006401ca006401c9006401c8006401c7006401c6
006401c5006401c4006401c3006401c2006401c1006401c0006401bf0064
01be006401bd006401bc006401bb006401ba006401b9006401b8006401b7
006401b6006401b5006401b4006401b3006401b2006401b1006401b00064
01af006401ae006401ad006401ac006401ab006401aa006401a9006401a8
006401a7006401a6006401a5006401a4006401a3006401a2006401a10064
01a00064019f0064019e0064019d0064019c0064019b0064019a00640199
006401980064019700640196006401950064019400640193006401920064
0191006401900064018f0064018e0064018d0064018c0064018b0064018a
006401890064018800640187006401860064018500644180018400640183
0064018200640181006401800064017f0064017e0064017d0064017c0064
017b0064017a006401790064017800640177006401760064017500640174
006401730064017200640171006401700064016f0064016e0064016d0064
016c0064016b0064016a0064016900640168006401670064016600640165
00640164006401630064016200640161006401600064015f0064015e0064
015d0064015c0064015b0064015a00640159006401580064015700640156
00640155006401540064015300640152006401500064014f0064014e0064
014c0064014b0064014a0064014900640148006401470064014600640145
006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b59
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[2729 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 1258 1004 <00020048ffed03c705210013002b00ea4019281201291101260d01260c01
2608012507012a03012902012db8ffc040250f024d602d01141810014d14
100f014d14160d014d140a0c014d14200b014d14180c014d14bb022d0000
0020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8fff6b30c
014d20b8ffe8b60c014d24200120b8022d40090a200030004000030ab8ff
f040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00b8ffc040
0a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003fed3fed11
120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b2b2b3130
5d2b5d5d5d5d5d5d5d5d01140e0223222e0235343e0233321e0207342e04
23220e0215141e0233323e0403c72f6db0817aa7662b306cb0807ba7662b
b00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b16157a9f7
a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e7285>DMSAAA+Calibri AddT42Char 
2 1616 1005 <000100ae0000039f0517002e00e54024241e01241d01241c01231b01241a
01241901261801261701291201291101122010014d30b8ffc0400d0f024d
60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29b8fff0b3
0d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e18200b01
4d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8ffc0b310
014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b014da01101
111312b8013fb323522910b80107b10654003fed323ffdcd012f5d2b2b2b
2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d5d5d5d5d
5d5d5d25140e022321222e0235343e02332111070606262635343e023725
3e0333321e02151133321e02039f060a0d07fd5c070c0b0606090d08010e
fa13170e0503060b09012a040c12181218201206ea080e090544131a1007
07101a13121a110903d8950a040d1e171118100c06bf0304040104070b06
fb8f09111a00>DMSAAA+Calibri AddT42Char 
2 1982 1006 <000100720000039c0521003e0094400d2936012b1e01291d01261e0140b8
ffc040170f024d604001161810014d16100c0d014c16200b014d16b8022d
b633253325330039b8ffe8b310014d39ba027f000bffc0b30c014d0bb8ff
e0400b0f014d0b1138392020391bb8012eb63316062e531039b80128b106
54003fed323f123939ed11392f123939012f2b2be12bcd39392f2f10e12b
2b2b31305d2b005d015d5d5d25140e022321222e0235343e0237133e0335
342e0223220e0223222e0235343e0633321e0215140e02070721321e0203
9c05090f09fd350e150f07030a0f0cfb576939121c3550343d6149310c07
0b0704020508183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c13
0907101e16141e17170d010a5c9278622b2b4d3a2222282208121e150f16
100e15242318355c7a453e7b8faf72d609121b00>DMSAAA+Calibri AddT42Char 
2 2302 1008 <00020030fffa03d30514002a002e00fb403a252e01262d01272c01242701
242601251c01261b01231a01241901251801251701261601261501261401
261001260f012405012404012b1b0130b8ffc040120f024d6030012d1618
0f024d162010014d16b8ffe0b30f014d16b8ffe0b70c014d161c2e2e10b8
fffc401d0f024d101810014d10100f014d10100d014d100a0c014d10100b
014d10bb021100270004ffd4b30f024d04b8ffd0b30c014d04b8ffe0400a
0b014d0404302f271b2eb8010b400a042b2110100a21520a55003f3f1239
2f123933ed3232111201392f2b2b2b33e12b2b2b2b2b2b321133cd2b2b2b
2b3231305d2b005d015d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d011406
232311140e0223222e02351121222e0235343e0237013e0333321e021511
3332160123012103d31412920814201918201307fdea0c100d0502060a07
01d205131e2c1e21311e10921115fea102fe5b01a701702126fef0080b08
0404080b08011006101e18131e19170d0312080c080305080d09fcc62302
e9fd3a00>DMSAAA+Calibri AddT42Char 
2 322 970 <0002006bffed03bd0520003400480099b9004affc040170f024d604a012b
753f01663f01433f01343f01243f013fb8024340140c1c1c0c7a35016a35
014b35013a35012b350135b80243b670000120000100b8ffe0b30f014d00
b8ffe8b70f024d00300c010cb8fffa400a0f024d0c3aff30300526b80100
b2135944b80115b1055f003fed3fed12392fed012f2b5dd42b2b5d5de15d
5d5d5d5d12392f10e15d5d5d5d5d3231305d2b01140e0223222e0435343e
0433321e0615140e0223222e0223220e02073e0333321e0207342e022322
0e0207141e0233323e0203bd346ca671517c5c3d2510122e4f77a66e254c
402c0e07040201070b090b26364d335d865529031a414d563169905926ae
17365a42254a453f1a213f5e3f405e3e1d01a3559f7949284a6c8aa45e53
aa9e8b673c090f120b0d0f130e121a10080e110e4c80a95c0f1e180f3965
89603a5f42240d171f1281ae692d30516500>DMSAAA+Calibri AddT42Char 
2 2696 1010 <ffff006bffed03bd0520020603ca0000>DMSAAA+Calibri AddT42Char 
2 670 972 <00030052ffed03ba05210027003700470182b90036fff0b40f11014c36b8
fff0b40c0d014c35b8fff0b40f11014c35b8fff0b40c0d014c34b8fff0b4
0f11014c34b8fff0b40c0d014c33b8fff0b311014d33b8fff0b30f014d49
b8ffc0b60f024d60490130b8fff0b40c0d014c30b8fff0b40f10014c30b8
fff0b40c0d014c30b8ffe0b30b014d30b8021940191428100c0d014c2810
0f10014c28100c0d014c28200b014d28b80218401a1e0f231e1e180f014d
14180f014d141e141e0a38100c0d014c38b8ffd040151d014d38100f1001
4c38100c0d014c38200b014d38ba02430000ffd4b30f024d00b8ffe0b30f
014d00b8ffc0b314014d00b8ffc0b310014d00b8ffc0b30d014d00b8ffc0
b40b014d0042b8fff0400a0c0d014c42301d014d42b8fff0b40f10014c42
b8fff0b40c0d014c42b8ffe0b30b014d42b8024340110a400b014d0a353d
052dfd195945fd055f003fed3fed123939012f2be12b2b2b2b2bd42b2b2b
2b2b2be12b2b2b2b2b1239392f2f2b2b12393910e12b2b2b2b10e12b2b2b
2b31305d2b002b2b2b2b2b2b2b2b01140e0223222e0235343e02372e0335
343e0233321e0215140e02071e0303342e0223220615141e021736361334
2e02270e0315141633323603ba3c71a66b649e6e3a284b6e453c5c402131
639966628f5d2c21405d3c476f4b27d81d3853356c6f1b39573c656c2a22
4567443f5f3d1f85848083014c54835a2e2a52784d3d66564b221f45515c
36447758332f516e3f335e544920234a555f025f2a443019625527433c39
1f347efda22e4b413d211f3e42492c616a6b>DMSAAA+Calibri AddT42Char 
2 2712 1012 <ffff0052ffed03ba0521020603cc0000>DMSAAA+Calibri AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>DMSAAA+Calibri AddT42Char 
DMSAAA+Calibri /CharStrings get begin
/zero 1004 def
/one 1005 def
/two 1006 def
/four 1008 def
/six 1010 def
/eight 1012 def
end
DMSAAA+Calibri /Encoding get
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
pop
end
%ADOEndSubsetFont
/RGRESK+Calibri /DMSAAA+Calibri findfont ct_VMDictPut
/RGRESK+Calibri*1 
[48{/.notdef}rp /zero /one /two /.notdef /four /.notdef /six 
/.notdef /eight 199{/.notdef}rp]
RGRESK+Calibri nf
RGRESK+Calibri*1 [17.0479 0 0 -17.0479 0 0 ]msf
30.3112 328.682 mo
(0)sh
21.6713 294.361 mo
(20)
[8.52231 0 ]xsh
21.6713 260.04 mo
(40)
[8.52231 0 ]xsh
21.6713 225.719 mo
(60)
[8.52231 0 ]xsh
21.6713 191.398 mo
(80)
[8.52231 0 ]xsh
13.0314 157.079 mo
(100)
[8.52231 8.64335 0 ]xsh
13.0314 122.76 mo
(120)
[8.52231 8.64335 0 ]xsh
13.0314 88.3199 mo
(140)
[8.52231 8.64335 0 ]xsh
13.0314 54.0008 mo
(160)
[8.52231 8.64335 0 ]xsh
13.0314 19.6816 mo
(180)
[8.52231 8.64335 0 ]xsh
50.351 350.762 mo
(0200400600800)
[98.1636 8.52231 8.64334 89.522 8.64333 8.52231 89.522 8.64334 8.64334 89.522 8.64331 8.52234 
0 ]xsh
%ADOBeginSubsetFont: ONKBAA+Calibri-Bold Initial
ct_T42Dict begin
-0.516 -0.305 1.238 0.969
 256 array 0 1 255 {1 index exch /.notdef put} for  /ONKBAA+Calibri-Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f32fc0bb913000000cc000000606376
74202f4935490000012c000006086670676da1ea42ac0000073400000913
676c79661075c8de0000a33c000014fa68656164f0588bd9000010480000
0036686865610d8d124b0000108000000024686d747815e7fb79000010a4
00003c966c6f636101241f9600004d3c00003ca06d6178701c1617ab0000
89dc000000206e616d65d4eef6e8000089fc000003a470726570c7f0742e
00008da00000159c676469720000000000000000000000000003044a02bc
00050008059905330000011e05990533000003d000ba02000800020f0702
030404030204e00002ff4000acff00000001000000004d53202000200000
feff0600fe0001c4079e02262000019f0000000003c0050e000000200003
0000079e0000fe930000000000000000000000810081009c00ab00b500ba
00c100ca00d300f3010a0060008500bf00e300ea00f200fb010001070115
011c01290000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe83056d000d03c000060017
0000fffaffe9fea9ffe90000050e000600170000fffaffe9fe93050e0017
0426000600170000fffaffe9ff12ffed050e00170426000600170000fffa
ffe9fe93feb8fece060b0010050e0006001002cbfffafff001edfffa023f
00060010ff36fffafff00287000600100000fffafff0079efeaffe9f0000
0000000000000000000000700072007500780079007a007b007d007e007f
008300860087008800890085007f0086008b008c008d008e008f00900091
00920093009400950096009700980099009a009b009c009d009e009f0092
00930094009b009c009e009e00960099009a009d009e00a200a600a900ac
00a200a300a400a500a700a800a900aa00ab00ac00ae00a300a500a700a8
00aa00ab00ac00ad00ae00a000a100a300a600a700a900aa00ac00ad00af
00af00b000b100b200b300b400b500af00af00b000b200b300b400b500b8
00c000b600b700b800b900ba00bb00bc00bd00be00bf00c000c100c200b9
00ba00bc00bd00bf00c000c100c200b600b700b800b900ba00bb00bc00bd
00be00bf00c000c100c200c000c100c200c300c400c500c600c700c800c9
00ca00cb00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb
00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb00cc00cd
00ce00cf00c500c800c900ca00cb00ce00cf00d000d100d200d300d400d5
00d600d700d900db00de00df00e000e200e300ec00d000d100d200d300d4
00d500d600d700d800d900da00db00dd00de00df00e000e100e300e500e9
00ec00ed00d100d300d400d500d800d900da00dc00e000e100e800d000d1
00d400d600e000e4010800f5010200fb00ff0108008f0090009600920093
00990090009100970098009a009d00a400a600a700a800a900af009a00a2
00a300a700a900aa00ab00ac00ad00b000ad009b00aa00ab00ad00b0009a
00aa00ac00ad00ae00af00b100b900bb00bc00bd00be00c100c200c300c4
00c500c600c700c800c900ca00cb00ce00b300b400b500b600b700b800bc
00c200c500c800ca00cb00cd00ce00cf00d000c700b700b800b900bb00bc
00be00c600c700c800c900cb00cf00d000b200b600b700c200c400c500c6
00c700cb00cc00cd00ce00cf00d000d100d400d500d700d800d900da00db
00dc00de00df00e000e200e300e500e600d100d300d600d700d800da00db
00dc00dd00de00df00e000e100e200e300e400e500d100d200d400d500da
00db00dd00de00df00e000e100e200e600d200d300d400d700d800dd00de
00e000e100e200e300e400e500e600d200da00e100e900ea00ec00e800e9
00ea00eb00ec00ed00eb00e700ea00eb00ec00ed00e700e900ea00ec00ed
00ee00ef00f500ee00ef00f000f100f200f300f400f500f600ee00f000f2
00ef00f000f100f200f300f400f500f600ee00ef00f000f100f200f300f4
00f500f600f700f700f800f900fa00fb00fc00fd00f700f800f900fa00fb
00fd00f700f800f900fa00fb00fc00fd00fd00fe00ff0100010101020103
00fe010001010102010300fe00ff01000101010201030102010301040105
0106010701080109010a010c010d010e010f011001070104010501060107
01080109010a010b010d010e010f01100111010401050106010701080109
010a010b010c010d010e010f0110011101040105010601070109010e010f
011201130114011501170118011a011b011c011d011e011f012101220112
01130114011501170119011b011c011d011e012001210123012401250113
011401150116011701180119011a011b011c011d011f01200117011c011d
011e012001210129013001770129012b012e012f01300131013401350137
0139012b012d013001320134013a012e01300134013a014200500062006c
00fa05e802cc0114011400a000b140465f5e5d5c5b5a5958555453525150
4f4e4d4c4b4a494847464544434241403f3e3d3c3b3a39383736352f2e2d
2c2826252423221f181411100f0d0b0a090807060504030201002c452346
6020b02660b004262348482d2c452346236120b02661b004262348482d2c
45234660b0206120b04660b004262348482d2c4523462361b0206020b026
61b02061b004262348482d2c45234660b0406120b06660b004262348482d
2c4523462361b0406020b02661b04061b004262348482d2c0110203c003c
2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320
b04d44235920b0042651582320b00d44235921212d2c20204518684420b0
01602045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b43
23430b2d2c00b0282370b101283e01b0282370b10228453ab10200080d2d
2c2045b00325456164b050515845441b2121592d2c2045b0004360442d2c
01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb810006260
2b0c642364615c58b00361592d2c8a03458a8a87b0112bb0292344b0297a
e4182d2c4565b02c234445b02b23442d2c4b525845441b2121592d2c01b0
05251023208af500b0016023edec2d2c01b005251023208af500b0016123
edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001
610110203c003c2d2c00b00743b006430b2d2c21210c6423648bb8400062
2d2c21b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0
c051580c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb8
4000626023212d2c4523456023456023456023766818b08062202d2cb004
26b00426b00425b0042545234520b003266062636820b0032661658a2344
442d2c2045b0005458b040442045b04061441b2121592d2c45b1302f4523
456160b0016069442d2c4b5158b02f2370b01423421b2121592d2c4b5158
20b0032545695358441b2121591b2121592d2c45b01443b0006063b00160
69442d2cb02f45442d2c452320458a60442d2c45234560442d2c4b235158
b90033ffe0b134201bb3330034005944442d2cb0164358b00326458a5864
66b01f601b64b020606620581b21b04059b001615923586559b029234423
10b029e01b2121212121592d2cb0164358b004254564b020606620581b21
b04059b0016123586559b0292344b00425b00725082058021b0359b00525
10b004252046b0042523423cb0072510b006252046b00425b0016023423c
2058011b0059b0052510b00425b029e0b0072510b00625b029e0b00425b0
0725082058021b0359b00425b003254348b00625b00325b0016043481b21
59212121212121212d2cb0164358b004254564b020606620581b21b04059
b0016123581b6559b0292344b00525b00825082058021b0359b0042510b0
05252046b0042523423cb00425b0072508b0072510b006252046b00425b0
016023423c2058011b0059b0042510b00525b029e0b02920456544b00725
10b00625b029e0b00525b00825082058021b0359b00525b003254348b004
25b0072508b00625b00325b0016043481b2159212121212121212d2c02b0
0425202046b004252342b0052508b003254548212121212d2c02b0032520
b0042508b0022543482121212d2c452320451820b0005020582365235923
6820b040505821b04059235865598a60442d2c4b53234b515a5820458a60
441b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b
2121592d2cb000214b5458381b2121592d2cb002435458b0462b1b212121
21592d2cb002435458b0472b1b212121592d2cb002435458b0482b1b2121
2121592d2cb002435458b0492b1b212121592d2c208a08234b538a4b515a
5823381b2121592d2c0020b200400325b0062649618b3812342d2c014623
466023466123201020468a61b8ff80628ab140408a704560683a2d2c208a
2349648a2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b5442
2d2cb1020042b123018851b1400188535a58b910000020885458b2020102
43604259b12401885158b920000040885458b2020202436042b124018854
58b2022002436042004b014b5258b2020802436042591bb9400000808854
58b202040243604259b94000008063b80100885458b202080243604259b9
4000010063b80200885458b202100243604259b94000020063b804008854
58b202400243604259595959592d2c451868234b51582320452064b04050
587c59688a6059442d2cb00016b00225b0022501b001233e00b002233eb1
0102060cb00a236542b00b234201b001233f00b002233fb10102060cb006
236542b0072342b00116012d2c20b82000628a6023622d2cb0072558001b
0159b0042510b00325b0022520b8ffff545821cd1bed5921b006255cb006
255a58b0092b5920b005254ab0042547b004254760b0062547b0806361b0
0225b0005558b00325b00725496359b0082558001b0159b00425b0062549
b009255cb009255a58b0092b59b0072546b0806361b0032520b000555863
1b2159612320b0005558b080631b21b08059b0592bb006255c586959b004
25202010b00048233ab0062658001b0159b0052658b003252f598a122332
21212d2cb00625b00a2587b00625b009254ab0005358b00625b00a251bb0
0925b0072559b00225b00225070cb005256323b00625636020b940000400
63535821b00426b00426b00a1bb94000040063655158b0042665b0042665
b00a1bb00426b00426b000b00325b003250b0d0ab0092eb00725b007250b
0d0ab00b2eb00525b0052507595920b0005558b00525b0052587b00725b0
07250bb0092510b00b25b0092620b8ffff545821cd1bed59b00525b00525
07b00825b00b254923b00625b0062587b00a2510b00b25c15920b00051b8
00522378b00161b00225b00725b0072507b00a25b00d254961b08062b005
25b005250bb00a252338b00625b0062587b00825b008250bb00a2510b00b
25c4b00625b0062507b00925b00c2549b0032554b8ffa723792121212121
212121212121212d2c23b0005458b9400000001bb900004000598ab00054
58b9400000001bb90000400059b05b2b2d2c08b0005458b9400000001bb9
00004000590db05b2b2d2c8a8a080d8ab0005458b9400000001bb9000040
0059b05b2b2d2cb00426b00426080db00426b00426080db05b2b2d000001
00000005bae1ea7f246a5f0f3cf50019080000000000bbeb7ccc00000000
cf7409dbfbdafd8d09ec07c5000000090002000100000000000100000600
fe0001c40aa0fbdafa8609ec000100000000000000000000000000000f24
040e0000000000000000000001cf000004d9001704d9001704d9001704d9
001704d9001704d9001704d9001704d9001704d9001704d9001704d90017
0634ffd30634ffd3047c008d043c004f043c004f043c004f043c004f043c
004f043c004f050b008d050b008d051d000f051d000f03e7008d03e7003f
03e7008d03e7003f03e7003c03e7004d03e7005503e7007503e7008d03e7
008d03ac008d0519004905190049051900490519004905190049050c008d
050c008d054300100222008d0222ff5a022200260222ff440222ff480222
ff4e0222ff5b0222ff80022200220222001e04c9008d02a6000302a6ffaf
0460008d0460008d0362008d036200720371008d0362008d03760015047e
008d06fe008d0545008d0545008d0545008d0545008d0545008d0521008d
056900500569005005690050056900500569005005690050056900500569
005005690050057200500572005006fe00500442008d0442008d057d0050
0481008d0481008d0481006a0481008d03c8003f03c8003f03c8001f03c8
002303c8003f03c8003f03f6000c03f6000c03f6000c03f6000c0539008c
0539008c0539008c0539008c0539008c0539008c0539008c0539008c0539
008c0539008c0539008c04bb00160740002b0740002b0740002b0740002b
0740002b04680021042800100428001004280010042800100428001003d3
003303d3003303d3001e03d300330447000a0447000a0447000a0447000a
0447000a0447000a0447000a0447000a0447000a0447000a0447000a058f
ffe2058fffe20438008603cb005a03cb005a03cb005a03cb005a03cb005a
03cb005a049100860491008104a6002604a60026038f0086038f0024038f
0086038f0020038f0020038f001d038f0030038f003f038f0086038f0086
03580086049c0058049c0058049c0058049c0058049c0058049c0086049c
008604c10034021000860210ff600210001f0210ff540210ff410210ff53
0210ff650210ff7b0210001802100016046f0086026900000269ffa10405
00860405008602fc008602fc0085030d008602fc0086030c002c04150086
0648008604c7008604c7008604c7008604c7008604c700860497008604da
005504da005504da005504da005504da005504da005504da005504da0055
04da005504e4005504e40055062e005503fd008603fd008604de00550425
0086042500860425005a04250086036f0043036f0043036f0001036f0006
036f0043036f0043037b001b037b0008037b001b037b001b04ac008404ac
008404ac008404ac008404ac008404ac008404ac008404ac008404ac0084
04ac008404ac00840435001b068a002b068a002b068a002b068a002b068a
002b0404002603cd000b03cd000b03cd000b03cd000b03cd000b038f003e
038f003e038f0016038f003e03f3004703f3004703f3004703f3004703f3
003703f3004703f3004703f3004703f3004703f3004703f3004706330047
06330047044b007e03590048035900480359003b03590048035900480359
0048077d004807080048060e0048060e0048044b004b04c6004b048d004b
044b004c0407004a0407004a0407004a0407004a0407004a0407004a0407
004a0407004a0407004a0407004a0288001906c200190909001904ce0019
06c2001909090019046f0019046f0019046f0019046f0019048100190481
00190481001904810019046f0019046f001906b6001906b6001906b60019
06b6001906c8001906c8001906c8001906c8001906b6001906b60019046f
0019046f001906b60019064d001908950019046f0019046f001904ea0019
046f001906b60019051600190516001905450019075e001903cb001b03cb
001b03cb001b03cb001b03cb001b044b004b044b004b044b004b044b004b
044b004b044b007e044bff9f0461fff901f7006b01f7ff7801f7001a01f7
ff6301f7ff3701f7ff7601f7ff6d01f7ff7301f7000801f7007e0403006b
043a006e020bffdb020bffdb020bff6d03d7007e03d7007e03d7007e01f7
007e01f700320273007e01f7003f021c00140361007e0682007e044b007e
044b007e044b007e044b0063044b007e04faff96044b007e044d0048044d
0048044d0048044d0048044d0048044d0048044d0048044d0048044d0048
045a0048045a004806be0048044b007e044b007e044b004b02d8007e02d8
007e02d8fff202d8005703310049033100490331ffff0331000003310049
0331004905d4004905d400490470007f0211007e02c6001702e8001702c6
001702d6001b0510001704af001704af001704af001704af001704af0017
04af001704af001704af001704af001704af001705400017078a00170728
001707280017072800170728001707280017072800170728001707280017
0728001707280017044b0079044b0079044b0079044b0079044b005e044b
0079044b0079044b0079044b0079044b0079044b007903c9001605f60023
05f6002305f6002305f6002305f6002303ad002003ca001603ca001603ca
001603ca001603ca0016032e0045032e0045032e0003032e004503540066
037b005503a5005002bf003602f5005a0244003802f5003a02c7003a01d0
001c029c001802fb005a017a004f0184ffd902c0005a0176005a046c005a
02f9005a02f5003902f5005a02f5003a0200005a023a003c01fa001c02fb
005a02a50019041b002002a9002002a60017023a00340267000002840000
02a000000000fcfe0000fce3026800000284000002a000000000fcfe0000
fce20336000003690000039b00000000fc980000fc640336000003690000
039b00000000fc960000fc6501fc0000038e000003920000039600000000
fc6b0000fc6803510000030f0000036d0000038800000000fc890000fc6d
031f000003470000036e00000000fca10000fc7a03140000031c00000324
00000000fca80000fc9f029f000002a3000002a800000000fce20000fcde
02cf000002c2000002b5000003e3000004150000044500000000fc400000
fc0f01e2000001f7000001e2000001e200000000fd430000fd43026d0066
0000fd60028600660000fd5502020067022c000004d9001704d9ff72047c
008d0347008d049f002b03e7008d03e7fe9d03d30033050c008d050cfe7a
056900500222008d0222fe930222ff4f0460008d04c0001a06fe008d0545
008d03f0004d056900500569ff0f050c008d0442008d03c2004a03f6000c
042800100428fe4d04280010066900000468002106760077057200490572
fef30447000a0447000a0438008603120086040e0021038f0086038f0086
038f003e049c0086049c008604f6005502100086021000100210ff520405
0086041e00110648008604c700860393005704da005504da0055049c0086
03fd0086037a004e037b001b03cd000b03cd000b03cd000b05bb00000404
002605d8006e04e1005504e1005504ba004c04ba004c045d007e04520052
03bd000c0443000003a9004703a9004702ea0040045a007e045a007e045c
0050048f0004024a0079024a0000024aff7d024aff1d03d7007e03e40000
0482007e03c500160315003e031e0044044d0048044d004804a20020043e
0064045b0046034100490324000204630074046300740463007304630028
0598004205980044039b000905e7007605be004f05be004f028900000000
fd0403f400000000fc360224007d0224007d0224007d0235003602100054
0210005404d900170472008e047c008d0375008d0375008d0379008d0562
000a03e7008d03e7003f03e7004c06a9003a03db003e0537008d0537008d
0537008d0222008d0222ff4e02a600030481008d0481008d0508000a072a
000a06fe008d050c008d072c008d0569005005690050050a008d0442008d
043c004f03c8003f03f6000c046100080461000804e5001605ca00000468
00210543008d0507008d048e004d072d008d076a008d051d000c0663008d
046d008d044f0048044f004f074f008d049800400516000c050f000c051a
00000447000a041c0088043800860321008603210086033a008604b6000b
038f0086038f0024038f001e05d800310396004a04b0008604b0008604b0
0086021000860210ff5302690000040c0086040c00860461000306480086
049c008604da005504d700550497008603fd008603cb005a036f0043037b
001b03d6001703d60017045a001a054300000404002604ba008604900086
04320051066f008606960086049c001805d700860419008603e6005d03ee
0055068800860432004a048a001d0490001d0481000006430003066c0086
03f30047044200000443000003f5007e02d6007e02d6007e02f0007e01f7
ff6d04a80019044b004b0407004a0407004a0407004a05e50030036a003a
0474007e047400700474007e01f7006b01f7ff76020bffdb03f5007e03f5
007e043500140636001205b5004c045d007e065a007e044d004804490048
0446007e044b0079044b007e0359004803310049031e00090682007e03ca
001603ca001603f900160567004203ad0020047f007e044c007e03e80030
061b007e0650007e0477000905b2007e03f5007e037f003f0380004a0606
007e03fc002b046dfff90461fff90441001103a2000003a2000003a20000
0000fc950000fc95029b00e6029b009b029b009b03b5007303b5005303b5
0053040a0058026900cf02690091035e006d035500450210001702350036
023500a00223007d05b1007c0210006b021000170210006b02100017037b
0064037b001b037b0064037b001b02100017037b001b02c1005802c100a9
02c1005802c100a9044f0059044f0097044f0059044f009703700002033f
002003cd017003fc01870370001c033f003d0273003b0273003b03fcfff5
03fcfff5073e0083073e0083073e0083073e008303fcfff903fc00940224
007d0224007d027e006b027e00610299009d0299005702c0003602c00069
0259006d025900630277009202770065027e006b027e00610299009d0299
005702c0003602c0006903fc008603fc006003fc006103fc005604c80052
045d005703fc001e03fc003901de00790382007905a30000057600000841
000007300000074400000730000006ad009e06ad009e040e006905c30032
05d9004f02bd000003fc002104b6003c040e002003fc0049040e00520458
004c03fc00a903fc0044040e004c03fc0063044d0015040e001d03df002d
039f005503f8004f039f0054039f000506350039085e008d03fc001c073f
00860437001a04a8004e02de001903f2004f03f000430460001e03e9004f
0442006603be002f0440004d04420047040e0039040e0094040e0058040e
0055040e001a040e0060040e0054040e0051040e003d040e004204740058
02ad001c03a000510385004d03d30024038a005f03ce0058035f002503d4
003a03dc0046039f0037039f0079039f0050039f0053039f002d039f0062
039f0045039f0047039f0038039f003804a8004e02de001903f2004f03f0
00430444001e03e9004f0442006603be002f0440004d04420047040e0039
040e0094040e0058040e0055040e0024040e0060040e0054040e0051040e
003d040e0042032f003d0205001d02b4003e02b0003802ed002302b20043
02e4004b029d002e02ed003c02e4003602d7003b02d0003a02c7004b01c7
004d01c70047032f003d0205001d02b4003e02b0003802ed002302b20043
02e4004b029d002e02ed003c02e4003602d7003b02d0003a02c7004b01c7
004d01c7004702b5002f02050025027000300274002302750010026a0031
027a002a0261001d028b001e026e001b02b5002f02050025027000300274
002302750010026a0031027a002a0261001d028b001e026e001b02d8ff2e
032c003805870038059400380543003805940038055a00380592003805fa
004205fa0042059d003b05eb003b05e8003b0607002305b1004405e80044
0570002c05d50039087e0039057c004607ed004603fc003403fc003703fc
005403fc002203fc005303fc005403fc005103fc004403fc006603fc0045
03fc005503fc005603fc002f05e9002c0439002206b40059044c004c0301
000e03fcfffe049f002b057200490482007e064200530467005304450036
073e0092073e0087073e00b6073e00b606b7007606b7010806b7007606b7
01080a7b00920626007d0466002801da000001da00000466000004660000
0466ffdb0466ffde04660000046600000466000004660000046600000466
0000046600000466000004660000046600000466000004660000046601a8
04d9001704d9001704d9001704d9000504d9001704d9001704d9001704d9
001704d9001704d9001704d9001704d9001703e7008d03e7008d03e70047
03e7ffe803e7ffbd03e7ffdd03e7ffdd03e700460222002c022200880569
0050056900500569005005690050056900500569005005690050061e0050
05940050059400500594005005940050059400500539008c0539008c0617
008c0617008c0617008c0617008c0617008c0617008c0428001004280010
0428001003f3004703f3004703f3ffca03f3ff9a03f3ffca03f3ffc503f3
004703f3ffc503f3ffc903f3ffc803f3ffc503f300470407004a0407004a
040700300407ffdb0407ffb60407ffd90407ffd90407004a01f7001c01f7
006b044d0048044d0048044dfff2044dffd2044dffef044dfff2044d0048
051000480510004805100048051000480510004805100048044b0079044b
0079052e0079052e0079052e0079052e0079052e005e052e007903ca0016
03ca001603ca0016048d004b046600380447000a0447000a0447ffe80447
ffc30447ffe80447ffe80447000a0447fff10447fff20447fff20447ffef
0447000a038f0086038f0086038f0000038fffa8038fff83038fffa8038f
ffa8038f00410210001c0210007f04da005504da005504da003e04da0019
04da003e04da003804da0055058b0055058b0055058b0055058b0055058b
0055058b005504ac008404ac0084058a0084058a0084058a0084058a0084
058a0084058a008403cd000b03cd000b03cd000b01da0000046600000466
ffdb04660000046600000466000004660000046600000466000004c10066
0540008d0545008d0536008d04b5008604c3008604b5008603f6000c02c6
0017037b001b01f70008046f0019046f0019046f001906b6001906b60019
06b6001903130018030a007803160054036b007802b7007802920078037c
00550367007801b000780205002802f4007802670078049a007803920078
03a1005502f4007803a10055030d00780288003a02b0001e0378006e0313
001804a1002802c9001802ac0011025d001b0000fdfc0000fdfc0466010c
0466010c0466007e0466007e03c1000003c10000030c0000030c0000030c
0000030c0000022c0000022c000001ff000001ff000001ff000001ff0000
0000fcff0000fcff02aa006902aa006902aa009802aa009801ce000002aa
008202aa008202aa008202aa0082027f0050027f006a0324ffeb02910084
0466010c02aa001402aa0013033600000336000003140000030c0000038e
0000031f000003fcfff903fcfff9038e0000038e00000000fedd0000fe4a
0000fdfa0000fdfa0000fe290000fe290000fdae0000fdae01ce000002aa
00140291008302aa001502aa000002aa0000039a0000039a00000000fdfd
0000fdfd0000fd090000fd090000fd090000fd0902aa000002aa000003fc
fff90466007e02aa0098038e0000038e0000038e0000038e0000038e0000
038e000004010014040101470000000002aa000002aa000001ce000001ce
0000030c0000030c000002aa000002aa00c802aa00c803f100c801ce0000
01ce000001e2000001e2000002aa00a003b1008402aa000002aa0000075c
003c075c0000075c0000075c0000075c0000075c003f06d2000006d20000
075c0000075c0000075c004001df002001df002001e7002401e7002400f8
002f00f8002f02070022020700220209003702090037019d0028019d0028
020700230207002302090039020900390309003803090038015f003d015f
003d015200100152001001c3000601c3000601bf000801bf000803270025
0327002503270025032700250000ff9203bd0000041a0000041a00000416
ffe40416ffe4041a000b041a000b041a000b041a000b0401ffff0401ffff
0401ffff0401ffff015f003d02aa000001ce000003f100c8055800190472
008e049300140433003104db004f051d000f05e700190472003b03e7005b
0543005003f1005503acffd60573004904ba00110266008d026800110464
008d071c008c0545ffd605690050066a004f051e00190481008d03cf003f
03c2004a045c001903f6000c057200490539008c0465001003d3003303eb
003e03f10046040e004e08de008d0839008d0629008d056d008d07eb008d
0750008d04d900170222ff43056900500539008c0539008c0539008c0539
008c0539008c04d9001704d900170634ffd3052900490519004904600073
056900500569005003eb000008c5008d0839008d051900490714008d04e6
008d0545008d04d9ffed04d9001703e7ffcd03e700550222feac0222ff5c
0569003b056900500481ffbf04810078053900390539008c03eb003e050c
008d0523008d0439004603ec003304d9001703e7008d0569005005690050
05690050056900500428001004d9ffde0446ffda03850011040affab0382
003b0496000b055e000f04c0001a03e8ff9102c30003050f004f049d000f
04b4000704d90017047c008d047c008d047c008d043c004f050b008d050b
008d050b008d050b008d050b008d03e7007a03e7007a03e7008203e7003e
03e7008003ac008d05190049050c008d050c008d050c008d050c0015050c
008d0222ff460222ff7e0460008d0460008d0460008d0362008d03620035
036200600362006606fe008d06fe008d06fe008d0545008d0545008d0545
008d0545008d056900500569005005690050056900500442008d0442008d
0481008d0481008d0481008d0481008d03c8003f03c8003f03c8003f03c8
003f03c8003f03f6000c03f6000c03f6000c03f6000c0539008c0539008c
0539008c0539008c0539008c04bb001604bb00160740002b0740002b0468
0021046800210428001003d3003303d3003303d300330390002403e40012
046300110481008d0562008d04cc008d03f50033043c003003ac004903e9
008d04920029044b007e045ffffb03b60048044b004b0443004a0288fff8
066e007e044b007e03d7007e0281001b03e40005044b007e05870048044b
007e033a004602ed001702c60017041c0014032e004503d5003e03740026
0362003d0779004b0402007e0656007e03f3004701f7ff61044d0048044b
0079044b0079044b0079044b0079044b00790407005103f3004703f30047
063300470474ffde03cb001b03d70042044d0048044d004803a9001c020b
ff6b0779004b03cb001b044b007e03f3ffc003f300470407ffe30407004a
01f7fecf01f7ff73044dffee044d004802d8ff7402d80011044b0000044b
007903a9002a044b005104db004b041f0048033a004503f300470407004a
044d0048044d0048044d0048044d004803ca001602a4007804fc007e02cf
0017069d004b069f004b0362ffe103310049032e0045037a003b03fb0030
0260000502600005044b004b0308001003f2000c03910035040e00580325
003c021d009903d9009904b30098029b00e603f30047044b007e044b007e
044b007e03590048044b004b044b004b044b004b044b004b044b004b0407
004a0407004a0407004a040700480407004a0288001903cb001b044b007e
044b007e044b0067044bffff044b007e01f7ff3501f7ff3501f7ff6903d7
007e03d7007e03d7006b01f7007201f7ff6d01f7ff6d01f7ff620682007e
0682007e0682007e044b007e044b007e044b007e044b007e044d0048044d
0048044d0048044d0048044b007e044b007e02d8007e02d8007302d8000d
02d8fffa033100490331004903310049033100030331004902c6001702c6
001702c6ffde02c6ffde044b0079044b004d044b0079044b005a044b0079
03c9001603c9001605f6002305f6002303ad002003ad002003ca0016032e
0001032e0045032e0008044b007e02c6ffa805f6002303ca001603f30047
021100490290002403f3001a02f9ff970488007e042d007e033d004503f4
00170363003802ee0027034e007e0599004204f60005041c0088042b000a
03cb00400429005a049f0019054f0005041c0041038f006204d200550396
00540358ffd304bb0058042b00140278008602fcffed0405008606900082
04c7ffd304da00550622005504bb000504250086036f0045037a004e03d9
0005037b001b04e1005504ac008403f9000b038f003e038a004b038a0055
0385004108030086088f008d05b300860617008d06cf00860768008d0447
000a0210ff4704aa005504ac008404ac008404ac008404ac008404ac0084
0447000a0447000a055cffe2049c0058049c00580405004804da005504da
0055038a000008030086088f008d049c005806b3008604a0008604c70086
0447ffc50447000a038fff9d038f004d0210feb20210ff7004da000904da
00550425ff9a0425006904acfff704ac0084038a004b049c008604c30086
04060056038f003e0447000a038f008604da005504da005504da005504da
005503cd000b0447000a03cb005402fc0000037b001b033300320438001e
04ac00000435001b038f00180269000004ad00550425000003cdfff3039f
00500333001e023000a0040600a004a90064026900cf0447000a04380086
043800860438007803cb005a049100860491008604910086049100860491
0086038f0029038f002e038f0050038f001e038f004603580086049c0058
049c0086049c0086049c0086049c0009049c00860210ff3e0210ff550405
0086040500860405008602fc008602fc000002fc002802fc001e06480086
064800860648008604c7008604c7008604c7008604c7008604da005504da
005504da005504da005503fd008603fd008604250086042500860425005c
04250086036f0043036f0043036f002c036ffff7036f0043037b001b037b
001b037b001b037b001b04ac008404ac008404ac008404ac008404ac0084
0435001b0435001b068a002b068a002b040400260404002603cd000b038f
000f038f003e038f0038049c0086037b000a068a002b03cd000b0447000a
02fc00000355ff9c03fd000004250086052f0086044700860390003e03cb
00400358004e040a0086047f0019047f001904c40019047f0019046f0019
046f0019047f0019049600190496001906b5001906b5001906d6001906b5
001906b6001906b6001906b5001906d2001904ce001904ad001704af0017
04af001704af001704af001704af001704af001704af001704af00170727
001707280017072800170728001707280017072800170728001707280017
0728001703f3007d044b004b044c007f044b007e0363003803880048044b
004b0461004b040700510407005105240054036a0042036a003a044f003a
043700480255000c045e004b044a004b044a004803d4001203e0000c044b
0079044b007d044b007e026b0010026b0010024a007901f7007e03270013
033800130204007904ab007e06820079068200790682007e044bffc7044b
007e0468007e0449004805c1004805a700440598004202d8001d02d8001d
02d9001d02d8007e02d8007e02a0007902a0001603ea007e03ea007e0331
004901eeffc20246ffee01eeffc2029fffae02c6003802c6002604b10010
04ad00520441007403c9001605f6002303ca001603b4000e0338004503d5
004503a9002a03ae002a0382003b038200480382003b03590048052d0050
03f5007e0437004204540048045d007e02a4ffaf03d7001c033c007e0460
004b0382003b0382004806b4004b06fd004b075b004b0522001704060017
059f00170662001904f4007a04be007e0433002c03ef0057045dffd3045e
ffd30427000a0577ffda063300510425000a03bb005a0462008604620012
03600086036a003a01f7006a026d001c03e2008602fa002005b5004c0474
007e04a8005703bb0044048a004e0489004e0528000806be005203b90044
044d0048044d004803db008603f6003403f600860355001b04860082046f
004e05e300440497006204090019063b0026036e003e035c003a03310041
03f40012030c008603eb000a0475008603db008605a40072044a00180313
00180417000a030a00780327001e036b007802b7007802b70046037c0055
0367007801b000780205002802f4007802670078049a007803920078038d
007803a1005502f9004c02f40078030d007802b0001e0378006e04a10028
02bf003602ac004702f5003a042c003602f5005a02f5003a02c7003a02b8
002e027b003802770038029c0018017a004f02c0005a046c005a02f9005a
02f500390244002a02e6003902e6003902f5005a01fa001c02fb005a02db
0044046c005a02a5001902a7001c02f2005a027e001002dc003703d1004d
02c2002f017a004f0200005a02fb005a02a5001902f2005a027e001002ed
005203d1004d02c2002f069b007904df000e04da004b032d000e07730014
0552001404bc000703660014033d001403ec0014032d00140370001403cb
001b032d006403e2003606af0017026c0013029d00130474000104e20012
04d40012044b007e04ae004b02a8001905b5004b046b007e0247007306d7
007e04a0007e044b007e02d8007303ad0049036cffc203d30016042e0020
0352004504b8004704d2004b046a004b0411004a03880042036a003a0411
00510276006b0363003801eeffc204c80079038b004002e5004e02440038
026e003802e000390277003401d0001c01c1fffb029c001802fb005a01f7
001401b20052017a005c01f80014022d000001bc005c01b3005c0248005c
046c005a046c005a032c0000032c005a0322006402f5003903b70039023a
003c020a000c0213001c035700160330004102eb005202e4005202c10017
023a0034029e003402ca003402a200300316004002fb005a02fb005a0184
ffd90200005a01f60022020c002202b4005a041b002002a6001701c40035
034300280210006b021000170210006a01ce000001ce00000299004b0299
005e03fc004403fc0066044b0032044b0032025100000268000002670000
02510000032700000267000002680000023900980239009801ce000001ce
000002aa008202aa008202aa008202aa008202aa001e02aa009302aa0016
0176005a023a003c02a900200299005e0310009603100096031000960310
009603100096045700960457009604570096045700960310004304570043
04570043045700430457004304570043045700430457002f0457002f0457
002f0457002f0457002f0310002f04570025045700250457002504570025
045700250310001a0457001a0457001a0457001a0457001a0457001a0310
004204570042045700420457004204570042045700420457009604570096
045700960457009603100042045700420457004204570042045700420457
0042045700420457002f0457002f0457002f0457002f0457002f0310002f
0457002f0457002f0457002f0457002f0457002f03100026045700260457
002604570026045700260457002603100042045700420457004204570042
045700420457004204570096045700960457009604570096031000420457
004204570042045700420457004204570042031000260457002604570026
045700260457002604570026031000230457002304570023045700230457
0023045700230310002f0457002f0457002f0457002f0457002f0457002f
0310004b0457004b0457004b0457004b0457004b0457004b045700960457
009604570096045700960310004204570042045700420457004204570042
045700420310001a0457001a0457001a0457001a0457001a0457001a0310
002404570024045700240457002404570024045700240310002f0457002f
0457002f0457002f0457002f0457002f0310004e0457004e0457004e0457
004e0457004e0457004e0457009604570096045700960457009602aa0062
02aa006203360000049a0084037b001b02aa008502aa008502aa00c802aa
00c8029f00660267000003c1004703e30000038e0000023500a002aa0000
02aa000002aa009802aa00980440fff60440fff603020098032700000327
00000324000002aa0000071200d4071200d402bf003602b8003a02f50039
02a9002002c7003d01d9000001d9000001d9000001d90000028900000289
00000289000002890000038e0000038e0000032900000329000003290000
032900000324000003240000032900000329000003290000032900000324
ffff0324ffff03f4000003f4000003f4000003f400000324000003240000
031f00000314000001ff000001d90000031f0000031f0000031f0000031f
00000314000003140000031400000314000003f4000003f4000003f40000
03f40000027f006a027f006a05690050043c004f0456003a043c004f0456
003a042f0008042ffe46042f000803ac008d05690050046b000c05be008d
04cc000c0433004f0442008d044a0054039400480394003c04b8001204d7
002606c50019043a0060043efff00359004803630038035900480363002e
05a1004603920079044d004803c7000c04ee007e04d0000e03470049020b
ffdb045fffab04e4002604d7005503cb005a03cb004003cb005a03cb003d
040a001e040afe33040a001e0358008604c4005004540032055400860474
00370407005503fd008604d9ff9404d9fe4e04d9fe2604d9feed04d9ff9e
04d9fe5904d9fe3004d9feec04d9ff5004d9ff2604d9001704d9001704d9
001704d9ff9404d9fe5804d9fe3004d9feed04d9ff9404d9fe5904d9fe30
04d9feec06a4001706a4ff9406a4fe5806a4fe3006a4feed06a4ff9406a4
fe5906a4fe3006a4feec03e7feba04eafe7404eafe6c03e7feba04eafe74
04eafe6b03e7fe6703e7fe5d050cfeba060ffe74060ffe6d05c7fece050c
feba060ffe74060ffe6d05c7fecc050cfe68050cfe5c050c008d050cfeba
060ffe74060ffe6c05c7fecd050cfeba060ffe74060ffe6c05c7fecc06c2
008d06c2feba07c5fe7407c5fe6c077dfecd06c2feba07c5fe7407c5fe6c
077dfecc0222feba0325fe740325fe6d02ddfecd0222feba0325fe740325
fe6d0222fecc0222fe670222fe5d0222ff5b0222ff800569fede0636fe74
0636fe420569fede0636fe730636fe440569fe9b0569fe5e0442feba0428
fe620591fe740591fe9c0591ff230428fe000428fe1c0428001004280010
0572ff05063efe91063efe5a05f3fed50572fefc063efe91063efe5b05fa
fed40572feb10572fe7a057200490572ff05063efe7c063efe5005fafecf
0572fef1063efe7f063efe5005fafece074400490744ff050810fe7c0810
fe5007ccfecf0744fef10810fe7f0810fe5007ccfece04ba004c04ba004c
04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba
004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c
04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba
004c03a9004703a9004703a9004503a9004703a9004703a9004703a90047
03a90047045a007e045a007e045a007e045a007e045a007e045a007e045a
007e045a007e045a007e045a007e045a005d045a007e045a007e045a007e
045a007e045a007e045a007e045a007e045a007e045a007e045a007e045a
007e045a005d024a000b024aff86024aff83024aff6c024a000a024aff86
024aff86024aff69024aff14024aff14024aff60024affef024aff7b024a
ff32024aff69024aff68044d0048044d0048044d0048044d0048044d0048
044d0048044d0048044d0048043e0064043e006404630074046300740463
007404630074046300740463007404630074046300740463000804630009
04630074046300740463007404630053046300710463007405be004f05be
004f05be004f05be004f05be004f05be004f05be004f05be004f05be004f
05be004f05be004f05be004f05be004f05be004f05be004f05be004f05be
004f05be004f05be004f05be004f05be004f05be004f05be004f0447000a
0447000a0447000a0447000a0447000a0447000a0447000a0447000a0447
000a0447000a0447000a0447000a0447000a0447000a0447000a0447000a
0447000a0447000a0447000a0447000a0447000a0447000a060c000a0616
000a0616000a0616000a0616000a0616000a0616000a0616000a0616000a
038f0086038f0059038f0041038f0086038f0059038f0041038f0086038f
006f049c0086049c0086049c0086049c0086049c0086049c0086049c0086
049c0086049c0086049c0086049c0086049c0086049c0086049c0086049c
0086049c0086049c0086049c0086049c0086049c0086064a008606590086
065900860659008606590086065900860659008606590086065900860210
00250210ff8b0210ff720210ff7b0210001a0210ff8b0210ff720210ff70
0210ff0e0210ff0f0210ff77021000090210ffa00210ff420210ff660210
ff7b04da005504da005504da005504da005504da005504da005504da0055
04da005503fd008603fd008603cd000b040a001e03cd000b040a001e03cd
000b040a001e03cd000b040a001e03cd000b040a001e03cd000b040a001e
03cd000b040a001e03cd000b040a001e03cd000b040a001e03cd000b040a
001e03cd000b040a001e03cd000b040a001e03cd000b040a001e04e10055
04e1005504e1005504e1005504e1005504e1005504e1005504e1005504e1
005504e1005504e1005504e1005504e1005504e1005504e1005504e10055
04e1005504e1005504e1005504e100550696005506a0005506a0005506a0
005506a0005506a0005506a0005506a0005506a0005504d9001704d9ff94
04d9fe5804d9fe3004d9feed04d9ff9404d9fe5904d9fe3004d9feec050c
008d050cfeba060ffe74060ffe6c05c7fecd050cfeba060ffe74060ffe6c
05c7fecc057200490572ff05063efe7c063efe500572fe470572fef1063e
fe7f063efe500572fe4606a4001706a4ff9406a4fe5806a4fe3006a4feed
06a4ff9406a4fe5906a4fe3006a4feec06c2008d06c2feba07c5fe7407c5
fe6c077dfecd06c2feba07c5fe7407c5fe6c077dfecc074400490744ff05
0810fe7c0810fe5007ccfecf0744fef10810fe7f0810fe5007ccfece01d9
000001d900000289000002890000039a0000032900000329000003240000
03290000032900000324ffff03f4000003f400000324000001d90000031f
0000031400000232009d01ef009d01ef009d01ef009d0588008d048b000f
0442008d03870010046f008d071a003a03db003e04f4008d04b3008d049c
0010052b000c0562008d05d2008d0758008d05470050043c004f03f6000c
042800100428001004d700210605000c04cb004d048e004d048e008d063d
001e063d001e0222008d06a9003a04ac008d0558000a050c008d055d008d
048e004d074f008d04d9001704d900170634ffd303e70045054300500543
005006a9003a03db000b03eb003e0537008d0537008d0569005005690050
05690050044f0026046100080461000804610008048e004d036a008d0663
008d0387001004c7002004680021046d00280689003c0600002904360029
0710000a0714008d052600490513000c03f100550544000a04b6007e0407
000c044b007e0306001003a7007e063e0030036a003a044b007e043b007e
04170010048d000c0494007e04f5007e05f4007e0483004803590048031d
000903cf001003cf00100402002004e60009043e004e0406004e0406007e
050500160505001605e500300410007e04770014045c007e049e007e0406
004e05e1000f0222008d03f3000d03f30047063300470407003504070051
0407005105e50030036afffd03a9002a0474007e0474007e044d0048044d
0048044d0048037ffffb03ca001603ca001603ca001603e8002602d6007e
05b2007e0306001003fe002003ad0020044b004b063b004b0573002a03ca
002a063000140657007e045d004804850009036a0042046e001404f90086
0419000003fd00860321ffff04420086062200310396004a04380086043e
0086040c000004a9001b04d0008605390086068e008604d1005503cb005a
037b001b03cd000b03cd000b045a0026054f00190465005104320051045c
008605e1002005e100200210008605d800310440008604aa0003049c0086
04e6008604320051069300860447000a0447000a058fffe2038f004e04c7
005004c7005005d8003103960003038a004b04b0008604b0008604da0055
04d7005504d7005503e6001e03d6001703d6001703d600170432004e0321
008605d7008603210000045b0026040400260419003805fc00380580004a
0417004a063400030670008604c400580486001b03960053049200030400
000008000000040000000800000002af00000200000001550000040e0000
01bc00000199000001000000000000000000ffdc0000ff25040e0024040e
002403d9009903fefff90210006a037b006401b700280343002804c50028
04b200e603fcfffa0290003a052b0050045a004f043c004f03b60010040e
00600682007e05830020075c008d061b008d0799002c061d0098047c0012
03f6000c08ee001e047dfffb04bb002004e1004904fa002804270024043c
004f0635003906210034057800e6059d00e603fc0053070100bc03fc0056
045201d7045200be0400fff6040001bd040001bd0400fff6040001bd0400
fff60711008a045d003f047c008d040e003f04a60016055800560407000e
0682007904390048042bfffc035c003503ce000604510059033a00100327
000003270000032700000254000002540000025400000254000002aaff65
02aaff6504e0004607f4000a07e2fff70798ffe307920056063f008d0535
000a0728002905d2002007a8008d03f2000a0676007704e5001608ca0050
05b9005007920056079200560424004f05c100230539007e0495000e064f
007e0502001c06ba007e0366000c05e7007603f9ffd307a8004804b00048
065c004b05c100230342004906c3005505f600860497000a066300860552
003107000086038c000a05d8006e0470001a087a00550527005506c30055
06c3005503cb005a03c7009602aa00cf040e005b0000ffdc0000fe5101cf
0000025900a501c70000017a004f030cff4b0aa000b404d5009202d50083
02d5008304d500b202d500700aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40000fc48000000000000fd17
0000000000000000039a0000039a0000032400000324000003240000039a
0000032400000324000002560000032900000329000003bd000002aaff65
055001c4027f006303240000039a0000025600000289001e000000d40000
00de0284001e032400000324000003240000032400000324000003240000
032400000324000003240000032400000000000000000000000000000000
0000039a0000039a0000036d00000000000004150000031c0000036d0000
036d00000392000003470000034700000392000003920000035400000369
0000000000840000003f0000fffa00000075000000750000007500000075
000000750594fe6e0594fe910594ff15042ffe04042ffe15042f0008042f
00080447000a0447000a0447000a060c000a060c000a060c000a049c0086
049c0086049c0086064a0086064a0086064a008603cdffec03cdffec03cd
000b04e1005504e1005504e1005506a0005506a0005506a000550000fd7a
0000fd4f0000fd5a0000fd5a0000fbfe0000fc010000fbdc0000fbda0000
fbfe0000fbfc0000fbfe0000fbfc0000fbff0000fbff0000fc000000fc00
0000fc000000fc000000fbfd0000fbfd0000fda80000fc2e0000fc2e0000
fd0a0000fd0a0000fc7d0000fc7e0000fbe30000fbe30000fcac0000fcac
0000fcaa0000fca90000fd4f0000fd4f0000fd340000fd340000fd330000
fd330000fd470000fd470000fd760000fd760000fd450000fd600000fd60
0000fd600000fd600000fd340000fd6d0000fc8a0000fd6e0000fd0a0000
fcf10000fcf10000fc970000fc990000fca90000fca90000fc700000fca3
0000fc2e0000fc2f0000fc6d0000fc6d0000fd530000fcf10000fd6d0000
fcf30000fcde0000fcde0000fc660000fc650000fcdd0000fcdd0000fc2e
0000fc7e0000fd760000fc700000fc700000fc6b0000fc6b0000fc700000
fc710000fc460000fd7a0000fced0000fce70000fd450000fd450000fca8
0000fca80000fcde0000fd9f0000fdaf0000fcfb0000fd530000fd530000
fd420000fd420000fd7e0000fcde0000fcde0000fcde0000fc8f0000fc53
0000fc530000fc530000fc530000fc920000fc980000fc980000fc530000
fc530000fcbf0000fd650000fd650000fd620000fd620000fde60000fde6
0000fd510000fd510000fd630000fd630000fd800000fd7f0000fd510000
fd510000fd6a0000fd6a0000fce90000fce90000fdc00000fdc00000fd8a
0000fd8a0000fd570000fd570000fd5b0000fd5b0000fcc30000fcc30000
fcc30000fcc30000fc720000fc3c0000fc3c0000fc010000fc010000fc4e
0000fc4e0000fc130000fc130000fc0e0000fc0e0000fc4a0000fc4a0000
fdb50000fcd10000fd9f0000fcf60000fd4c0000fd4c0000fd470000fd47
0000fd2f0000fd2f0000fccd0000fccd0000fc700000fc710000fcb20000
fcb20000fc960000fc970000fca50000fca50000fcb20000fcb20000fc96
0000fc950000fc9f0000fc9f0000fc380000fc380000fc380000fc380000
fc9f0000fc9f0000fca30000fca90000fd470000fd4c0000fca40000fca4
0000fca40000fca40000fca90000fca80000fcaa0000fcaa0000fc380000
fc380000fc380000fc380000fd6d0000fd6d0000fc9f0000fca40000fca4
0000fd050000fd050000fd0d0000fd0d0000fc430000fc43042ffe62040a
000a040a000a040a001e01f70072044b004b044b004b044b004b044b004b
046f001906b600190aa000b40aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40495008d040e001800340015002b
000000>
<000000000000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c000002c2000002c2000002c2000002c2000002c2
000002c2000002c2000002c2000002c2000002c2000002c2000002c20000
02c2000002c2000002c2000002c2000002c2000002c2000002c2000002c2
000002c2000002c2000002c2000003600000036000000360000003600000
036000000360000003600000036000000360000003600000036000000360
000003600000036000000360000003600000036000000360000003600000
036000000360000003600000036000000360000003600000036000000360
000003600000036000000360000003600000036000000360000003600000
036000000360000003600000036000000360000003600000036000000360
000003600000036000000360000003600000036000000360000003600000
036000000360000003600000036000000360000004940000049400000494
000004940000049400000494000004940000049400000494000004940000
049400000494000004940000049400000494000004940000049400000494
000004940000049400000494000004940000049400000494000004940000
049400000494000004940000049400000494000004940000049400000494
000004940000049400000494000004940000049400000494000004940000
049400000494000004940000049400000494000004940000049400000494
000004940000049400000494000004940000049400000494000004940000
049400000494000004940000049400000494000004940000049400000494
000004940000049400000494000004940000049400000494000004940000
049400000494000004940000049400000494000004940000049400000494
000004940000049400000494000004940000049400000494000004940000
049400000494000004940000049400000494000004940000049400000494
000004940000049400000494000004940000049400000494000004940000
049400000494000004940000049400000494000004940000049400000494
000004940000049400000494000004940000049400000494000004940000
049400000494000004940000049400000494000004940000049400000494
000004940000049400000494000004940000049400000494000004940000
049400000494000004940000049400000494000004940000049400000494
000004940000049400000494000004940000066c0000066c0000066c0000
066c0000066c0000066c0000066c0000066c0000066c0000066c0000066c
0000066c0000066c0000066c0000066c0000066c0000066c0000066c0000
066c0000066c0000066c0000066c0000066c0000066c000007a4000007a4
000007a4000007a40000093c0000093c0000093c0000093c0000093c0000
093c0000093c0000093c0000093c0000093c0000093c0000093c0000093c
0000093c0000093c0000093c0000093c0000093c0000093c0000093c0000
093c0000093c0000093c0000093c0000093c0000093c0000093c0000093c
0000093c0000093c0000093c0000093c0000093c0000093c0000093c0000
093c0000093c0000093c0000093c0000093c0000093c0000093c0000093c
0000093c0000093c0000093c0000093c0000093c0000093c0000093c0000
0b4800000b4800000b4800000b4800000b4800000b4800000b4800000b48
00000b4800000b4800000c4400000c4400000c4400000cee00000cee0000
0cee00000cee00000cee00000cee00000cee00000cee00000cee00000cee
00000cee00000cee00000cee00000cee00000cee00000cee00000cee0000
0cee00000cee00000cee00000cee00000cee00000cee00000cee00000e72
00000f8000000f8000000f8000000f8000000f8000000f8000000f800000
106600001066000010660000106600001066000010660000106600001066
000010660000106600001066000010660000106600001066000010660000
106600001066000010660000106600001066000010660000106600001066
000010660000106600001066000010660000106600001066000011940000
119400001194000011940000119400001194000011940000119400001194
000011940000119400001194000011940000119400001194000011940000
119400001194000011940000119400001194000011940000119400001194
000011940000119400001194000011940000119400001194000011940000
119400001194000011940000119400001194000011940000119400001274
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da000013da000013da000013da000013da000013da
000013da000013da000013da000013da000013da000013da000013da0000
13da000013da000013da0000146a000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000014fa000014fa000014fa000014fa000014fa
000014fa000014fa000014fa000014fa000014fa000014fa000014fa0000
14fa000014fa000014fa000100000f270120001000bd000700020010002f
006000000c63159c000400010000000e00ae000000030000000000640000
0000000300000007007600640001000000000000003200da000100000000
00030013010c00010000000000040013011f000100000000000600130132
0001000000000007003b0145000300010409000000640180000300010409
0001001c01e40003000104090002000e020000030001040900030026020e
00030001040900040026023400030001040900060026025a000300010409
00070076028000a9002000320030003100340020004d006900630072006f
0073006f0066007400200043006f00720070006f0072006100740069006f
006e002e00200041006c006c002000520069006700680074007300200052
0065007300650072007600650064002e00430061006c0069006200720069
00200069007300200061002000740072006100640065006d00610072006b
0020006f006600200074006800650020004d006900630072006f0073006f
00660074002000670072006f007500700020006f006600200063006f006d
00700061006e006900650073002ea92032303134204d6963726f736f6674
20436f72706f726174696f6e2e20416c6c20526967687473205265736572
7665642e4147504c44442b43616c696272692d426f6c644147504c44442b
43616c696272692d426f6c644147504c44442b43616c696272692d426f6c
6443616c6962726920697320612074726164656d61726b206f6620746865
204d6963726f736f66742067726f7570206f6620636f6d70616e6965732e
00a9002000320030003100340020004d006900630072006f0073006f0066
007400200043006f00720070006f0072006100740069006f006e002e0020
0041006c006c002000520069006700680074007300200052006500730065
0072007600650064002e004100470050004c00440044002b00430061006c
00690062007200690052006500670075006c00610072004100470050004c
00440044002b00430061006c0069006200720069002d0042006f006c0064
004100470050004c00440044002b00430061006c0069006200720069002d
0042006f006c0064004100470050004c00440044002b00430061006c0069
006200720069002d0042006f006c006400430061006c0069006200720069
00200069007300200061002000740072006100640065006d00610072006b
0020006f006600200074006800650020004d006900630072006f0073006f
00660074002000670072006f007500700020006f006600200063006f006d
00700061006e006900650073002eb10903b802f9b21e1d1fb802f8b21e2b
1fb802f7b21e2c1fb802f6b21e2c1fb802f5b21e2c1fb802f4b21e2b1fb8
02f3b21e2c1fb802f2b21e2c1fb802f1b21e2c1fb802f0b21e2c1fb802ef
b21e2c1fb802eeb21e2b1fb802edb21e2b1fb802ecb21e2c1fb802ebb21e
2c1fb802eab21e2c1fb802e9b21e2c1fb802e8b21e2c1fb802e7b21e2c1f
b802e6b21e2c1fb802e5b21e2c1fb802e4b21e091fb802e3b21e2c1fb802
e2b21e2c1fb802e1b21d121fb802e0b21d191fb802dfb21d2f1fb802deb2
1d2f1fb802ddb21d2f1fb802dcb21d2f1fb802dbb21d191fb802dab21d2f
1fb802d9b21d2f1fb802d8b21d2f1fb802d7b21d2f1fb802d6b21d2f1fb8
02d5b21d2f1fb802d4b21d2f1fb802d3b21d2f1fb802d2b21d2f1fb802d1
b21d2f1fb802d0b21d2f1fb802cfb21d2f1fb802ceb21d121fb802cdb21d
121fb802ccb21d121fb802cbb21d121fb802cab21d191fb802c9b21d2f1f
b802c8b21d2f1fb802c7b21d2f1fb802c6b21d2f1fb802c5b21d2f1fb802
c4b21d2f1fb802c3b21d2f1fb802c2b21d2f1fb802c1b21d2f1fb802c0b2
1d2f1fb802bfb21d121fb802beb21d121fb802bdb21d2f1fb802bcb21d2f
1fb802bbb21d2f1fb802bab21d2f1fb802b9b21d2f1fb802b8b21d2f1fb8
02b7b21d2f1fb802b6b21d2f1fb802b5b21d2f1fb802b4b21d2f1fb802b3
b21d2f1fb802b2b21d2f1fb802b1b21c321fb802b0b21c321fb802afb21c
331fb802aeb21c331fb802adb21c331fb802acb21c331fb802abb21c331f
b802aab21c311fb802a9b21c311fb802a8b21c321fb802a7b21c321fb802
a6b21c321fb802a5b21c321fb802a4b21c321fb802a3b21c321fb802a2b2
1c331fb802a1b21c331fb802a0b21c331fb8029fb21c331fb8029eb21c33
1fb8029db21c331fb8029cb21c311fb8029bb21c311fb8029ab21c321fb8
0299b21c321fb80298b21c321fb80297b21c321fb80296b21c321fb80295
b21c331fb80294b21c331fb80293b21c331fb80292b21c331fb80291b21c
331fb80290b21c331fb8028fb21c331fb8028eb21c311fb8028db21c321f
b8028cb21c321fb8028bb21c321fb8028ab21c321fb80289b21c321fb802
88b21c331fb80287b21c331fb80286b21c331fb80285b21c331fb80284b2
1c331fb80283b21c331fb80282b21b341fb80281b21b341fb80280b21b34
1fb8027fb21b341fb8027eb21b341fb8027db21b341fb8027cb21b341fb8
027bb21b341fb8027ab21b341fb80279b21b341fb80278b21b341fb80277
b21b341fb80276b21b341fb80275b21b341fb80274b21b341fb80273b21b
341fb80272b21b341fb80271b21b341fb80270b21b341fb8026fb21a351f
b8026eb21a351fb8026db21a351fb8026cb21a351fb8026bb21a351fb802
6ab21a351fb80269b21a351fb80268b21a351fb80267b21a351fb80266b2
1a351fb80265b21a351fb80264b21a351fb80263b21a351fb80262b21a35
1fb80261b21a351fb80260b21a351fb8025fb21a351fb8025eb21a351fb8
025db21a351fb8025cb21a351fb8025bb21a351fb8025ab21a351fb80259
b219371fb80258b219371fb80257b219371fb80256b219371fb80255b219
371fb80254b219371fb80253b219371fb80252b219371fb80251b219371f
b80250b219371fb8024fb219371fb8024eb219371fb8024db219371fb802
4cb219371fb8024bb219371fb8024ab219371fb80249b219371fb80248b2
19371fb80247b219371fb80246b219371fb80245b219371fb80244b21937
1fb80243b219371fb80242b219371fb80241b219371fb80240b219371fb8
023fb219371fb8023eb219371fb8023db219371fb8023cb219371fb8023b
b219371fb8023ab219371fb80239b218391fb80238b218391fb80237b218
391fb80236b218391fb80235b218391fb80234b218391fb80233b218391f
b80232b218391fb80231b218391fb80230b218391fb80301b2182e1fb802
2fb218391fb8022eb218391fb8022db218391fb8022cb218391fb8022bb2
18391fb8022ab218391fb80229b218391fb80228b218391fb80227b21839
1fb80226b218391fb80225b2173b1fb80224b2173b1fb80223b217321fb8
0222b2173a1fb80221b2173b1fb80220b2173b1fb8021fb2173b1fb8021e
b2173b1fb8021db2173b1fb8021cb2173b1fb8021bb2173b1fb8021ab217
3b1fb80219b2173b1fb80218b2173b1fb80217b2173b1fb80216b2173b1f
b80215b217321fb80214b2173a1fb80213b2173b1fb80212b2173b1fb802
11b2173b1fb80210b2173b1fb8020fb2173b1fb8020eb2173b1fb8020db2
173b1fb8020cb2173b1fb8020bb2173b1fb8020ab2173b1fb80209b21732
1fb80208b217321fb80207b2173b1fb80206b2173b1fb80205b2173b1fb8
0204b2173b1fb80203b2173b1fb80202b2173b1fb80201b2173b1fb80200
b2173b1fb801ffb2173b1fb801feb2173b1fb801fdb2173b1fb801fcb217
3b1fb801fbb2173b1fb801fab2173b1fb801f9b2173b1fb801f8b2173b1f
b801f7b217321fb801f6b2173a1fb801f5b2173b1fb801f4b2173b1fb801
f3b2173b1fb801f2b2173b1fb801f1b2173b1fb801f0b2173b1fb801efb2
173b1fb801eeb2173b1fb801edb2173b1fb801ecb2173b1fb801ebb2173b
1fb801eab2173b1fb801e9b2173b1fb801e8b2173b1fb801e7b217321fb8
01e6b216231fb801e5b216231fb801e4b216371fb801e3b216371fb801e2
b216381fb801e1b216381fb801e0b216431fb801dfb216441fb801deb216
441fb801ddb216441fb801dcb216451fb801dbb216461fb801dab216461f
b801d9b216461fb801d8b216231fb801d7b216231fb801d6b216381fb801
d5b216431fb801d4b216431fb801d3b216431fb801d2b216441fb801d1b2
16461fb801d0b216461fb801cfb216461fb801ceb216461fb801cdb21646
1fb801ccb216461fb801cbb216431fb801cab216231fb801c9b216231fb8
01c8b216371fb801c7b216371fb801c6b216381fb801c5b216421fb801c4
b216431fb801c3b216441fb801c2b216451fb801c1b216461fb801c0b216
461fb801bfb216461fb801beb216461fb801bdb216461fb801bcb216461f
b801bbb216461fb801bab216371fb801b9b216381fb801b8b216421fb801
b7b216431fb801b6b216431fb801b5b216431fb801b4b216441fb801b3b2
16441fb801b2b216441fb801b1b216451fb801b0b216451fb801afb21645
1fb801aeb216461fb801adb216461fb801acb216461fb801abb216461fb8
01aab216461fb801a9b215341fb801a8b215411fb801a7b215411fb801a6
b2154d1fb801a5b2154e1fb801a4b2154f1fb801a3b215521fb801a2b215
401fb801a1b2154d1fb801a0b2154e1fb8019fb2154f1fb8019eb215521f
b8019db2154d1fb8019cb215401fb8019bb2154d1fb8019ab2154e1fb801
99b2154e1fb80198b2154f1fb80197b2154f1fb80196b215501fb80195b2
15521fb80194b215521fb80193b215521fb80192b215411fb80191b2154f
1fb80190b215501fb8018fb215501fb8018eb215511fb8018db215521fb8
018cb215521fb8018bb215521fb8018ab214581fb80189b214591fb80188
b2145c1fb80187b2145d1fb80186b2144a1fb80185b2145b1fb80184b214
5c1fb80183b214591fb80182b2145d1fb8018140af145d1ff00f451fef0e
481fe00c4e1fc20c4e1fc10c4e1fc00c4e1fbf0b561fb20b561fb10b561f
b00b561faf0b561fae0b561fad0b561fac0b561fab0b561faa0b561fa90b
561fa80b561fa70b561fa60b561fa50b561fa40b561fa30b561fa20b561f
a10b561fa00b561f9f0b561f9e0a681f9a0a681f990a681f980a681f970a
681f960a681f950a681f940a681f930a681f920a681f910a681f9009681f
8f09681f8e09681f8d09681f8c09681f410902fc02fa0056001f02fb02fa
0068001f017fb213321fb8017eb212371fb80174b212371fb80173b21142
1fb80172b211421fb80171b211421fb80170b211421fb8016fb211421fb8
016eb211421fb8016db211421fb8016cb211421fb8016bb211421fb8016a
b211421fb8013cb211421fb8013bb210421fb8013ab210421fb80139b210
421fb80138b210421fb80137b210421fb80136b210421fb80135b210421f
b80134b210421fb80133b210421fb80132b20f451fb80131b20f451fb801
30b20f451fb80112b20f451fb80111b20f451fb80110b20f451fb8010fb2
0f451fb8010eb20f451fb8010db20e481fb8010cb20e481fb8010bb20e48
1fb8010ab20e481fb80109b20e481fb80108b20e481fb80107b20d4a1fb8
0106405b0d4a1fee0d4a1fed0d4a1fec0d4a1feb0d4a1fea0d4a1fe90c4e
1fdf0c4e1fde0c4e1fdd0c4e1fdc0c4e1fdb0c4e1fda0c4e1fd90b561fd8
0b561fd70b561fbe0b561fbd0b561fbc0b561fbb0b561fba0b561f9d0a68
1f9c0a681fb80180b213321fb8017ab211401fb80179b211421fb80178b2
11421fb80177b211421fb80176b211421fb80175b211421fb80143b21142
1fb80142b210421fb80141b210421fb80140b210421fb8013fb210421fb8
013eb210421fb8013db20f451fb80115b20f451fb80114b20f451fb80113
b20f451fb903030302b2401fa4be030200b4030200c4030200030300b213
321fb8017bb213321fb80153b212371fb80152b211401fb80151b211401f
b80150b211401fb8014fb211401fb8014eb211401fb8014db211401fb801
4cb211401fb8014bb211401fb8014ab211401fb80149b211401fb80148b2
11401fb80147b211401fb80146b211401fb80145b211401fb80144b21140
1fb80122b211401fb80121b210421fb80120b210421fb8011fb210421fb8
011eb210421fb8011db210421fb8011cb210421fb8011bb210421fb8011a
b210421fb80119b210421fb80118b20f451fb80117b20f451fb80116409b
0f451ffd0f451ffc0f451ffb0f451ffa0f451ff90e481ff80e481ff70e48
1ff60e481ff50e481ff40e481ff30d4a1ff20d4a1ff10d4a1fe70d4a1fe6
0d4a1fe50d4a1fe40d4a1fe30d4a1fe20d4a1fe10c4e1fcd0c4e1fcc0c4e
1fcb0c4e1fca0c4e1fc90c4e1fc80c4e1fc70c4e1fc60c4e1fc50c4e1fc4
0c4e1fc30c4e1fb80c4e1fb70b561fb60b561fb50b561fb40b561fb30b56
1f9b0a681fb802fdb212371fb8017db212371fb8017cb212371fb80169b2
112e1fb80168b2112e1fb80167b211401fb80166b211401fb80165b21140
1fb80164b211401fb80163b211401fb80162b211401fb80161b211401fb8
0160b211401fb8015fb211401fb8015eb211401fb8015db211401fb8015c
b211401fb8015bb211401fb8015ab211401fb80159b211401fb80158b211
401fb80157b211401fb80156b211401fb80155b211401fb80154b211401f
b8012fb211401fb8012eb210421fb8012db210421fb8012cb210421fb801
2bb210421fb8012ab210421fb80129b210421fb80128b210421fb80127b2
10421fb80126b210421fb80125b20f451fb80124b20f451fb80123b20f45
1fb80105b20f451fb80104b20f451fb80103b20f451fb80102b20f451fb8
0101b20e481fb8010040a20e481fff0e481ffe0e481fe80c4e1fd60c4e1f
d50c4e1fd40c4e1fd30c4e1fd20c4e1fd10c4e1fd00c4e1fcf0c4e1fce0b
561fb90b561f8503251f84032e1f83012e1f8248805581ab80557f487d55
7eab7d550b7d3b7d4b7d030b7d1b7d4b7d7b7dab7ddb7d067c487a557bab
7a55047a147a020a7948775578ab77550b77010c764875555475e475f475
0314755475647574759475d475e47507a475b475c47503b8ffc040127538
3b46807590750214757475020075010fb8ffc04021750b0e467448725573
ab725504723472023bf47201e07201023072015072607202b8ffc0b37224
2846b8ffc0403572161a461072307240720371486f5570ab6f554f6f6f6f
7f6f9f6fbf6f057f6f8f6f02af6fbf6f02406f090d466e486d55df6d0100
bc02ff001002ff00c002ffb2030a6fbb02fe000100ef02fe40ff016b032e
1f6a03251f692e675568ab6755662e645565ab6455632e6255612e60555f
2e5d555eab5d555c2e5a555bab5a55592e58555703251f562e545555ab54
55532e515552ab51554f2e4e554e03251f4d2e4b554cab4b554a2e485549
ab4855504801472e46554503361f001f01001e01001e701e801ef01e040b
601d701d02701de01df01d03701cf01c027f1b010f1a7f1a8f1a030f1a8f
1a020f1a8f1a020f191f198f199f19af19050f198f199f19030c70128012
02701180110230114011d011e011040011a011020f8f0f9f0faf0f034f0f
5f0fef0fff0f04af0f01af0ebf0ecf0e034f0e5f0e6f0e030f0eaf0ebf0e
0310400e2e31460f0d1f0d40472f0d033c2f0d3f0d4f0d038f0d01400d2e
3246400d2427463f0c4f0c5f0c039f0c01400c262946ef0aff0a02400a24
2746ef09ff0902ff09010003012001010001100120010308b8ffc0b30115
1f46b80100b316010501b80190b154532b2b4bb807ff524bb008505bb001
88b02553b00188b040515ab00688b000555a5b58b101018e59b101024354
b0144b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb08053
58b0401d594bb0ff5358b0001db1160042592b5e73757373742b732b7374
2b2b73745e732b5e7374757374755e73747573015e737473747575747374
5e737473002b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b73745e73732b2b7374752b2b732b2b73755f75755e732b2b2b5e7373
732b7374752b5e732b2b5e732b2b73742b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[5371 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 706 62 <0001008d000003540514001a004bb10102435558b900150294400b00090f
5215180b0f014c15b8015db240065400183f1a4ded2b3f012fcded31301b
40090f5215180b0f014c15b8015db240065400183f1a4ded2b3f31305925
140e02232122263511343e0233321e02151121321e020354050a0f0afdaf
212d0d1e332627321e0d01970a0f0a056e1e291b0c272c04970a100a0606
0a100afbef0b1929>ONKBAA+Calibri-Bold AddT42Char 
2 864 116 <0001002bfffa07140514003c007fb1010243555840092f0a0c003c30300c
32b8024d400a3c0c17180d2523230c22b80295401240180c37522a523023
0b03121d521255055500183f3f3f1217393f3f01192f18d41a4ded123919
2f393912391810d4ed1239192f123912393931301b400f37522a5230230b
03121d521255055500183f3f3f1217393f3f313059250e0323222e022703
23030e0323222e0227012626363633321e02171333133e0333321e021713
33133e0333321616060705df06152a42333945281205cf02c40512274337
3a45281206feda09021939332f371c0a03e301ec040d1f362d30391f0e04
f402e3030a1c342f2c3116030943181d0f05050f1d180334fccc171d1005
050f1d18046924291605030b1513fc2103d813180d05040d1814fc2803dc
10170d0505162b25>ONKBAA+Calibri-Bold AddT42Char 
2 1644 282 <0002004bffe903cc056d002600390095b10102435558b20b1b39bb025e00
00002f0272400a1321460b39271b040e2ab8ffe8b40b0f014c2ab8014940
09184a34180b0f014c34b80149b4400e4d054c00183f3f1a4ded2b3fed2b
1217393f012fedd4ed323931301b400921460b39271b040e2ab8ffe8b40b
0f014c2ab801494009184a34180b0f014c34b80149b4400e4d054c00183f
3f1a4ded2b3fed2b1217393f31305925140e0223222e023535060623222e
0235343e023332161711343e0233321e021503262623220e0215141e0233
323e023703cc0a18291e2028190b45975c668d59283362925f4b7a3c0b1d
302525301c0cfa36633631472b15122944341a31333620220b0f0a04040a
0f0b634a524f86b36377be86483d3b01e30a100b06060b100afd34444831
526535386a53320f22372800>ONKBAA+Calibri-Bold AddT42Char 
2 1956 286 <0002004affe903b603d7002b00340105b10102435558b31313212cb80243
b22b3404b80272400a21032c132c021b2cc304b8ffc040170d014d000410
04024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ffe84020
0d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d09f940
1c4d00183f1a4dfd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed5e5d
012fed32dded12392f31301b4009032c132c021b2cc304b8ffc040170d01
4d00041004024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8
ffe840200d014d2fe4264a18f6000e100e0211030e09180c014d09180f01
4d09f9401c4d00183f1a4dfd2b2bd45f5e5ded3fed2b2b12392f5d715e5d
2bed5e5d3130590114062321141e0233323e0233321e0215140e0623222e
0235343e0233321e021527362623220e020703b62924fde11b3b5d414264
49300f090c08030204080d3a5a744277b3783b3e76a96a709f6630f4035b
5f30472f190201fa2e2c395d412213171307122119161f160f0e1817113c
7aba7d77bf85464275a05e206a79243d532f>ONKBAA+Calibri-Bold AddT42Char 
2 2364 336 <0003001bfe9303a203d3003e004e005f0102b10102435558404f0f300703
38234a334ac34a031f4a014ae1c90c01180c010cc953011e530118530153
f1cd150117150100151015020f1515603803f93c482a202c42bc42020042
0142cd384a0f5b0110035bcc40204f00183f1a4ded5f5e5d3fed5d5d1239
3fed1112392f5e5d5d5ded5d5d5dd65d5ded5d5d12173931301b40550f30
070338234a334ac34a030b4a011f4a014ae1c90c01180c010cc953011e53
0118530153f1cd150117150100151015021515603803f93c482a203c42cc
42020442010f00420142cd384a0f5b0110035bcc40204f00183f1a4ded5f
5e5d3fed5d5e5d5d12393fed1112392f5d5d5ded5d5d5dd65d5ded5d5d5d
1217393130590114062323161615140e0223222627060615141617171e03
15140e0223222e0235343e0237262635343637262635343e023332161721
321601342623220e0215141633323e0213342627270e0315141633323e02
03a21610691613346189542b4e150c13332ed94c77512b3a74af7572a167
2f1121301f2b2f362b232a376288522a4d21011b1115febd504925382512
5047263825133b483fb31a1f1306655c394e30140360302e183d214e7953
2b150e0d24161d2502080325435e3c4275563224405935213c373217174f
2f3b61272362494e7b552d0a092cfef94850192b391f444f182a37fd562d
3002051323201e10323417262f00>ONKBAA+Calibri-Bold AddT42Char 
2 2888 346 <0001007efffa03d205700032006db10102435558b9000b025fb2322a14b8
0260b31e2a1910b8ffe8b40b0f014c10b8014d4009402d4a2446194c054c
00183f3f3f3f1a4ded2b1239012fed32d4ed31301bb22a1910b8ffe8b40b
0f014c10b8014d4009402d4a2446194c054c00183f3f3f3f1a4ded2b1239
31305925140e0223222e023511342e022322060711140e0223222e023511
343e0233321e021511363633321e021503d20c1c312425311c0c13243926
3062350c1d302525301d0c0c1d302525301d0c4187495b7d4d22220a0f0a
05050a0f0a01fd414a351d4643fdaf0a0f0a05050a0f0a05230a100b0606
0b100afe13403f3c688b6300>ONKBAA+Calibri-Bold AddT42Char 
2 3140 349 <0002006bfffa018d054e001500210045b10102435558bf001602bf001c00
150260000a001f017bb540191049054c00183f3fd61a4ded012fedd4ed31
301bb9001f017bb540191049054c00183f3fd61a4ded31305925140e0223
222e023511343e0233321e0215131406232226353436333216017a0c1d30
2525301d0c0c1d302525301d0c133e54553b3d55543c220a0f0a05050a0f
0a037a0a0f0b06060b0f0a01304c3a38494c3b39>ONKBAA+Calibri-Bold AddT42Char 
2 3698 374 <0001007efffa03d203d700320081b10102435558b12a13bb0260001e000b
025fb2001e10b8fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d
4a2a192449194c054c00183f3f3f12393f1a4ded2b2b012fd4ed10ed3931
301bb90010fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d4a2a
192449194c054c00183f3f3f12393f1a4ded2b2b31305925140e0223222e
023511342e022322060711140e0223222e023511343e0233321e02151536
3633321e021503d20c1c312425311c0c132439263062350c1d302525301d
0c0a1a291f202a170a4a99535b7d4d22220a0f0a05050a0f0a01fd414a35
1d4643fdaf0a0f0a05050a0f0a037c0a0f0a05050a0f0a6750503c678a61
>ONKBAA+Calibri-Bold AddT42Char 
2 3968 381 <00020048ffe9040403d7001300270071b10102435558bf00140275000000
1e0275000a0019ffe8b40b0f014c19b8011a40090f4a23180b0f014c23b8
011cb240054d00183f1a4ded2b3fed2b012fedd4ed31301bb90019ffe8b4
0b0f014c19b8011a40090f4a23180b0f014c23b8011cb240054d00183f1a
4ded2b3fed2b31305901140e0223222e0235343e0233321e0205342e0223
220e0215141e0233323e0204043c7ab87b77b074383d7ab77b78b07338fe
fd1532533f3854361b1631543e3954361a01e972bc884a427eb87672bd87
4a417eb881426f522e294f6f47426f522d294e6f>ONKBAA+Calibri-Bold AddT42Char 
2 4198 410 <00010017ffec028e04b1003a0093b10102435558b711110d3b2900232db8
025fb2170d2db8ffe8b40b0f014c2db8011fb323481d0db8ffe8b40b0f01
4c0db8011fb2174831b80147b240074d00183f1a4ded3fed2bcd3fed2b01
2f33fd32c4321112392f31301bb9002dffe8b40b0f014c2db8011fb32348
1d0db8ffe8b40b0f014c0db8011fb2174831b80147b240074d00183f1a4d
ed3fed2bcd3fed2b31305925140e0423222e02351123222635343e023333
35343e0233321e02151533321e02151406232311141633323e0233321e02
028e0b12232f371c4b6e48226b1314050a0f0a6a0b1d312425311c0cc20a
0f0a051413c32e3b1420191107060b06057a2c2f130f0b06264f785201c9
2f371d28170ac70a100b05050b100ac70a17281d372ffe5d494907090707
1524>ONKBAA+Calibri-Bold AddT42Char 
2 4724 449 <00010023fffa05d303c600450097b10102435558b71c1d122e2c2c102ab8
0243400b1d10380e1004033a3a103cb8022b400d4003104149334910300b
0f483ab8ffd0b30b0f482cb8ffd0400e0b0f482c3a1003172549174c094c
00183f3f3f1217392b2b2b3f3f01192f18d41a4ded1239192f1239123939
1810d4ed1239192f3939123931301b400f414933492c3a1003172549174c
094c00183f3f3f1217393f3f31305901140607030e0323222e0227032707
030e0323222e022703262635343e0233321e0217131737133e0333321e02
17131737133e0333321e0205d30608ee0510213d31313e2310049602028a
040f243e31323d231004ec09050b1d312528321c0b03b10202a6030d1a2f
25252e1b0b03b20302aa020c1c3025252f1b0a03a00b201efcd911150c04
050c1510021e0909fde211150c04050c151003271d210b0a0f0904040a11
0cfd710c0c028f0c110a0405090f0afd6c0b0c028f0c110a0404090f>ONKBAA+Calibri-Bold AddT42Char 
2 0 0 <00050000fe7303db050e000300070039004d004e0054bc000d019d001700
3a01cbb44444082d07be019d0002002001cb00080001019d401304020d1b
1b3f2335068c035111493f078c0254003ffddeddc63ffddecd12392fcd01
2fddedd6ed10fdc611392fedd4ed3130011121110111211101140e020707
060623222e02352726363333323e0235342623220e0223222e0235343637
3e0333321e0203140e0223222e0235343e0233321e020103dbfc4f0345fd
240279213b533105012b25171f130808031f1e0d2533200f4b4d2336281a
05040806030508072736422355774a22ce0a18271c1d27180a0a18271d1c
27180afdc2050efaf2050efb570444fbbc02e839583e2406790d0b020509
089d281e1524311c3d4b0d0f0d050e1b171a1c0708110e0a2a4861fd991a
25170a0a17251a1c25180a0a1825fd3b>ONKBAA+Calibri-Bold AddT42Char 
ONKBAA+Calibri-Bold /CharStrings get begin
/L 62 def
/W 116 def
/d 282 def
/e 286 def
/g 336 def
/h 346 def
/i 349 def
/n 374 def
/o 381 def
/t 410 def
/w 449 def
end
ONKBAA+Calibri-Bold /Encoding get
dup 76 /L put
dup 87 /W put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 116 /t put
dup 119 /w put
pop
end
%ADOEndSubsetFont
/RGRESL+Calibri-Bold /ONKBAA+Calibri-Bold findfont ct_VMDictPut
/RGRESL+Calibri-Bold*1 
[76{/.notdef}rp /L 10{/.notdef}rp /W 12{/.notdef}rp /d /e /.notdef 
/g /h /i 4{/.notdef}rp /n /o 4{/.notdef}rp /t 
2{/.notdef}rp /w 136{/.notdef}rp]
RGRESL+Calibri-Bold nf
RGRESL+Calibri-Bold*1 [17.0479 0 0 -17.0479 0 0 ]msf
210.79 318.842 mo
(Window)
[15.5103 4.08643 9.21954 9.21954 9.23643 0 ]xsh
%ADOBeginSubsetFont: XOSAAA+Calibri-Bold-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (XOSAAA+Calibri-Bold)
%%Title: (XOSAAA+Calibri-Bold Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /XOSAAA+Calibri-Bold def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-519 -306 1240 971} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 3879 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7A086528E2CBE7FD4F03CC6CDCA18E09BCC917FA5F119478
AAC0A696931453BF661861F40ACE8D15EA0278E8F88478BB0248E8D19042FB8B
7F2BB2D4ECFE961B3EEB80565197E481D427DFF375EC95F16C0E36FE28AEC2A0
702F6CB5ACA5B242B6593847C74B58C6FBE25BCF0D4AFF25D49578CAB0D929B0
25DECF86FE8C45E91FC3804785896842CEEC7085BA98EF5BCC94B208BF43A5FA
51448171853E476E618A0AB76D0CDCEE51B8CF3FCD6DA051824D7EFC40D8D270
BAD39624CE3E5CBFE64B165BA24EF48FCEC82F8DEB8BFCD829A07FF03FFE381E
622BF0967DB53309A79D2F393F52C4B535EC59CAFAAC152061A92D31A3A6E83C
18D63056F4453027EAA702C494809677EB8C59BD219046DE492EABC7DF19D085
C93C98D2A8DDC68AF0F5D7D82447ED6165A8DE95E6965A0F15A3F7696EAE508C
E290FD5B2FFA8A49A20B157645C3C3FEFBC64E2B40E75B90474094AF1599689F
A1EAB0D131F6DB991FC0D5943DE54CA9E5ECDA986A63CDF0394AF79DB398CE8A
C4F02FDBD88EE6AE535CFB6C3B33C157AAFFBEC52BA3DACE77ABDA0C787220FB
A75DA1E45C945> |
3 <001C60D8A8C9B888C146> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /XOSAAA+Calibri-Bold-Identity-H /Identity-H 0 [/XOSAAA+Calibri-Bold] ct_ComposeFont pop end end
%ADOEndSubsetFont
/RGRESM+Calibri-Bold /XOSAAA+Calibri-Bold-Identity-H findfont ct_VMDictPut
RGRESM+Calibri-Bold [17.0479 0 0 -17.0479 0 0 ]msf
270.791 318.842 mo
(\000\003)sh
RGRESL+Calibri-Bold*1 [17.0479 0 0 -17.0479 0 0 ]msf
274.391 318.842 mo
(Length)
[7.17554 8.5394 9.24683 8.03806 5.76559 0 ]xsh
68.9512 34.922 mo
99.5512 34.922 li
99.6712 35.0421 li
99.5512 35.162 li
68.9512 35.162 li
68.8312 35.0421 li
68.9512 34.922 li
.0681163 .69778 1 .00509651 cmyk
f
82.3912 36.842 mo
86.1112 36.842 li
86.1112 33.242 li
82.3912 33.242 li
cp
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: ONKBAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RGRESL+Calibri-Bold gcheck setglobal} if
2 5082 894 <0001006bfe9f021c059000230022bf001a01fa0000001001f90006000302
74b3151f0b85003f2f012ffdd6edd6ed3130010602151412171614060623
222e02272e0335343e02373e0333321e0202175456575206162d281c281b
0f033650351a1b364f35020c182920242e18030558c3fe61dadbfe63c610
17100804070b0768d3d7db7170dbd7d46905080703070e16>RGRESL+Calibri-Bold AddT42Char 
2 5226 895 <00010061fe9f0212059000210024b900000273b2121505bb01fa000f001f
01fbb3151a0a85003f2f012fedd6ed10d6ed313001140e02070e03232226
263437361235340227263e0233321e0217161202121a354f36030f1b281c
292d1606535756550503192d251f281a0b03686c021a71dbd7d368070b07
0408101710c4019fdbda019fc30d160e0703070805d2fe53>RGRESL+Calibri-Bold AddT42Char 
2 316 39 <00010049ffea049b0524003f00dbb10102435558b31c1c0f18b80292b200
270fbb029900340018ffe8b30f014d18b8ffe8b30d014d18b8fff0b30c01
4d18b80127b42222392f3ebb012f0005000affe8b40b0f014c0ab8015b40
09395314180b0f014c14b8015fb2402f5600183f1a4ded2b3ffd2bd4ed11
12392fed2b2b2b012fedd4c4ed12392f31301bb90018ffe8b30f014d18b8
ffe8b30d014d18b8fff0b30c014d18b80127b42222392f3ebb012f000500
0affe8b40b0f014c0ab8015b4009395314180b0f014c14b8015fb2402f56
00183f1a4ded2b3ffd2bd4ed1112392fed2b2b2b31305901140e0223222e
0223220e0215141e02333236371123222635343e023321321e021511140e
0423222e0235343e0233321e04049b05090d090d3a6085585e986c3a3b6a
955a2c5625f51214050a0e0901b51019130a1541606769359bf5aa5a60b0
f999548a67441b0c04451d2a190a242a244177a7656fa9723a1414012c2d
361c26170b0b161f14fdfd1e2d1a1c140a59a9f39a9ffdb15e1721261c33
>RGRESL+Calibri-Bold AddT42Char 
2 3310 373 <0001007efffa060903d7005000abb10102435558b14613b8025fb31e1e32
0ab8025fb2503e27bb026000320010ffe8b40b0f014c10b8014db24b4a24
b8ffe8b40b0f014c24b8014d400e40414a3e462d38492d4c194c054c0018
3f3f3f3f1239393f1a4ded2b3fed2b012fed39d4ed11392fed3931301bb9
0010ffe8b40b0f014c10b8014db24b4a24b8ffe8b40b0f014c24b8014d40
0e40414a3e462d38492d4c194c054c00183f3f3f3f1239393f1a4ded2b3f
ed2b31305925140e0223222e023511342e022322060711140e0223222e02
3511342e022322060711140e0223222e023511343e0233321e0215153636
33321e02173e0333321e021506090c1c302526301d0b112335252d5c360c
1d302425301d0c112236242e5c350c1d302525301d0c0a1a291f202a170a
4a93503758453211284d4b4b27597a4b20220a0f0a05050a0f0a02112d4a
351d4643fdaf0a0f0a05050a0f0a02112d4a351d4643fdaf0a0f0a05050a
0f0a037c0a0f0a05050a0f0a675050172b3c252b3e27133c678a4d00>RGRESL+Calibri-Bold AddT42Char 
RGRESL+Calibri-Bold /CharStrings get begin
/parenleft 894 def
/parenright 895 def
/G 39 def
/m 373 def
end
RGRESL+Calibri-Bold /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 71 /G put
dup 109 /m put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RGRESL+Calibri-Bold*1 
[40{/.notdef}rp /parenleft /parenright 29{/.notdef}rp /G 4{/.notdef}rp /L 10{/.notdef}rp 
/W 12{/.notdef}rp /d /e /.notdef /g /h /i 
3{/.notdef}rp /m /n /o 4{/.notdef}rp /t 2{/.notdef}rp /w 
136{/.notdef}rp]
RGRESL+Calibri-Bold nf
RGRESL+Calibri-Bold*1 [21.9628 0 0 -21.9628 0 0 ]msf
103.031 41.4017 mo
(G\(min\))
[13.9528 6.81499 17.8185 5.36555 11.7567 0 ]xsh
181.271 33.722 mo
211.991 33.722 li
212.711 33.722 213.311 34.322 213.311 35.042 cv
213.311 35.762 212.711 36.362 211.991 36.362 cv
181.271 36.362 li
180.551 36.362 179.951 35.762 179.951 35.042 cv
179.951 34.322 180.551 33.722 181.271 33.722 cv
.69015 .93228 0 0 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: ONKBAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RGRESL+Calibri-Bold gcheck setglobal} if
2 1172 258 <00020047ffe9037603d7003300400129b10102435558b2091734b8025bb4
002727003ab80245401011031701f3170117b80c3401fc340134b8ffc040
090c0d014c34342e412ab80118401be02201037d228d2202402250226022
030f221f22020c042222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a
3db8ffe8400910014d3de4400c4d0400182f3f1a4ded2b3fed2b2b12392f
5f5e5d5d5d5f5ded1112392f2b5d71ed5d71012fedc4392f10ed32393130
1b400f031701f3170117b80c3401fc340134b8ffc040090c0d014c34342e
412ab80118401be02201037d228d2202402250226022030f221f22020c04
2222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a3db8ffe840091001
4d3de4400c4d0400182f3f1a4ded2b3fed2b2b12392f5f5e5d5d5d5f5ded
1112392f2b5d71ed5d7131305925140606232226263535060623222e0235
343e02333335342e0223220e0223222e0235343e0433321e02150723220e
02151416333236370376142b2a2d2911378d56477757303d79b477571127
41303f634c33100b110b060a1c465e6f3b6995602cf7603d563619473f35
592e1f0e100707100e473b4225496c484e734b24362a3f2a141c221c0e1a
26171f241d231e132955865cda122433213840363400>RGRESL+Calibri-Bold AddT42Char 
2 4500 448 <00010016fffa03b303c6002c0055b10102435558b210211fb80284b64015
2120062123b8025d400c400020212849210b1a490b4c00183f3f12393f01
192f1a18dd1a4ded12391a10dd1aed123931301bb72849210b1a490b4c00
183f3f12393f31305901140e0207010e0323222e0227012e0235343e0233
321e0217131737133e0333321e0203b301030504fef40511274336354326
1105fef40607010b1c312529321d0c04cb0606c8030d1c2f26252f1a0a03
9f050e11160efcd911150c04050c1510032714200e060a0f0a040509110c
fd711919028f0c110905040a0f00>RGRESL+Calibri-Bold AddT42Char 
RGRESL+Calibri-Bold /CharStrings get begin
/a 258 def
/v 448 def
end
RGRESL+Calibri-Bold /Encoding get
dup 97 /a put
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RGRESL+Calibri-Bold*1 
[40{/.notdef}rp /parenleft /parenright 29{/.notdef}rp /G 4{/.notdef}rp /L 10{/.notdef}rp 
/W 9{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef /g 
/h /i 3{/.notdef}rp /m /n /o 4{/.notdef}rp /t 
/.notdef /v /w 136{/.notdef}rp]
RGRESL+Calibri-Bold nf
RGRESL+Calibri-Bold*1 [21.9628 0 0 -21.9628 0 0 ]msf
215.351 41.4017 mo
(G\(avg\))
[14.0539 6.72931 10.9134 10.3161 10.1973 0 ]xsh
290.231 33.842 mo
295.031 33.842 li
295.631 33.842 296.231 34.322 296.231 35.042 cv
296.231 35.642 295.631 36.242 295.031 36.242 cv
290.231 36.242 li
289.511 36.242 289.031 35.642 289.031 35.042 cv
289.031 34.322 289.511 33.842 290.231 33.842 cv
cp
299.831 33.842 mo
304.631 33.842 li
305.231 33.842 305.831 34.322 305.831 35.042 cv
305.831 35.642 305.231 36.242 304.631 36.242 cv
299.831 36.242 li
299.111 36.242 298.631 35.642 298.631 35.042 cv
298.631 34.322 299.111 33.842 299.831 33.842 cv
cp
309.431 33.842 mo
314.231 33.842 li
314.831 33.842 315.431 34.322 315.431 35.042 cv
315.431 35.642 314.831 36.242 314.231 36.242 cv
309.431 36.242 li
308.711 36.242 308.231 35.642 308.231 35.042 cv
308.231 34.322 308.711 33.842 309.431 33.842 cv
cp
319.031 33.842 mo
320.951 33.842 li
321.551 33.842 322.151 34.322 322.151 35.042 cv
322.151 35.642 321.551 36.242 320.951 36.242 cv
319.031 36.242 li
318.311 36.242 317.831 35.642 317.831 35.042 cv
317.831 34.322 318.311 33.842 319.031 33.842 cv
0 0 0 1 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
RGRESL+Calibri-Bold*1 [21.9628 0 0 -21.9628 0 0 ]msf
324.311 41.4017 mo
(L\(min\))
[9.20911 6.97089 17.7746 5.32162 11.7128 0 ]xsh
397.991 33.842 mo
402.791 33.842 li
403.391 33.842 403.991 34.322 403.991 35.042 cv
403.991 35.642 403.391 36.242 402.791 36.242 cv
397.991 36.242 li
397.271 36.242 396.791 35.642 396.791 35.042 cv
396.791 34.322 397.271 33.842 397.991 33.842 cv
cp
407.591 33.842 mo
412.391 33.842 li
412.991 33.842 413.591 34.322 413.591 35.042 cv
413.591 35.642 412.991 36.242 412.391 36.242 cv
407.591 36.242 li
406.871 36.242 406.391 35.642 406.391 35.042 cv
406.391 34.322 406.871 33.842 407.591 33.842 cv
cp
417.191 33.842 mo
421.991 33.842 li
422.591 33.842 423.191 34.322 423.191 35.042 cv
423.191 35.642 422.591 36.242 421.991 36.242 cv
417.191 36.242 li
416.471 36.242 415.991 35.642 415.991 35.042 cv
415.991 34.322 416.471 33.842 417.191 33.842 cv
cp
426.791 33.842 mo
428.591 33.842 li
429.191 33.842 429.791 34.322 429.791 35.042 cv
429.791 35.642 429.191 36.242 428.591 36.242 cv
426.791 36.242 li
426.071 36.242 425.591 35.642 425.591 35.042 cv
425.591 34.322 426.071 33.842 426.791 33.842 cv
0 0 0 1 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
RGRESL+Calibri-Bold*1 [21.9628 0 0 -21.9628 0 0 ]msf
432.071 41.4017 mo
(L\(avg\))
[9.27719 6.83911 10.8365 10.1975 10.3972 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/RGRESL+Calibri-Bold*1 uf
/RGRESL+Calibri-Bold uf
/ONKBAA+Calibri-Bold uf
/RGRESM+Calibri-Bold-Identity-H uf
/RGRESM+Calibri-Bold /CIDFont ur
/RGRESK+Calibri*1 uf
/RGRESK+Calibri uf
/DMSAAA+Calibri uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
